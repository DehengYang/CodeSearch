-------- Original Code ---------
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int index=start;index<=end;index++){
XYDataItem item=(XYDataItem)this.data.get(index);
XYDataItem clone=(XYDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Unable to add cloned data item.");
}

}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<929,938>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=start;index<=end;index++){
TimePeriodValue item=(TimePeriodValue)this.data.get(index);
TimePeriodValue clone=(TimePeriodValue)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Failed to add cloned item.");
}

}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<502,511>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1059,1069>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1059,1069>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem item=(XYDataItem)this.data.get(index);
return (XYDataItem)item.clone();

2.6184563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<619,620>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
return (TimeSeriesDataItem)item.clone();

2.6184563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<389,390>

-------- No Patch ---------


-------- Similar Code ---------
SpiderWebPlot clone=(SpiderWebPlot)super.clone();
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
return clone;

2.387287358879696
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1610,1617>

-------- No Patch ---------


-------- Similar Code ---------
XYLineAndShapeRenderer clone=(XYLineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.383794911440651
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1153,1163>


-------- Patch ---------
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DefaultIntervalCategoryDataset clone=(DefaultIntervalCategoryDataset)super.clone();
clone.categoryKeys=(Comparable[])this.categoryKeys.clone();
clone.seriesKeys=(Comparable[])this.seriesKeys.clone();
clone.startData=clone(this.startData);
clone.endData=clone(this.endData);
return clone;

2.3815485215274013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java<753,759>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}

2.375114192878624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<521,526>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}

2.375114192878624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<233,238>

-------- No Patch ---------


-------- Similar Code ---------
LegendItem clone=(LegendItem)super.clone();
if(this.seriesKey instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.seriesKey;
clone.seriesKey=(Comparable)pc.clone();
}
clone.shape=ShapeUtilities.clone(this.shape);
if(this.fillPaintTransformer instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.fillPaintTransformer;
clone.fillPaintTransformer=(GradientPaintTransformer)pc.clone();
}
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.366441062562242
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItem.java<1124,1137>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.seriesKey=(Comparable)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.shape=ShapeUtilities.clone(this.shape);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.fillPaintTransformer;
clone.fillPaintTransformer=(GradientPaintTransformer)pc.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.line=ShapeUtilities.clone(this.line);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AbstractXYItemRenderer clone=(AbstractXYItemRenderer)super.clone();
clone.itemLabelGeneratorList=(ObjectList)this.itemLabelGeneratorList.clone();
if(this.baseItemLabelGenerator!=null&&this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(XYItemLabelGenerator)pc.clone();
}
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
if(this.baseToolTipGenerator!=null&&this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(XYToolTipGenerator)pc.clone();
}

2.348706498473768
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1701,1718>


-------- Patch ---------
clone.itemLabelGeneratorList=(ObjectList)this.itemLabelGeneratorList.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AbstractXYItemLabelGenerator clone=(AbstractXYItemLabelGenerator)super.clone();
if(this.xFormat!=null){
clone.xFormat=(NumberFormat)this.xFormat.clone();
}
if(this.yFormat!=null){
clone.yFormat=(NumberFormat)this.yFormat.clone();
}
if(this.xDateFormat!=null){
clone.xDateFormat=(DateFormat)this.xDateFormat.clone();
}
if(this.yDateFormat!=null){
clone.yDateFormat=(DateFormat)this.yDateFormat.clone();
}
return clone;

2.3285558096188463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<362,376>


-------- Patch ---------
if(this.end!=null){
clone.yFormat=(NumberFormat)this.yFormat.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.item!=null){
clone.xDateFormat=(DateFormat)this.xDateFormat.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.data!=null){
clone.yDateFormat=(DateFormat)this.yDateFormat.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AbstractRenderer clone=(AbstractRenderer)super.clone();
if(this.seriesVisibleList!=null){
clone.seriesVisibleList=(BooleanList)this.seriesVisibleList.clone();
}
if(this.seriesVisibleInLegendList!=null){
clone.seriesVisibleInLegendList=(BooleanList)this.seriesVisibleInLegendList.clone();
}
if(this.paintList!=null){
clone.paintList=(PaintList)this.paintList.clone();
}
if(this.fillPaintList!=null){
clone.fillPaintList=(PaintList)this.fillPaintList.clone();
}

2.32832554230792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3162,3182>


-------- Patch ---------
if(this.end!=null){
clone.seriesVisibleInLegendList=(BooleanList)this.seriesVisibleInLegendList.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.copy!=null){
clone.paintList=(PaintList)this.paintList.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.data!=null){
clone.fillPaintList=(PaintList)this.fillPaintList.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
LineAndShapeRenderer clone=(LineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.2937717649575355
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java<918,925>

-------- No Patch ---------


-------- Similar Code ---------
DefaultKeyedValues clone=(DefaultKeyedValues)super.clone();
clone.keys=(ArrayList)this.keys.clone();
clone.values=(ArrayList)this.values.clone();
clone.indexMap=(HashMap)this.indexMap.clone();
return clone;

2.2937717649575355
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<462,466>

-------- No Patch ---------


-------- Similar Code ---------
LegendGraphic clone=(LegendGraphic)super.clone();
clone.shape=ShapeUtilities.clone(this.shape);
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.1895529541537946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendGraphic.java<719,722>

-------- No Patch ---------


-------- Similar Code ---------
StandardXYItemRenderer clone=(StandardXYItemRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

2.1833071354980036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<987,991>

-------- No Patch ---------


-------- Similar Code ---------
RelativeDateFormat clone=(RelativeDateFormat)super.clone();
clone.dayFormatter=(NumberFormat)this.dayFormatter.clone();
clone.secondFormatter=(NumberFormat)this.secondFormatter.clone();
return clone;

2.1740967353579594
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RelativeDateFormat.java<589,592>

-------- No Patch ---------


-------- Similar Code ---------
TimeTableXYDataset clone=(TimeTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

2.1740967353579594
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<598,601>

-------- No Patch ---------


-------- Similar Code ---------
AbstractBlock clone=(AbstractBlock)super.clone();
clone.bounds=(Rectangle2D)ShapeUtilities.clone(this.bounds);
if(this.frame instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.frame;
clone.frame=(BlockFrame)pc.clone();
}
return clone;

2.1652378312942195
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/AbstractBlock.java<596,602>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.frame=(BlockFrame)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.bounds=(Rectangle2D)ShapeUtilities.clone(this.bounds);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
clone.foregroundDomainMarkers=(Map)ObjectUtilities.clone(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=(Map)ObjectUtilities.clone(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=(Map)ObjectUtilities.clone(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=(Map)ObjectUtilities.clone(this.backgroundRangeMarkers);
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}

2.16488551753286
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5698,5714>


-------- Patch ---------
clone.foregroundDomainMarkers=(Map)ObjectUtilities.clone(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundDomainMarkers=(Map)ObjectUtilities.clone(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundRangeMarkers=(Map)ObjectUtilities.clone(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundRangeMarkers=(Map)ObjectUtilities.clone(this.backgroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AbstractPieItemLabelGenerator clone=(AbstractPieItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.percentFormat!=null){
clone.percentFormat=(NumberFormat)this.percentFormat.clone();
}
return clone;

2.1343804086488265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java<236,244>


-------- Patch ---------
if(this.item!=null){
clone.percentFormat=(NumberFormat)this.percentFormat.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AbstractCategoryItemLabelGenerator clone=(AbstractCategoryItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.dateFormat!=null){
clone.dateFormat=(DateFormat)this.dateFormat.clone();
}
return clone;

2.1343804086488265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java<323,331>


-------- Patch ---------
if(this.data!=null){
clone.dateFormat=(DateFormat)this.dateFormat.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
HighLowItemLabelGenerator clone=(HighLowItemLabelGenerator)super.clone();
if(this.dateFormatter!=null){
clone.dateFormatter=(DateFormat)this.dateFormatter.clone();
}
if(this.numberFormatter!=null){
clone.numberFormatter=(NumberFormat)this.numberFormatter.clone();
}
return clone;

2.1343804086488265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/HighLowItemLabelGenerator.java<185,195>


-------- Patch ---------
if(this.data!=null){
clone.numberFormatter=(NumberFormat)this.numberFormatter.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
PiePlot clone=(PiePlot)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
if(this.urlGenerator instanceof PublicCloneable){
clone.urlGenerator=(PieURLGenerator)ObjectUtilities.clone(this.urlGenerator);
}
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
if(this.legendLabelGenerator!=null){
clone.legendLabelGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelGenerator);
}

2.133997398598239
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3636,3648>


-------- Patch ---------
if(this.end instanceof PublicCloneable){
clone.urlGenerator=(PieURLGenerator)ObjectUtilities.clone(this.urlGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DefaultPieDataset clone=(DefaultPieDataset)super.clone();
clone.data=(KeyedObjects)this.data.clone();
return clone;

2.124075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<390,392>

-------- No Patch ---------


-------- Similar Code ---------
DefaultCategoryDataset clone=(DefaultCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.124075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<459,461>

-------- No Patch ---------


-------- Similar Code ---------
DefaultMultiValueCategoryDataset clone=(DefaultMultiValueCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.124075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<401,404>

-------- No Patch ---------


-------- Similar Code ---------
DefaultBoxAndWhiskerCategoryDataset clone=(DefaultBoxAndWhiskerCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.124075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<916,919>

-------- No Patch ---------


-------- Similar Code ---------
DefaultStatisticalCategoryDataset clone=(DefaultStatisticalCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.124075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<728,731>

-------- No Patch ---------


-------- Similar Code ---------
if(this.sortRowKeys){
rowIndex=-rowIndex-1;
this.rowKeys.add(rowIndex,rowKey);
this.rows.add(rowIndex,row);
}else {
this.rowKeys.add(rowKey);
this.rows.add(row);
}

2.113582486251294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<328,336>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drState.lowerCoordinates.add(new double[]{yyLow,xx});
drState.upperCoordinates.add(new double[]{yyHigh,xx});
}else if(orientation==PlotOrientation.VERTICAL){
drState.lowerCoordinates.add(new double[]{xx,yyLow});
drState.upperCoordinates.add(new double[]{xx,yyHigh});
}

2.11163247337792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<286,293>

-------- No Patch ---------


-------- Similar Code ---------
KeyToGroupMap result=(KeyToGroupMap)super.clone();
result.defaultGroup=(Comparable)KeyToGroupMap.clone(this.defaultGroup);
result.groups=(List)KeyToGroupMap.clone(this.groups);
result.keyToGroupMap=(Map)KeyToGroupMap.clone(this.keyToGroupMap);
return result;

2.110095963185884
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<259,264>

-------- No Patch ---------


-------- Similar Code ---------
item=(XYDataItem)item.clone();
if(this.autoSort){
this.data.add(-index-1,item);
}else {
this.data.add(item);
}
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
XYDataItem removed=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}

2.0956506221068754
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<833,846>


-------- Patch ---------
clone=(XYDataItem)item.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
updateBoundsForAddedItem(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(getItemCount()>this.end){
XYDataItem index=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<seriesCount;i++){
XYSeries series=(XYSeries)this.data.get(i);
clone.data.add(series.clone());
}

2.0894350081793083
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<548,551>


-------- Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.data.add(item.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
while(high-low>1){
int current=(low+high)/2;
item=(PaintItem)this.lookupTable.get(current);
if(value>=item.value){
low=current;
}else {
high=current;
}
}
if(high>low){
item=(PaintItem)this.lookupTable.get(high);
if(value<item.value){
item=(PaintItem)this.lookupTable.get(low);
}
}
return (item!=null?item.paint:this.defaultPaint);

2.0518516035026835
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<293,309>

-------- No Patch ---------


-------- Similar Code ---------
Comparable result=null;
KeyedObject item=(KeyedObject)this.data.get(index);
if(item!=null){
result=item.getKey();
}
return result;

2.045949886402205
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<115,120>

-------- No Patch ---------


-------- Similar Code ---------
Plot clone=(Plot)super.clone();
if(this.datasetGroup!=null){
clone.datasetGroup=(DatasetGroup)ObjectUtilities.clone(this.datasetGroup);
}
clone.drawingSupplier=(DrawingSupplier)ObjectUtilities.clone(this.drawingSupplier);
clone.listenerList=new EventListenerList();
return clone;

2.018737002124668
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1378,1388>


-------- Patch ---------
clone.drawingSupplier=(DrawingSupplier)ObjectUtilities.clone(this.drawingSupplier);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.listenerList=new EventListenerList();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
MultiplePiePlot clone=(MultiplePiePlot)super.clone();
clone.pieChart=(JFreeChart)this.pieChart.clone();
clone.sectionPaints=new HashMap(this.sectionPaints);
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
return clone;

2.0150818211815524
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<658,662>

-------- No Patch ---------


-------- Similar Code ---------
XYDifferenceRenderer clone=(XYDifferenceRenderer)super.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

2.0136241116594316
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<1191,1193>

-------- No Patch ---------


-------- Similar Code ---------
XYAreaRenderer clone=(XYAreaRenderer)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

2.0136241116594316
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<695,697>

-------- No Patch ---------


-------- Similar Code ---------
XYAreaRenderer2 clone=(XYAreaRenderer2)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

2.0136241116594316
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<413,415>

-------- No Patch ---------


-------- Similar Code ---------
DefaultHeatMapDataset clone=(DefaultHeatMapDataset)super.clone();
clone.zValues=DataUtilities.clone(this.zValues);
return clone;

2.0136241116594316
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DefaultHeatMapDataset.java<319,321>

-------- No Patch ---------


-------- Similar Code ---------
ScatterRenderer clone=(ScatterRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

1.9990755590960338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<562,565>

-------- No Patch ---------


-------- Similar Code ---------
DefaultPolarItemRenderer clone=(DefaultPolarItemRenderer)super.clone();
clone.seriesFilled=(BooleanList)this.seriesFilled.clone();
return clone;

1.9990755590960338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java<335,338>

-------- No Patch ---------


-------- Similar Code ---------
LogFormat clone=(LogFormat)super.clone();
clone.formatter=(NumberFormat)this.formatter.clone();
return clone;

1.9990755590960338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/LogFormat.java<258,260>

-------- No Patch ---------


-------- Similar Code ---------
XYTaskDataset clone=(XYTaskDataset)super.clone();
clone.underlying=(TaskSeriesCollection)this.underlying.clone();
return clone;

1.9990755590960338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<460,462>

-------- No Patch ---------


-------- Similar Code ---------
{
item=(TimeSeriesDataItem)item.clone();
this.data.add(-index-1,item);
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
TimeSeriesDataItem d=(TimeSeriesDataItem)this.data.remove(0);
updateBoundsForRemovedItem(d);
}
}

1.9987048340855433
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<847,857>


-------- Patch ---------
for(int index=start;index<=end;index++){
updateBoundsForRemovedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=start;i<=end;i++){
working.add(values.get(i));
}

1.997695068455689
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<269,271>

-------- No Patch ---------


-------- Similar Code ---------
SamplingXYLineRenderer clone=(SamplingXYLineRenderer)super.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
return clone;

1.9919705964304932
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<308,312>

-------- No Patch ---------


-------- Similar Code ---------
XYShapeRenderer clone=(XYShapeRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<570,575>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.paintScale=(PaintScale)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYBlockRenderer clone=(XYBlockRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<439,444>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
clone.paintScale=(PaintScale)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
SlidingGanttCategoryDataset clone=(SlidingGanttCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(GanttCategoryDataset)pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<604,610>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.underlying=(GanttCategoryDataset)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
SlidingCategoryDataset clone=(SlidingCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(CategoryDataset)pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<345,350>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.underlying=(CategoryDataset)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
KeyedObject clone=(KeyedObject)super.clone();
if(this.object instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.object;
clone.object=pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObject.java<114,119>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.object=item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYBarDataset clone=(XYBarDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(XYDataset)pc.clone();
}
return clone;

1.982397436763585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<376,381>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.underlying=(XYDataset)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DateAxis clone=(DateAxis)super.clone();
if(this.dateFormatOverride!=null){
clone.dateFormatOverride=(DateFormat)this.dateFormatOverride.clone();
}
return clone;

1.978178701798979
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1941,1948>

-------- No Patch ---------


-------- Similar Code ---------
NumberAxis clone=(NumberAxis)super.clone();
if(this.numberFormatOverride!=null){
clone.numberFormatOverride=(NumberFormat)this.numberFormatOverride.clone();
}
return clone;

1.978178701798979
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1365,1370>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries series=(TaskSeries)this.data.get(index);
return series.getKey();

1.9684563530497263
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<240,241>

-------- No Patch ---------


-------- Similar Code ---------
XYBarRenderer result=(XYBarRenderer)super.clone();
if(this.gradientPaintTransformer!=null){
result.gradientPaintTransformer=(GradientPaintTransformer)ObjectUtilities.clone(this.gradientPaintTransformer);
}
result.legendBar=ShapeUtilities.clone(this.legendBar);
return result;

1.9678019704629448
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1265,1271>


-------- Patch ---------
result.legendBar=ShapeUtilities.clone(this.legendBar);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.rect1!=null){
clone.rect1=(Rectangle2D)this.rect1.clone();
}
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int i=0;i<this.datasets.length;++i){
if(clone.datasets[i]!=null){
clone.datasets[i].addChangeListener(clone);
}
}
return clone;

1.9620393617737588
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<818,830>


-------- Patch ---------
clone.datasets=(ValueDataset[])this.datasets.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.rect1!=null){
clone.rect1=(Rectangle2D)this.rect1.clone();
}
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int i=0;i<this.datasets.length;++i){
if(clone.datasets[i]!=null){
clone.datasets[i].addChangeListener(clone);
}
}
return clone;

1.9620393617737588
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<818,830>


-------- Repeated Patch ---------
clone.datasets=(ValueDataset[])this.datasets.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYSeriesCollection clone=(XYSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.intervalDelegate=(IntervalXYDelegate)this.intervalDelegate.clone();
return clone;

1.9610849132757813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<502,506>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesCollection clone=(TimeSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

1.9610849132757813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<784,787>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendShapeList!=null){
clone.legendShapeList=(ShapeList)this.legendShapeList.clone();
}
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}
clone.listenerList=new EventListenerList();
return clone;

1.9558602896108852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3249,3260>


-------- Patch ---------
if(this.data!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.item!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.9529991153553792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<367,368>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.9529991153553792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
ThermometerPlot clone=(ThermometerPlot)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
clone.rangeAxis=(ValueAxis)ObjectUtilities.clone(this.rangeAxis);
if(clone.rangeAxis!=null){
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}
clone.valueFormat=(NumberFormat)this.valueFormat.clone();
clone.subrangePaint=(Paint[])this.subrangePaint.clone();
return clone;

1.9231043268385646
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1564,1577>


-------- Patch ---------
clone.rangeAxis=(ValueAxis)ObjectUtilities.clone(this.rangeAxis);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(clone.rangeAxis!=null){
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.valueFormat=(NumberFormat)this.valueFormat.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.subrangePaint=(Paint[])this.subrangePaint.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Integer key=new Integer(index);
List result=new ArrayList();
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(key.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(key)){
result.add(this.datasets.get(i));
}
}
}
return result;

1.9206814426165812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4444,4460>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item==null){
if(clone.equals(ZERO)){
new ArrayList().add(this.copy.get(index));
}
}else {
if(item.contains(clone)){
new ArrayList().add(this.copy.get(index));
}
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9201245861172387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<426,433>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9201245861172387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<269,276>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9201245861172387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<314,321>

-------- No Patch ---------


-------- Similar Code ---------
PeriodAxis clone=(PeriodAxis)super.clone();
clone.timeZone=(TimeZone)this.timeZone.clone();
clone.labelInfo=new PeriodAxisLabelInfo[this.labelInfo.length];
for(int i=0;i<this.labelInfo.length;i++){
clone.labelInfo[i]=this.labelInfo[i];
}
return clone;

1.9183701842326721
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<1161,1168>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.timeZone=(TimeZone)this.timeZone.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.labelInfo=new PeriodAxisLabelInfo[this.labelInfo.end];
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.9077384722744002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2645,2652>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.9077384722744002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2930,2937>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.9077384722744002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2701,2708>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.9077384722744002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2940,2947>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(index);
if(xAxis!=null){
axisCollection.add(xAxis,getDomainAxisEdge(index));
}
}

1.8932761923965074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3885,3890>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(clone!=null){
data.add(clone,getDomainAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

1.8932761923965074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3893,3898>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(clone!=null){
data.add(clone,getRangeAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(index);
if(axis!=null){
axisCollection.add(axis,getDomainAxisEdge(index));
}
}

1.8932761923965074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3722,3727>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(clone!=null){
data.add(clone,getDomainAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(clone!=null){
data.add(clone,getDomainAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

1.8932761923965074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3730,3735>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(clone!=null){
data.add(clone,getRangeAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(clone!=null){
data.add(clone,getRangeAxisEdge(index));
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
interior.add(this.backgroundPaintSample);
interior.add(button);
if(this.plotOrientation!=null){
boolean isVertical=this.plotOrientation.equals(PlotOrientation.VERTICAL);
int index=isVertical?ORIENTATION_VERTICAL:ORIENTATION_HORIZONTAL;
interior.add(new JLabel(localizationResources.getString("Orientation")));
this.orientationCombo=new JComboBox(orientationNames);
this.orientationCombo.setSelectedIndex(index);
this.orientationCombo.setActionCommand("Orientation");
this.orientationCombo.addActionListener(this);
interior.add(new JPanel());
interior.add(this.orientationCombo);
}

1.8534936647359426
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<254,270>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
CategoryAxis clonedAxis=(CategoryAxis)xAxis.clone();
clone.setDomainAxis(i,clonedAxis);
}
}
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
clone.rangeAxes=new ObjectList();
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
ValueAxis clonedAxis=(ValueAxis)yAxis.clone();
clone.setRangeAxis(i,clonedAxis);
}
}

1.852516774751717
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5101,5118>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.rangeAxes=new ObjectList();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getX();

1.8465742956544586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<222,224>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindDirection();

1.8465742956544586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<251,253>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindForce();

1.8465742956544586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<266,268>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.entities.size();i++){
ChartEntity entity=(ChartEntity)this.entities.get(i);
clone.entities.add(entity.clone());
}

1.843833128863265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<199,202>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.entities.add(item.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplotInfo.size();i++){
PlotRenderingInfo info=(PlotRenderingInfo)this.subplotInfo.get(i);
clone.subplotInfo.add(info.clone());
}

1.843833128863265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PlotRenderingInfo.java<254,258>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.subplotInfo.add(item.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.rangeAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}
clone.rangeAxisLocations=(ObjectList)ObjectUtilities.clone(this.rangeAxisLocations);
clone.datasets=(ObjectList)ObjectUtilities.clone(this.datasets);

1.8391870818858587
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5661,5674>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.rangeAxisLocations=(ObjectList)ObjectUtilities.clone(this.rangeAxisLocations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.datasets=(ObjectList)ObjectUtilities.clone(this.datasets);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.domainAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
clone.rangeAxes=(ObjectList)ObjectUtilities.clone(this.rangeAxes);

1.8382341751346472
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5648,5660>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.rangeAxes=(ObjectList)ObjectUtilities.clone(this.rangeAxes);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TimeSeriesDataItem existing=(TimeSeriesDataItem)this.data.get(index);
overwritten=(TimeSeriesDataItem)existing.clone();
boolean iterate=false;
Number oldYN=existing.getValue();
double oldY=oldYN!=null?oldYN.doubleValue():Double.NaN;
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setValue(item.getValue());

1.8342741274761485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<826,837>


-------- Patch ---------
(TimeSeriesDataItem)this.data.get(index).setValue(copy.getValue());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number result=null;
DefaultKeyedValues rowData=(DefaultKeyedValues)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getValue(index);
}
}
return result;

1.8239913547215854
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<144,155>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(CategoryAxis)this.domainAxes.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<760,762>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<881,883>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1041,1043>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1164,1166>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(CategoryDataset)this.datasets.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1321,1323>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(CategoryItemRenderer)this.renderers.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(ValueAxis)this.domainAxes.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<819,821>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1007,1009>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1183,1185>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1307,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(XYDataset)this.datasets.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1400,1402>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(XYItemRenderer)this.renderers.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1613,1615>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(ValueDataset)this.datasets.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<471,473>

-------- No Patch ---------


-------- Similar Code ---------
if(this.scales.size()>index){
result=(DialScale)this.scales.get(index);
}

1.8188702513902166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<674,676>

-------- No Patch ---------


-------- Similar Code ---------
KeyedObjects clone=(KeyedObjects)super.clone();
clone.data=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
clone.data.add(ko.clone());
}
return clone;

1.8163396076501075
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<325,332>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
clone.data.add(item.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.data=new java.util.ArrayList();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

1.8071052253376152
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<278,285>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.8000438034211446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2530,2541>


-------- Patch ---------
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.8000438034211446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2804,2815>


-------- Repeated Patch ---------
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.8000438034211446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4212,4223>


-------- Repeated Patch ---------
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.8000438034211446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4238,4249>


-------- Repeated Patch ---------
if(null!=null){
result=Collections.unmodifiableCollection(result);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Object result=null;
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
if(columnKey!=null){
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getObject(columnKey);
}
}
}
return result;

1.7968117539764736
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<112,123>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.7937323921631814
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4427,4440>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.7937323921631814
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4457,4470>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
return (TickUnit)this.tickUnits.get(index);
}else {
index=-(index+1);
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));
}

1.7815419949421343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<153,161>

-------- No Patch ---------


-------- Similar Code ---------
this.blocks.add(block);
this.arrangement.add(block,key);

1.781256705192587
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BlockContainer.java<158,159>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_minuendAtIntersect){
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.7634554918096101
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<578,581>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_subtrahendAtIntersect){
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.7634554918096101
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<600,603>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.get(i)==dataset){
result=(CategoryItemRenderer)this.renderers.get(i);
break;
}

1.7535389854309034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1710,1713>

-------- No Patch ---------


-------- Similar Code ---------
JFreeChart chart=(JFreeChart)super.clone();
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
if(this.title!=null){
chart.title=(TextTitle)this.title.clone();
chart.title.addChangeListener(chart);
}
chart.subtitles=new ArrayList();
for(int i=0;i<getSubtitleCount();i++){
Title subtitle=(Title)getSubtitle(i).clone();
chart.subtitles.add(subtitle);
subtitle.addChangeListener(chart);
}

1.7434956464007134
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1713,1730>


-------- Patch ---------
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
chart.subtitles=new ArrayList();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(n>0){
result.add(period,sum/n);
}else {
result.add(period,null);
}

1.7405967373014974
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<164,169>

-------- No Patch ---------


-------- Similar Code ---------
if(n>0){
result.add(x,sum/n);
}else {
result.add(x,null);
}

1.7405967373014974
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<346,351>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries clone=(XYSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<908,910>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeriesCollection clone=(VectorSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<328,331>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeriesCollection clone=(YIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<353,356>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeriesCollection clone=(XIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<355,358>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries clone=(TimeSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1031,1033>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeriesCollection clone=(OHLCSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.7386241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<485,488>

-------- No Patch ---------


-------- Similar Code ---------
PaintItem item=new PaintItem(value,paint);
int index=Collections.binarySearch(this.lookupTable,item);
if(index>=0){
this.lookupTable.set(index,item);
}else {
this.lookupTable.add(-(index+1),item);
}

1.7383266550448535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<250,257>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<legendItems.getItemCount();i++){
LegendItem item=legendItems.get(i);
Block block=createLegendItemBlock(item);
this.items.add(block);
}

1.7365055226336825
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<414,418>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
MeterPlot clone=(MeterPlot)super.clone();
clone.tickLabelFormat=(NumberFormat)this.tickLabelFormat.clone();
clone.intervals=new java.util.ArrayList(this.intervals);
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
return clone;

1.7358751451436967
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<1329,1336>


-------- Patch ---------
clone.tickLabelFormat=(NumberFormat)this.tickLabelFormat.clone();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.intervals=new java.util.ArrayList(this.intervals);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(seriesIndex+1);

1.7341285531692914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<443,444>

-------- No Patch ---------


-------- Similar Code ---------
if(get(r,c)!=that.get(r,c)){
return false;
}

1.7338035778412513
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<229,231>

-------- No Patch ---------


-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(0);

1.7217648016985405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<428,429>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (List)map.get("bins");

1.7217648016985405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<272,273>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (Comparable)map.get("key");

1.7217648016985405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

1.718646186304977
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1724,1741>


-------- Patch ---------
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}

1.718646186304977
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1728,1745>


-------- Repeated Patch ---------
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getX(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<215,216>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<229,230>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getX(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<172,173>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<186,187>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<200,201>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<330,331>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<283,284>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return ts.getValue(item);

1.7177049977083203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<476,477>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
boolean iterate=false;
Number oldYN=item.getValue();
if(oldYN!=null){
double oldY=oldYN.doubleValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
}
item.setValue(value);

1.711740008870533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<721,730>


-------- Patch ---------
item.setValue(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TextLine last=null;
 final int index=this.lines.size()-1;
if(index>=0){
last=(TextLine)this.lines.get(index);
}
return last;

1.7106846142005412
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextBlock.java<137,142>

-------- No Patch ---------


-------- Similar Code ---------
for(int itemNo=0;itemNo<series.getItemCount();itemNo++){
Number xValue=series.getX(itemNo);
seriesXPoints.add(xValue);
if(!this.xPoints.contains(xValue)){
this.xPoints.add(xValue);
int seriesCount=this.data.size();
for(int seriesNo=0;seriesNo<seriesCount;seriesNo++){
XYSeries dataSeries=(XYSeries)this.data.get(seriesNo);
if(!dataSeries.equals(series)){
dataSeries.add(xValue,null);
}
}
}
}

1.7052528611554967
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<175,188>


-------- Patch ---------
for(int index=start;index<=end;index++){
data.add(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(value<item.value){
item=(PaintItem)this.lookupTable.get(low);
}

1.697396516376542
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<305,307>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6938756261009673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2457,2474>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6938756261009673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2729,2746>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6938756261009673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2612,2629>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6938756261009673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2813,2830>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYValue(item));

1.6867388108529109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<214,215>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYLowValue(item));

1.6867388108529109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<253,254>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYHighValue(item));

1.6867388108529109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<266,267>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
CategoryDataset dataset=(CategoryDataset)this.datasets.get(i);
if(mappedAxes==null){
if(key.equals(ZERO)){
if(dataset!=null){
result.add(dataset);
}
}
}else {
if(mappedAxes.contains(key)){
if(dataset!=null){
result.add(dataset);
}
}
}
}

1.6779809652964408
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4413,4431>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
DefaultXYDataset clone=(DefaultXYDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
clone.seriesList.add(i,new double[][]{xx,yy});
}
return clone;
}

1.6630515860872275
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<362,377>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[1],0,new double[y.length],0,y.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.seriesList.add(index,new double[][]{new double[x.length],new double[y.length]});
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
System.arraycopy(data[1],0,new double[y.length],0,y.length);
clone.seriesList.add(index,new double[][]{new double[x.length],new double[y.length]});

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
ComparableObjectItem item=getDataItem(index);
item.setObject(y);
fireSeriesChanged();

1.6627304766889965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<320,322>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValue item=getDataItem(index);
item.setValue(value);
fireSeriesChanged();

1.6627304766889965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<387,389>

-------- No Patch ---------


-------- Similar Code ---------
DefaultOHLCDataset clone=(DefaultOHLCDataset)super.clone();
clone.data=new OHLCDataItem[this.data.length];
System.arraycopy(this.data,0,clone.data,0,this.data.length);
return clone;

1.6571869158575963
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<333,336>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getFirstMillisecond(this.workingCalendar));

1.657135660783959
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<448,450>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getLastMillisecond(this.workingCalendar));

1.657135660783959
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<462,464>

-------- No Patch ---------


-------- Similar Code ---------
if(scale==null){
throw new IllegalArgumentException("Null \'scale\' argument.");
}
DialScale existing=(DialScale)this.scales.get(index);
if(existing!=null){
removeLayer(existing);
}
this.layers.add(scale);
this.scales.set(index,scale);
scale.addChangeListener(this);
fireChangeEvent();

1.6538103398646216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<652,662>


-------- Patch ---------
if(index!=null){
removeLayer(existing);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
fireChangeEvent();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DialLayer layer=(DialLayer)this.layers.get(index);
if(layer!=null){
layer.removeChangeListener(this);
}
this.layers.remove(index);
fireChangeEvent();

1.6485588776172315
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<359,364>


-------- Patch ---------
this.data.remove(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
fireChangeEvent();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DialPointer pointer=(DialPointer)this.pointers.get(index);
if(pointer!=null){
pointer.removeChangeListener(this);
}
this.pointers.remove(index);
fireChangeEvent();

1.6485588776172315
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<414,419>


-------- Repeated Patch ---------
this.data.remove(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
fireChangeEvent();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.data.remove(index);
fireChangeEvent();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
this.millisecond=calendar.get(Calendar.MILLISECOND);
this.second=(byte)calendar.get(Calendar.SECOND);
this.minute=(byte)calendar.get(Calendar.MINUTE);
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.646926669623955
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Millisecond.java<160,167>

-------- No Patch ---------


-------- Similar Code ---------
Object result=null;
KeyedObject kobj=(KeyedObject)this.data.get(item);
if(kobj!=null){
result=kobj.getObject();
}
return result;

1.6459498864022053
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<95,100>

-------- No Patch ---------


-------- Similar Code ---------
int pos=getIndex(key);
if(pos>=0){
this.data.remove(pos);
}
KeyedObject item=new KeyedObject(key,value);
if(position<=this.data.size()){
this.data.add(position,item);
}else {
this.data.add(item);
}

1.64117557700781
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<235,245>


-------- Patch ---------
if(end<=this.data.size()){
this.data.add(position,clone);
}else {
this.data.add(item);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(keyIndex>=0){
KeyedObject ko=(KeyedObject)this.data.get(keyIndex);
ko.setObject(object);
}else {
KeyedObject ko=new KeyedObject(key,object);
this.data.add(ko);
}

1.6395492742215914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<206,213>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<getSeriesCount();i++){
TaskSeries series=(TaskSeries)this.data.get(i);
Iterator iterator=series.getTasks().iterator();
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}
}

1.6291306467572277
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<635,647>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TaskSeriesCollection clone=(TaskSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.keys=new java.util.ArrayList(this.keys);
return clone;

1.6277515799424478
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<681,684>

-------- No Patch ---------


-------- Similar Code ---------
BoxAndWhiskerItem item=BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics(list);
add(item,rowKey,columnKey);

1.6227150005536335
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<127,129>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeriesCollection clone=(XYIntervalSeriesCollection)super.clone();
int seriesCount=getSeriesCount();
clone.data=new java.util.ArrayList(seriesCount);
for(int i=0;i<this.data.size();i++){
clone.data.set(i,getSeries(i).clone());
}
return clone;

1.6202911468174899
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<378,385>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.data=new java.util.ArrayList(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getXValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getYValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVector();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<269,271>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorX();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<283,285>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorY();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<297,299>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return di.getX();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<157,159>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=(TimeSeries)this.data.get(series);
RegularTimePeriod period=s.getTimePeriod(item);
return getX(period);

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<399,401>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
return dp.getValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<309,311>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getOpenValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<256,258>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getCloseValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<282,284>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getHighValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<308,310>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getLowValue();

1.6185041202158623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<334,336>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValue item=new TimePeriodValue(period,value);
add(item);

1.6167550799532342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<363,364>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValue item=new TimePeriodValue(period,value);
add(item);

1.6167550799532342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<375,376>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem item=new XYDataItem(x,y);
add(item,notify);

1.6165508228396455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<490,491>

-------- No Patch ---------


-------- Similar Code ---------
ComparableObjectItem item=new ComparableObjectItem(x,y);
add(item,notify);

1.6165508228396455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=new TimeSeriesDataItem(period,value);
add(item,notify);

1.6165508228396455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<666,667>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=new TimeSeriesDataItem(period,value);
add(item,notify);

1.6165508228396455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<693,694>

-------- No Patch ---------


-------- Similar Code ---------
LegendItemCollection clone=(LegendItemCollection)super.clone();
clone.items=(List)ObjectUtilities.deepClone(this.items);
return clone;

1.6136241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItemCollection.java<149,151>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries clone=(TaskSeries)super.clone();
clone.tasks=(List)ObjectUtilities.deepClone(this.tasks);
return clone;

1.6136241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<194,196>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramDataset clone=(SimpleHistogramDataset)super.clone();
clone.bins=(List)ObjectUtilities.deepClone(this.bins);
return clone;

1.6136241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<558,560>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeriesCollection clone=(MatrixSeriesCollection)super.clone();
clone.seriesList=(List)ObjectUtilities.deepClone(this.seriesList);
return clone;

1.6136241116594314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<271,273>

-------- No Patch ---------


-------- Similar Code ---------
if(mapIndex<getListCount()){
Map urlMap=(Map)this.urls.get(mapIndex);
if(urlMap!=null){
result=(String)urlMap.get(key);
}
}

1.6070013010339594
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<134,139>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.6069619187435014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1457,1467>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.6069619187435014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1567,1577>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
XYDataItem existing=(XYDataItem)this.data.get(index);
overwritten=(XYDataItem)existing.clone();
boolean iterate=false;
double oldY=existing.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setY(item.getY());
if(iterate){
findBoundsByIteration();
}else if(item.getY()!=null){
double yy=item.getY().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}
}

1.6039228971504171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<808,827>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x3<l_x1)&&(l_x1<l_x4)){
double l_slope=(l_y4-l_y3)/(l_x4-l_x3);
l_subtrahendCurX=l_minuendCurX;
l_subtrahendCurY=new Double((l_slope*l_x1)+(l_y3-(l_slope*l_x3)));
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.5999952323258841
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<540,549>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x1<l_x3)&&(l_x3<l_x2)){
double l_slope=(l_y2-l_y1)/(l_x2-l_x1);
l_minuendCurX=l_subtrahendCurX;
l_minuendCurY=new Double((l_slope*l_x3)+(l_y1-(l_slope*l_x1)));
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.5999952323258841
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<551,560>

-------- No Patch ---------


-------- Similar Code ---------
TickUnits clone=(TickUnits)super.clone();
clone.tickUnits=new java.util.ArrayList(this.tickUnits);
return clone;

1.599075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<187,189>

-------- No Patch ---------


-------- Similar Code ---------
ExtendedCategoryAxis clone=(ExtendedCategoryAxis)super.clone();
clone.sublabels=new HashMap(this.sublabels);
return clone;

1.599075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<228,230>

-------- No Patch ---------


-------- Similar Code ---------
CustomXYURLGenerator clone=(CustomXYURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.599075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<203,205>

-------- No Patch ---------


-------- Similar Code ---------
CustomCategoryURLGenerator clone=(CustomCategoryURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.599075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<191,194>

-------- No Patch ---------


-------- Similar Code ---------
LookupPaintScale clone=(LookupPaintScale)super.clone();
clone.lookupTable=new java.util.ArrayList(this.lookupTable);
return clone;

1.599075559096034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<352,354>

-------- No Patch ---------


-------- Similar Code ---------
KeyedObjects2D clone=(KeyedObjects2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=new java.util.ArrayList(this.rows.size());
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects row=(KeyedObjects)iterator.next();
clone.rows.add(row.clone());
}
return clone;

1.5989420934731873
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<510,519>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.rows.add(item.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.rows=new java.util.ArrayList(this.rows.size());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
RegularTimePeriod period=series.getTimePeriod(i);
int index=getIndex(period);
if(index<0){
result.add(period);
}
}

1.5986720968751458
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<500,506>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1xs=d1[1];
double[] d2xs=d2[1];

1.5985798700256728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<466,474>

-------- No Patch ---------


-------- Similar Code ---------
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];

1.5985798700256728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<370,378>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getYValue());

1.595222640600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXLowValue());

1.595222640600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<227,229>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXHighValue());

1.595222640600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
RegularTimePeriod period=ts.getTimePeriod(item);
return new Long(getX(period));

1.595222640600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<413,415>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return new Double(di.getYValue());

1.595222640600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<242,244>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getLowerBound();

1.5934563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<365,366>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getUpperBound();

1.5934563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<391,392>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.isSelected();

1.5934563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<455,456>

-------- No Patch ---------


-------- Similar Code ---------
{
DefaultXYZDataset clone=(DefaultXYZDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] z=data[2];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
double[] zz=new double[z.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
System.arraycopy(z,0,zz,0,z.length);
clone.seriesList.add(i,new double[][]{xx,yy,zz});
}
return clone;
}

1.5920942243439553
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<412,430>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[1],0,new double[y.length],0,y.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(clone,0,new double[z.length],0,z.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.seriesList.add(index,new double[][]{new double[x.length],new double[y.length],new double[z.length]});
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
System.arraycopy(data[1],0,new double[y.length],0,y.length);
System.arraycopy(clone,0,new double[z.length],0,z.length);
clone.seriesList.add(index,new double[][]{new double[x.length],new double[y.length],new double[z.length]});

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
System.arraycopy(data[1],0,new double[y.length],0,y.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
System.arraycopy(data[1],0,new double[y.length],0,y.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
System.arraycopy(data[0],0,new double[x.length],0,x.length);
System.arraycopy(data[1],0,new double[y.length],0,y.length);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
months=calendar.get(Calendar.MONTH);
days=calendar.get(Calendar.DATE);
hours=calendar.get(Calendar.HOUR_OF_DAY);
minutes=calendar.get(Calendar.MINUTE);
seconds=calendar.get(Calendar.SECOND);
calendar.set(years,months,days,hours,minutes,seconds);
calendar.set(Calendar.MILLISECOND,value);
Date mm=calendar.getTime();
if(mm.getTime()>=date.getTime()){
calendar.set(Calendar.MILLISECOND,value-1);
mm=calendar.getTime();
}

1.5918333694348146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<892,903>

-------- No Patch ---------


-------- Similar Code ---------
int index=getIndex(period);
if(index>=0){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.remove(index);
updateBoundsForRemovedItem(item);
if(this.data.isEmpty()){
this.timePeriodClass=null;
}
fireSeriesChanged();
}

1.588453268514248
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<968,977>

-------- No Patch ---------


-------- Similar Code ---------
AbstractAnnotation clone=(AbstractAnnotation)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.5884314683652072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractAnnotation.java<192,194>

-------- No Patch ---------


-------- Similar Code ---------
AbstractDialLayer clone=(AbstractDialLayer)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.5884314683652072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/AbstractDialLayer.java<141,144>

-------- No Patch ---------


-------- Similar Code ---------
AbstractDataset clone=(AbstractDataset)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.5884314683652072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/AbstractDataset.java<209,211>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.get(i)==dataset){
result=(XYItemRenderer)this.renderers.get(i);
if(result==null){
result=getRenderer();
}
break;
}

1.5851300613472117
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1769,1775>

-------- No Patch ---------


-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.5835761337431578
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<114,116>

-------- No Patch ---------


-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.5835761337431578
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<105,107>

-------- No Patch ---------


-------- Similar Code ---------
if(item<tooltips.size()){
result=(String)tooltips.get(item);
}

1.5835761337431578
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<117,119>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<seriesCount;i++){
LegendItem item=this.renderer.getLegendItem(i);
result.add(item);
}

1.58342888631813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<981,984>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getRowCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}

1.5829774138578343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1794,1807>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int index=this.plot.getIndexOf(this);
XYDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getSeriesCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}

1.5829774138578343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<957,970>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(count>1){
Number value=(Number)values.get(start+(count-1)/2);
result=value.doubleValue();
}else {
Number value=(Number)values.get(start);
result=value.doubleValue();
}

1.5814390278873054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<279,287>


-------- Patch ---------
for(int index=start;index<=end;index++){
result=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
result=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CustomXYToolTipGenerator clone=(CustomXYToolTipGenerator)super.clone();
if(this.toolTipSeries!=null){
clone.toolTipSeries=new java.util.ArrayList(this.toolTipSeries);
}
return clone;

1.5781787017989788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<159,164>

-------- No Patch ---------


-------- Similar Code ---------
Axis clone=(Axis)super.clone();
clone.plot=null;
clone.listenerList=new EventListenerList();
return clone;

1.5707747210672771
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1441,1445>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.renderers.size();i++){
CategoryItemRenderer renderer2=(CategoryItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
CategoryItemRenderer rc=(CategoryItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}

1.5689910123251185
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5134,5144>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.renderers.size();i++){
XYItemRenderer renderer2=(XYItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
XYItemRenderer rc=(XYItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}

1.5689910123251185
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5688,5697>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
VectorDataItem result=(VectorDataItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.5684563530497264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<106,108>

-------- No Patch ---------


-------- Similar Code ---------
ComparableObjectItem result=(ComparableObjectItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.5684563530497264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<371,374>

-------- No Patch ---------


-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
index=index+1;
}else {
index=-index;
}
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));

1.566360202900674
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<130,139>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}

1.5653323536382295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<260,267>

-------- No Patch ---------


-------- Similar Code ---------
if(copyAndSort){
int itemCount=values.size();
List copy=new ArrayList(itemCount);
for(int i=0;i<itemCount;i++){
copy.add(i,values.get(i));
}
Collections.sort(copy);
values=copy;
}

1.5650379591582846
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<203,211>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=clone;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.optionalLibraries.size();i++){
OptionalLibraryHolder holder=(OptionalLibraryHolder)this.optionalLibraries.get(i);
Library l=holder.getLibrary();
if(l!=null){
libraries.add(l);
}
}

1.551053049256098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ui/BasicProjectInfo.java<266,273>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(clone!=null){
data.add(clone);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getPercentComplete();
}
return result;

1.5489256723913032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<456,463>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getSubtaskCount();
}
return result;

1.5489256723913032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<489,496>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<seriesCount;i++){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}

1.5488052330546953
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2247,2253>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMean();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<327,332>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMedian();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<344,349>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ1();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<361,366>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ3();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<378,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinRegularValue();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<395,400>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxRegularValue();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<412,417>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinOutlier();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<428,433>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxOutlier();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<446,451>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getOutliers();
}
return result;

1.5459498864022054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<463,468>

-------- No Patch ---------


-------- Similar Code ---------
AbstractObjectList clone=(AbstractObjectList)super.clone();
if(this.objects!=null){
clone.objects=new Object[this.objects.length];
System.arraycopy(this.objects,0,clone.objects,0,this.objects.length);
}
return clone;

1.5434949070096586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<235,241>

-------- No Patch ---------


-------- Similar Code ---------
for(int rowNum=0;rowNum<this.rows.size();++rowNum){
row=(ArrayList)this.rows.get(rowNum);
for(int column=1;column<numberOfColumns;column++){
Object testValue=row.get(column);
if(testValue!=null){
double test=((Number)testValue).doubleValue();
if(test<this.minValue){
this.minValue=test;
}
if(test>this.maxValue){
this.maxValue=test;
}
}
}
}

1.542125653753284
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<373,388>


-------- Patch ---------
for(int index=start;index<=end;index++){
row=(ArrayList)this.data.get(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
RegularTimePeriod period=di.getPeriod();
return getX(period);

1.5419517435525107
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<215,218>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

1.5370107844745018
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<867,872>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item.getX().equals(clone)){
return index;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
ComparableObjectItem item=(ComparableObjectItem)this.data.get(i);
if(item.getComparable().equals(x)){
return i;
}
}

1.5370107844745018
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<280,286>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item.getComparable().equals(clone)){
return index;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
space.add(maxdim,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
space.add(maxdim,edge);
}

1.5361923926663035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<201,206>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
this.second=(byte)calendar.get(Calendar.SECOND);
this.minute=(byte)calendar.get(Calendar.MINUTE);
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.5306752488553697
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Second.java<159,165>

-------- No Patch ---------


-------- Similar Code ---------
l_polygonYs.clear();
double l_y=l_intersectY.doubleValue();
l_minuendMaxY=l_y;
l_subtrahendMaxY=l_y;
l_minuendMinY=l_y;
l_subtrahendMinY=l_y;
l_polygonXs.add(l_intersectX);
l_polygonYs.add(l_intersectY);

1.5303264721858019
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<740,751>

-------- No Patch ---------


-------- Similar Code ---------
if(this.axis!=null){
clone.axis=(ValueAxis)ObjectUtilities.clone(this.axis);
clone.axis.setPlot(clone);
clone.axis.addChangeListener(clone);
}

1.5260002075666455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1063,1067>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
TimePeriod period=dp.getPeriod();
return new Long(getX(period));

1.523459206050969
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<241,244>

-------- No Patch ---------


-------- Similar Code ---------
if(this.domainAxis!=null){
clone.domainAxis=(ValueAxis)this.domainAxis.clone();
clone.domainAxis.setPlot(clone);
clone.domainAxis.addChangeListener(clone);
}

1.5229929724740014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1074,1078>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rangeAxis!=null){
clone.rangeAxis=(ValueAxis)this.rangeAxis.clone();
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}

1.5229929724740014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1079,1083>

-------- No Patch ---------


-------- Similar Code ---------
CrosshairOverlay clone=(CrosshairOverlay)super.clone();
clone.xCrosshairs=(List)ObjectUtilities.deepClone(this.xCrosshairs);
clone.yCrosshairs=(List)ObjectUtilities.deepClone(this.yCrosshairs);
return clone;

1.5228862874871278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/panel/CrosshairOverlay.java<589,592>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem removed=(XYDataItem)this.data.remove(index);
updateBoundsForRemovedItem(removed);
fireSeriesChanged();
return removed;

1.5220329284999696
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<576,579>

-------- No Patch ---------


-------- Similar Code ---------
DialScale result=(DialScale)this.scales.get(0);
Integer scaleIndex=(Integer)this.datasetToScaleMap.get(datasetIndex);
if(scaleIndex!=null){
result=getScale(scaleIndex.intValue());
}
return result;

1.5168564871545371
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<699,704>

-------- No Patch ---------


-------- Similar Code ---------
if(list!=null){
try{
List clone=(List)list.getClass().newInstance();
Iterator iterator=list.iterator();
while(iterator.hasNext()){
clone.add(KeyToGroupMap.clone(iterator.next()));
}
result=clone;
}catch (Exception e) {
  throw new CloneNotSupportedException("Exception.");
}

}

1.5138685821281377
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<309,321>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
bin.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.511744688971574
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<483,487>


-------- Patch ---------
item.setSelected(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
l_subtrahendMaxY=Math.max(l_subtrahendMaxY,l_subtrahendNextY.doubleValue());
l_minuendMinY=Math.min(l_minuendMinY,l_minuendNextY.doubleValue());
l_subtrahendMinY=Math.min(l_subtrahendMinY,l_subtrahendNextY.doubleValue());
l_minuendXs.add(l_minuendNextX);
l_minuendYs.add(l_minuendNextY);
l_subtrahendXs.add(l_subtrahendNextX);
l_subtrahendYs.add(l_subtrahendNextY);
l_polygonXs.addAll(l_minuendXs);
l_polygonYs.addAll(l_minuendYs);

1.5105956215863796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<798,814>

-------- No Patch ---------


-------- Similar Code ---------
int index=indexOf(x);
if(index<0){
throw new SeriesException("No observation for x = "+x);
}else {
ComparableObjectItem item=getDataItem(index);
item.setObject(y);
fireSeriesChanged();
}

1.5104788386171606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<301,309>

-------- No Patch ---------


-------- Similar Code ---------
DefaultBoxAndWhiskerXYDataset clone=(DefaultBoxAndWhiskerXYDataset)super.clone();
clone.dates=new java.util.ArrayList(this.dates);
clone.items=new java.util.ArrayList(this.items);
return clone;

1.5074300686912925
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<551,555>

-------- No Patch ---------


-------- Similar Code ---------
Series clone=(Series)super.clone();
clone.listeners=new EventListenerList();
clone.propertyChangeSupport=new PropertyChangeSupport(clone);
return clone;

1.5067301266170356
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/Series.java<243,246>

-------- No Patch ---------


-------- Similar Code ---------
if(zoomOutIndex!=-1){
result.remove(zoomOutIndex);
}else {
zoomOutIndex=zoomInIndex+1;
}
result.add(zoomOut,zoomOutIndex);
if(autoIndex!=-1){
result.remove(autoIndex);
}else {
autoIndex=zoomOutIndex+1;
}
result.add(auto,autoIndex);

1.4992435509137552
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<169,182>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<this.rows;r++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
b.setBounds(new Rectangle2D.Double(c*width,r*height,width,height));
}
}

1.4981268847556304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<190,200>


-------- Patch ---------
for(int index=start;index<=end;index++){
if(index>=data.size()){
break;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
while(iterator.hasNext()){
Object key=iterator.next();
Object entry=this.seriesLabelLists.get(key);
Object toAdd=entry;
if(entry instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)entry;
toAdd=pc.clone();
}
clone.seriesLabelLists.put(key,toAdd);
}

1.48774950714067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<186,195>


-------- Patch ---------
for(int index=start;index<=end;index++){
toAdd=item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.4872113540691483
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1352,1365>


-------- Patch ---------
datasetChanged(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
ValueDataset existing=(ValueDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.4872113540691483
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<496,509>


-------- Repeated Patch ---------
datasetChanged(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(emptyRange){
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
return copy;
}else {
return createCopy(startIndex,endIndex);
}

1.4863004495476244
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1117,1124>


-------- Patch ---------
for(int index=start;index<=end;index++){
copy.data=new java.util.ArrayList();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int column=this.columnKeys.indexOf(columnKey);
if(column<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
int index=rowData.getIndex(columnKey);
if(index>=0){
return rowData.getObject(index);
}else {
return null;
}

1.4852465989864292
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<233,245>


-------- Patch ---------
if(index>=0){
return item.getObject(index);
}else {
return null;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(plot instanceof CategoryPlot){
rangeAxis=((CategoryPlot)plot).getRangeAxis();
}else if(plot instanceof XYPlot){
rangeAxis=((XYPlot)plot).getRangeAxis();
}
this.rangeAxisPropertyPanel=DefaultAxisEditor.getInstance(rangeAxis);
if(this.rangeAxisPropertyPanel!=null){
this.rangeAxisPropertyPanel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
tabs.add(localizationResources.getString("Range_Axis"),this.rangeAxisPropertyPanel);
}
tabs.add(localizationResources.getString("Appearance"),appearance);
panel.add(tabs);
add(panel);

1.484321513141177
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<320,338>


-------- Patch ---------
this.index=DefaultAxisEditor.getInstance(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
add(data);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
return start.getTime();

1.4815949086115423
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<398,402>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date end=duration.getEnd();
return end.getTime();

1.4815949086115423
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<406,410>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,item);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(item,this.index);
}

1.4809830993820432
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<178,183>

-------- No Patch ---------


-------- Similar Code ---------
Class periodClass=item.getPeriod().getClass();
if(this.timePeriodClass==null){
this.timePeriodClass=periodClass;
}else if(!this.timePeriodClass.equals(periodClass)){
String msg="You are trying to add data where the time "+"period class is "+periodClass.getName();
throw new SeriesException(msg);
}
TimeSeriesDataItem overwritten=null;
int index=Collections.binarySearch(this.data,item);

1.480391854962051
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<812,824>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
result=sub.getPercentComplete();
}
}
return result;

1.4803654836797824
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<605,615>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getStartBoundary());

1.4793578830061813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<408,410>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getEndBoundary());

1.4793578830061813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<426,428>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxH=Math.max(maxH,s.getHeight());
}
}

1.4743177061537727
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<370,380>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(index>=data.size()){
break;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(copy!=null){
maxH=Math.max(clone,item.getHeight());
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(index>=data.size()){
break;
}
if(copy!=null){
maxH=Math.max(clone,item.getHeight());
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxW=Math.max(maxW,s.getWidth());
}
}

1.4743177061537727
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<403,413>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(index>=data.size()){
break;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(copy!=null){
maxW=Math.max(clone,item.getWidth());
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(index>=data.size()){
break;
}
if(copy!=null){
maxW=Math.max(clone,item.getWidth());
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Integer key=new Integer(series);
List labelList=(List)this.seriesLabelLists.get(key);
if(labelList==null){
labelList=new java.util.ArrayList();
this.seriesLabelLists.put(key,labelList);
}
labelList.add(label);

1.4739454474953422
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<109,115>


-------- Patch ---------
item.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TaskSeries ts=(TaskSeries)this.data.get(series);
return ts.getKey();

1.4684563530497265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<147,148>

-------- No Patch ---------


-------- Similar Code ---------
this.zoomResetDomainMenuItem.addActionListener(this);
autoRangeMenu.add(this.zoomResetDomainMenuItem);
this.zoomResetRangeMenuItem=new JMenuItem(localizationResources.getString("Range_Axis"));
this.zoomResetRangeMenuItem.setActionCommand(ZOOM_RESET_RANGE_COMMAND);
this.zoomResetRangeMenuItem.addActionListener(this);
autoRangeMenu.add(this.zoomResetRangeMenuItem);
result.addSeparator();
result.add(autoRangeMenu);

1.468426532774469
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2856,2867>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<np;i++){
ControlPoint cpi=(ControlPoint)this.points.get(i);
x[i]=cpi.x;
d[i]=cpi.y;
}

1.465299689540518
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<230,234>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=np;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
x[i]=cpi.x;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
d[i]=cpi.y;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
x[i]=cpi.x;
d[i]=cpi.y;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<samples;i++){
double x=start+(step*i);
series.add(x,f.getValue(x));
}

1.464102564102564
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<549,552>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=samples;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getStart().getTime());
}
}
return result;

1.463842473891764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<369,379>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.463842473891764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<406,416>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
Date end=duration.getEnd();
return (start.getTime()+end.getTime())/2.0;

1.4628226553407742
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<389,394>

-------- No Patch ---------


-------- Similar Code ---------
if(this.entities instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.entities;
clone.entities=(EntityCollection)pc.clone();
}

1.4621023987294832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartRenderingInfo.java<263,266>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.entities=(EntityCollection)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

1.4621023987294832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1720,1723>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.4621023987294832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1746,1749>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4597455032750128
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2552,2564>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4597455032750128
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2826,2838>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4597455032750128
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2541,2553>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4597455032750128
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2844,2856>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CategoryTableXYDataset clone=(CategoryTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.intervalDelegate=new IntervalXYDelegate(clone);
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
return clone;

1.4535200713067864
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/CategoryTableXYDataset.java<398,406>

-------- No Patch ---------


-------- Similar Code ---------
String strToReturn;
try{
strToReturn=(String)this.symbols.get((int)value);
}catch (IndexOutOfBoundsException ex) {
  strToReturn="";
}

return strToReturn;

1.4532333639533637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<753,760>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1736,1739>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1740,1743>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1744,1747>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<202,204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<247,249>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<302,304>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendLabelURLGenerator instanceof PublicCloneable){
clone.legendLabelURLGenerator=(PieURLGenerator)ObjectUtilities.clone(this.legendLabelURLGenerator);
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3653,3656>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<206,208>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawingSupplier instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.drawingSupplier;
try{
result=(DrawingSupplier)pc.clone();
}catch (CloneNotSupportedException e) {
  e.printStackTrace();
}

}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/StandardChartTheme.java<1102,1110>

-------- No Patch ---------


-------- Similar Code ---------
if(value/total<minimumPercent){
otherKeys.add(currentKey);
}

1.451521653520084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<321,323>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemLabelGenerator generator=(CategoryItemLabelGenerator)this.itemLabelGeneratorList.get(row);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<316,321>

-------- No Patch ---------


-------- Similar Code ---------
CategoryURLGenerator generator=(CategoryURLGenerator)this.urlGeneratorList.get(row);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<547,552>

-------- No Patch ---------


-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RenderAttributes.java<377,381>

-------- No Patch ---------


-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.positiveItemLabelPositionList.get(series);
if(position==null){
position=this.basePositiveItemLabelPosition;
}
return position;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2127,2132>

-------- No Patch ---------


-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.negativeItemLabelPositionList.get(series);
if(position==null){
position=this.baseNegativeItemLabelPosition;
}
return position;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2247,2252>

-------- No Patch ---------


-------- Similar Code ---------
XYItemLabelGenerator generator=(XYItemLabelGenerator)this.itemLabelGeneratorList.get(series);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<353,358>

-------- No Patch ---------


-------- Similar Code ---------
XYToolTipGenerator generator=(XYToolTipGenerator)this.toolTipGeneratorList.get(series);
if(generator==null){
generator=this.baseToolTipGenerator;
}
return generator;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<465,470>

-------- No Patch ---------


-------- Similar Code ---------
XYURLGenerator generator=(XYURLGenerator)this.urlGeneratorList.get(series);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<573,578>

-------- No Patch ---------


-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.450033737592567
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieSelectionAttributes.java<240,244>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
Rectangle2D hotspot=(Rectangle2D)area.clone();
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams&&((EntityBlockParams)params).getGenerateEntities()){
sec=new StandardEntityCollection();
sec.add(new TitleEntity(hotspot,this));
}
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}

1.448283380731521
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<530,542>


-------- Patch ---------
if(this.index!=null){
copy.setPaint(this.backgroundPaint);
g2.fill((Rectangle2D)data.clone());
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(i>pointCount-1){
TimeSeriesDataItem startOfMovingAvg=source.getRawDataItem(i-pointCount);
rollingSumForPeriod-=startOfMovingAvg.getValue().doubleValue();
result.add(period,rollingSumForPeriod/pointCount);
}else if(i==pointCount-1){
result.add(period,rollingSumForPeriod/pointCount);
}

1.448283380731521
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<214,224>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];
if(!Arrays.equals(d1y,d2y)){
return false;
}
}

1.445670081194435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<324,337>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(!Arrays.equals((double[][])this.data.get(index)[0],item)){
return false;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(!Arrays.equals((double[][])this.data.get(index)[1],clone)){
return false;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(!Arrays.equals((double[][])this.data.get(index)[0],item)){
return false;
}
if(!Arrays.equals((double[][])this.data.get(index)[1],clone)){
return false;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
DefaultKeyedValues2D clone=(DefaultKeyedValues2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=(List)ObjectUtilities.deepClone(this.rows);
return clone;

1.4436532497529813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<571,579>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.4431982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<118,121>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.4431982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<186,189>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.4431982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<104,107>

-------- No Patch ---------


-------- Similar Code ---------
{
 final PublicCloneable pc=(PublicCloneable)object;
return pc.clone();
}

1.4414688716912716
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ObjectUtilities.java<165,168>

-------- No Patch ---------


-------- Similar Code ---------
if(Math.abs(angle2-angle1)>getMinimumArcAngleToDraw()){
arcList.add(new Arc2D.Double(arcX,arcY+depth,pieArea.getWidth(),pieArea.getHeight()-depth,angle1,angle2-angle1,Arc2D.PIE));
}else {
arcList.add(null);
}

1.4394257259243908
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<412,419>

-------- No Patch ---------


-------- Similar Code ---------
CategoryAxis clone=(CategoryAxis)super.clone();
clone.tickLabelFontMap=new HashMap(this.tickLabelFontMap);
clone.tickLabelPaintMap=new HashMap(this.tickLabelPaintMap);
clone.categoryLabelToolTips=new HashMap(this.categoryLabelToolTips);
return clone;

1.4366289078146783
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1291,1295>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseShape!=null){
clone.baseShape=ShapeUtilities.clone(this.baseShape);
}

1.4355285539274978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3205,3207>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset==this.datasets.get(i)){
result=i;
break;
}

1.4355285539274978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1393,1396>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset==this.datasets.get(i)){
result=i;
break;
}

1.4355285539274978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1464,1467>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderer!=null){
clone.renderer=(PolarItemRenderer)ObjectUtilities.clone(this.renderer);
}

1.4355285539274978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1073,1076>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendLabelToolTipGenerator!=null){
clone.legendLabelToolTipGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelToolTipGenerator);
}

1.4355285539274978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3649,3652>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone,locale);
calendar.setTime(time);
this.month=calendar.get(Calendar.MONTH)+1;
this.year=calendar.get(Calendar.YEAR);
peg(calendar);

1.4304542935081186
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Month.java<171,175>

-------- No Patch ---------


-------- Similar Code ---------
CategoryAxis existing=(CategoryAxis)this.domainAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.domainAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.4280080013611889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<807,821>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.rangeAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.4280080013611889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1084,1098>

-------- No Patch ---------


-------- Similar Code ---------
if(renderer.isSeriesVisible(i)&&renderer.isSeriesVisibleInLegend(i)){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}

1.4270682584316146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5407,5414>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelBandsDimension,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelBandsDimension,edge);
}
double tickMarkSpace=0.0;
if(isTickMarksVisible()){
tickMarkSpace=getTickMarkOutsideLength();
}
if(this.minorTickMarksVisible){
tickMarkSpace=Math.max(tickMarkSpace,this.minorTickMarkOutsideLength);
}
space.add(tickMarkSpace,edge);
return space;

1.4265819643217044
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<626,645>


-------- Patch ---------
if(isTickMarksVisible()){
clone=getTickMarkOutsideLength();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.4245003270420487
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4543,4545>

-------- No Patch ---------


-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.4245003270420487
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4560,4562>

-------- No Patch ---------


-------- Similar Code ---------
if(a instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(a);
}

1.4245003270420487
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4598,4600>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getStart().getTime());
}
}
return result;

1.4228577751679459
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<525,536>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.4228577751679459
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<565,576>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0){
row.removeValue(columnIndex);
}
}

1.4204451699188811
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<392,399>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0){
row.removeValue(colIndex);
}
}

1.4204451699188811
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<348,355>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int s=0;s<this.data.size();s++){
XYSeries series=(XYSeries)this.data.get(s);
series.remove(x);
}

1.4195289083240048
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<434,437>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
result=HashUtilities.hashCode(result,this.data.get(i));
}

1.4190614495136218
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<471,473>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
VectorSeries series=(VectorSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<120,123>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYIntervalSeries series=(XYIntervalSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<343,346>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
YIntervalSeries series=(YIntervalSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<318,321>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XIntervalSeries series=(XIntervalSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<320,323>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYSeries series=(XYSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<201,204>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYSeries series=(XYSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<357,360>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
TimeSeries series=(TimeSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<366,369>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
OHLCSeries series=(OHLCSeries)this.data.get(i);
series.removeChangeListener(this);
}

1.4187413559457793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<430,433>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TimeSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4181982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<352,355>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4181982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<213,216>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4181982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<386,389>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;(index==-1)&&(i<menu.getComponentCount());i++){
Component comp=menu.getComponent(i);
if(comp instanceof JMenuItem){
JMenuItem item=(JMenuItem)comp;
if(text.equals(item.getText())){
index=i;
}
}
}

1.417026052788119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<242,250>


-------- Patch ---------
for(int index=start;index<=i;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.getComponentCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TimeSeriesDataItem temp=new TimeSeriesDataItem(period,value);
int index=Collections.binarySearch(this.data,temp);
if(index<0){
throw new SeriesException("There is no existing value for the "+"specified \'period\'.");
}
update(index,value);

1.4137405808609629
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<705,711>

-------- No Patch ---------


-------- Similar Code ---------
this.keys.remove(index);
this.values.remove(index);
rebuildIndex();

1.4127304766889965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<315,317>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rows.size()==0){
ArrayList newRow=new ArrayList();
for(int column=0;column<numberOfColumns;column++){
if(columnTypes[column]!=Types.NULL){
newRow.add(new Integer(0));
}
}
this.rows.add(newRow);
}

1.4121605543876017
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<354,362>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=numberOfColumns;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(value>this.upperBound){
return this.defaultPaint;
}
int count=this.lookupTable.size();
if(count==0){
return this.defaultPaint;
}
PaintItem item=(PaintItem)this.lookupTable.get(0);
if(value<item.value){
return this.defaultPaint;
}
int low=0;
int high=this.lookupTable.size()-1;

1.410637466186616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<275,292>

-------- No Patch ---------


-------- Similar Code ---------
zoomInMenu.add(this.zoomInDomainMenuItem);
this.zoomInRangeMenuItem=new JMenuItem(localizationResources.getString("Range_Axis"));
this.zoomInRangeMenuItem.setActionCommand(ZOOM_IN_RANGE_COMMAND);
this.zoomInRangeMenuItem.addActionListener(this);
zoomInMenu.add(this.zoomInRangeMenuItem);
result.add(zoomInMenu);
JMenu zoomOutMenu=new JMenu(localizationResources.getString("Zoom_Out"));
this.zoomOutBothMenuItem=new JMenuItem(localizationResources.getString("All_Axes"));
this.zoomOutBothMenuItem.setActionCommand(ZOOM_OUT_BOTH_COMMAND);

1.4098745407415338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2805,2820>

-------- No Patch ---------


-------- Similar Code ---------
zoomOutMenu.add(this.zoomOutDomainMenuItem);
this.zoomOutRangeMenuItem=new JMenuItem(localizationResources.getString("Range_Axis"));
this.zoomOutRangeMenuItem.setActionCommand(ZOOM_OUT_RANGE_COMMAND);
this.zoomOutRangeMenuItem.addActionListener(this);
zoomOutMenu.add(this.zoomOutRangeMenuItem);
result.add(zoomOutMenu);
JMenu autoRangeMenu=new JMenu(localizationResources.getString("Auto_Range"));
this.zoomResetBothMenuItem=new JMenuItem(localizationResources.getString("All_Axes"));
this.zoomResetBothMenuItem.setActionCommand(ZOOM_RESET_BOTH_COMMAND);

1.4098745407415338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2831,2847>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.408762289805916
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<884,893>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.408762289805916
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ValueAxis.java<811,818>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipGeneratorList!=null){
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1703,1706>

-------- No Patch ---------


-------- Similar Code ---------
if(this.urlGeneratorList!=null){
clone.urlGeneratorList=(ObjectList)this.urlGeneratorList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1721,1723>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlinePaintList!=null){
clone.outlinePaintList=(PaintList)this.outlinePaintList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3184,3186>

-------- No Patch ---------


-------- Similar Code ---------
if(this.strokeList!=null){
clone.strokeList=(StrokeList)this.strokeList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3190,3192>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlineStrokeList!=null){
clone.outlineStrokeList=(StrokeList)this.outlineStrokeList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3196,3199>

-------- No Patch ---------


-------- Similar Code ---------
if(this.shapeList!=null){
clone.shapeList=(ShapeList)this.shapeList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3202,3204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelsVisibleList!=null){
clone.itemLabelsVisibleList=(BooleanList)this.itemLabelsVisibleList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3210,3213>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelFontList!=null){
clone.itemLabelFontList=(ObjectList)this.itemLabelFontList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3217,3220>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelPaintList!=null){
clone.itemLabelPaintList=(PaintList)this.itemLabelPaintList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3224,3227>

-------- No Patch ---------


-------- Similar Code ---------
if(this.positiveItemLabelPositionList!=null){
clone.positiveItemLabelPositionList=(ObjectList)this.positiveItemLabelPositionList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3231,3234>

-------- No Patch ---------


-------- Similar Code ---------
if(this.negativeItemLabelPositionList!=null){
clone.negativeItemLabelPositionList=(ObjectList)this.negativeItemLabelPositionList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3238,3241>

-------- No Patch ---------


-------- Similar Code ---------
if(this.createEntitiesList!=null){
clone.createEntitiesList=(BooleanList)this.createEntitiesList.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3244,3247>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3252,3254>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}

1.408513525158996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3255,3257>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxStartIndex>=0){
long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
if(start>maxStart){
this.maxStartIndex=index;
}
}else {
this.maxStartIndex=index;
}

1.4075153214329765
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<274,283>

-------- No Patch ---------


-------- Similar Code ---------
if(this.minEndIndex>=0){
long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
if(end<minEnd){
this.minEndIndex=index;
}
}else {
this.minEndIndex=index;
}

1.4075153214329765
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<313,322>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxEndIndex>=0){
long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
if(end>maxEnd){
this.maxEndIndex=index;
}
}else {
this.maxEndIndex=index;
}

1.4075153214329765
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<324,333>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getDomainAxis(index);
}

1.4065468431739276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<765,768>


-------- Patch ---------
for(int index=start;index<=end;index++){
result=item.getDomainAxis(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}

1.4065468431739276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1046,1049>


-------- Patch ---------
for(int index=start;index<=end;index++){
result=item.getRangeAxis(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getDomainAxis(index);
}

1.4065468431739276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<824,827>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
result=item.getDomainAxis(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getRangeAxis(index);
}

1.4065468431739276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1188,1191>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
result=item.getRangeAxis(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
TaskSeries s=(TaskSeries)this.data.get(i);
if(s.getKey().equals(rowKey)){
result=i;
break;
}
}

1.4052981988923126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<222,228>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int s=0;s<this.data.size();s++){
updateXPoints((XYSeries)this.data.get(s));
}

1.4052133672749672
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<204,206>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

1.4027213711700481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<232,240>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);

1.4016366965918405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5145,5160>


-------- Repeated Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
while(iterator.hasNext()){
Object key=iterator.next();
List entry=(List)map.get(key);
Object toAdd=ObjectUtilities.deepClone(entry);
clone.put(key,toAdd);
}

1.4002739106715465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5185,5190>


-------- Patch ---------
for(int index=start;index<=end;index++){
data.put(index,clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int c=0;c<this.data.getColumnCount();c++){
Number value=this.data.getValue(r,c);
if(value!=null){
unique.add(value);
}
}

1.397968539564935
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<172,177>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=this.firstCategoryIndex;i<last;i++){
result.add(this.underlying.getColumnKey(i));
}

1.3976950684556888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<205,207>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=last;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=this.firstCategoryIndex;i<=last;i++){
result.add(this.underlying.getColumnKey(i));
}

1.3976950684556888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<206,208>


-------- Repeated Patch ---------
for(int index=start;index<=last;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(outlier>boxAndWhiskerData.getMaxRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}else if(outlier<boxAndWhiskerData.getMinRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}

1.394100103348599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<647,658>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone,locale);
calendar.setTime(time);
int month=calendar.get(Calendar.MONTH)+1;
this.quarter=(byte)SerialDate.monthCodeToQuarter(month);
this.year=(short)calendar.get(Calendar.YEAR);
peg(calendar);

1.3939184767835622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Quarter.java<183,188>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot sub=(CategoryPlot)this.subplots.get(i);
totalWeight+=sub.getWeight();
}

1.387420882906575
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<280,283>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot sub=(XYPlot)this.subplots.get(i);
totalWeight+=sub.getWeight();
}

1.387420882906575
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<317,320>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot sub=(XYPlot)this.subplots.get(i);
totalWeight+=sub.getWeight();
}

1.387420882906575
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<374,377>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot sub=(CategoryPlot)this.subplots.get(i);
totalWeight+=sub.getWeight();
}

1.387420882906575
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<373,376>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
totalWeight+=item.getWeight();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
String label=key.toString();
String description=label;
Paint paint=(Paint)this.sectionPaints.get(key);
LegendItem item=new LegendItem(label,description,null,null,getLegendItemShape(),paint,Plot.DEFAULT_OUTLINE_STROKE,paint);
item.setSeriesKey(key);
item.setSeriesIndex(section);
item.setDataset(getDataset());
result.add(item);
section++;
}

1.387358839365852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<583,596>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setSeriesKey(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setDataset(getDataset());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
data.add(item);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setSeriesKey(index);
item.setDataset(getDataset());
data.add(item);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<seriesCount;i++){
clone.list.add(new HashMap((Map)this.list.get(i)));
}

1.385408022612446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<502,504>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0&&row.getValue(columnIndex)!=null){
allNull=false;
break;
}
}

1.3851557836018265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<381,389>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0&&row.getObject(colIndex)!=null){
allNull=false;
break;
}
}

1.3851557836018265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<337,345>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
ControlPoint cp1=(ControlPoint)this.points.get(1);
s.seriesPath.lineTo(cp1.x,cp1.y);
}

1.3831353843426084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<209,214>

-------- No Patch ---------


-------- Similar Code ---------
if(pos==position){
this.keys.set(pos,key);
this.values.set(pos,value);
}else {
if(pos>=0){
this.keys.remove(pos);
this.values.remove(pos);
}
this.keys.add(position,key);
this.values.add(position,value);
rebuildIndex();
}

1.3817579139873353
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<277,290>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
Number z=series.getItem(itemIndex);
return z;

1.3805806756909202
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<198,200>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis result=plot.getRangeAxis(index);
if(result==null){
result=plot.getRangeAxis();
}
return result;

1.3777291103623819
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1774,1778>

-------- No Patch ---------


-------- Similar Code ---------
PiePlotState state=super.initialise(g2,plotArea,plot,index,info);
state.setPassesRequired(3);
return state;

1.3760877279974646
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<323,325>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=(Number)this.seriesBarWidthList.get(series);
if(n!=null){
result=n.doubleValue();
}
return result;

1.3739309624621434
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LayeredBarRenderer.java<109,114>

-------- No Patch ---------


-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(sectionIndex);
if(arc==null){
continue;
}
upperArc=new Arc2D.Double(arcX,arcY,pieArea.getWidth(),pieArea.getHeight()-depth,arc.getAngleStart(),arc.getAngleExtent(),Arc2D.PIE);
Comparable currentKey=(Comparable)sectionKeys.get(sectionIndex);
paint=lookupSectionPaint(currentKey,true);
outlinePaint=lookupSectionOutlinePaint(currentKey,false);
outlineStroke=lookupSectionOutlineStroke(currentKey,false);

1.3733373660995096
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<534,545>


-------- Patch ---------
item=lookupSectionPaint(index,true);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone=lookupSectionOutlineStroke(index,false);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
double x=(bin.getStartBoundary()+bin.getEndBoundary())/2.0;
return new Double(x);

1.3710135219544741
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<356,359>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex>0){
String key=line.substring(start,i);
keys.add(removeStringDelimiters(key));
}
start=i+1;
fieldIndex++;
}
}
String key=line.substring(start,line.length());
keys.add(removeStringDelimiters(key));
return keys;

1.3694267435279888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<126,139>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=line;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
AxisLocation location=getDomainAxisLocation(index);
RectangleEdge result=Plot.resolveDomainAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getDomainAxisEdge());
}
return result;

1.3680474752762084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1068,1074>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge());
}
return result;

1.3680474752762084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1368,1374>

-------- No Patch ---------


-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastY=y;
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}

1.3671732547625077
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<711,724>


-------- Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
item=clone;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.plot!=null){
chart.plot=(Plot)this.plot.clone();
chart.plot.addChangeListener(chart);
}

1.3650318905132628
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1732,1735>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}

1.364237664429405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5257,5262>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<rendererCount;i++){
CategoryItemRenderer renderer=(CategoryItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.364237664429405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5264,5270>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=rendererCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}

1.364237664429405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5815,5820>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=datasetCount;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<datasetCount;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<rendererCount;i++){
XYItemRenderer renderer=(XYItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.364237664429405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5822,5827>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=rendererCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<rendererCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=rendererCount;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<rendererCount;index++){
if(item!=null){
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.m_totalSum-=get(i,j);
this.m_totalSum+=mij;
super.update(i,j,mij);

1.3624354790229063
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/NormalizedMatrixSeries.java<137,140>

-------- No Patch ---------


-------- Similar Code ---------
long start=period.getStart().getTime();
long end=period.getEnd().getTime();
long middle=start+((end-start)/2);
if(this.minStartIndex>=0){
long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
if(start<minStart){
this.minStartIndex=index;
}
}else {
this.minStartIndex=index;
}

1.3609450080707939
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<259,272>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
TimePeriodValue tpv=(TimePeriodValue)this.data.get(i);
updateBounds(tpv.getPeriod(),i);
}

1.3608532106021012
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<347,350>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
updateBounds(item.getPeriod(),index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=cloneMarkerMap(this.backgroundRangeMarkers);

1.3566900008952794
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5145,5162>


-------- Repeated Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundRangeMarkers=cloneMarkerMap(this.backgroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(this.end!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List result=new ArrayList();
result.add(this.defaultGroup);
Iterator iterator=this.groups.iterator();
while(iterator.hasNext()){
Comparable group=(Comparable)iterator.next();
if(!result.contains(group)){
result.add(group);
}
}
return result;

1.3564917223250887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<116,125>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge(0));
}
return result;

1.356265525452822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1254,1260>

-------- No Patch ---------


-------- Similar Code ---------
legendItem.add(lg,this.legendItemGraphicEdge);
Font textFont=item.getLabelFont();
if(textFont==null){
textFont=this.itemFont;
}
Paint textPaint=item.getLabelPaint();
if(textPaint==null){
textPaint=this.itemPaint;
}
LabelBlock labelBlock=new LabelBlock(item.getLabel(),textFont,textPaint);
labelBlock.setPadding(this.itemLabelPadding);

1.3560767838991696
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<451,462>

-------- No Patch ---------


-------- Similar Code ---------
if(!Double.isNaN(v)){
vlist.add(n);
}

1.3551338658818386
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<108,110>

-------- No Patch ---------


-------- Similar Code ---------
int seriesCount=data.length;
List seriesNameList=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
seriesNameList.add("Series "+(i+1));
}
return seriesNameList;

1.3536459298086263
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<282,287>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=clone;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<clone;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=clone;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<clone;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
TimeSeriesDataItem item=series.getRawDataItem(i);
TimeSeriesDataItem oldItem=addOrUpdate(item.getPeriod(),item.getValue());
if(oldItem!=null){
overwritten.add(oldItem);
}
}

1.3519075570721322
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<753,760>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int index=this.data.getIndex(key);
PieDatasetChangeType ct=PieDatasetChangeType.ADD;
if(index>=0){
ct=PieDatasetChangeType.UPDATE;
}
this.data.setObject(key,new SelectableValue(value));
PieDatasetChangeInfo info=new PieDatasetChangeInfo(ct,index,index);
fireDatasetChanged(info);

1.349727046250116
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<205,213>


-------- Patch ---------
fireDatasetChanged(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
 final int index=stream.readInt();
if(index!=-1){
setPaint(index,SerialUtilities.readPaint(stream));
}
}

1.3489998562285894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<171,176>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setShape(index,SerialUtilities.readShape(stream));
}
}

1.3489998562285894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ShapeList.java<169,174>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setStroke(index,SerialUtilities.readStroke(stream));
}
}

1.3489998562285894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/StrokeList.java<166,171>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(entities!=null){
entities.add(new AxisLabelEntity(this,hotspot,this.labelToolTip,this.labelURL));
}

1.3482820160960989
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1388,1391>

-------- No Patch ---------


-------- Similar Code ---------
if(e!=null){
e.add(new PlotEntity(dataArea,this,toolTip,urlText));
}

1.3482820160960989
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1176,1178>

-------- No Patch ---------


-------- Similar Code ---------
if(key.equals(this.aggregatedItemsKey)){
p=this.aggregatedItemsPaint;
}else {
p=(Paint)this.sectionPaints.get(key);
}

1.346163550445155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<480,485>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.3459498864022055
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
Map urlMap=(Map)this.urls.get(list);
if(urlMap!=null){
result=urlMap.size();
}
return result;

1.3459498864022055
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<116,121>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.3459498864022055
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<84,89>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List tooltips=(List)this.toolTipSeries.get(list);
if(tooltips!=null){
result=tooltips.size();
}
return result;

1.3459498864022055
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<94,99>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
int index=rowData.getIndex(columnKey);
if(index>=0){
rowData.removeValue(columnKey);
}
}

1.3449198637785287
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<475,481>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(CategoryItemLabelGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("ItemLabelGenerator not cloneable.");
}

1.34288458415192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1691,1700>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.baseItemLabelGenerator=(CategoryItemLabelGenerator)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(CategoryToolTipGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base tool tip generator not cloneable.");
}

1.34288458415192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1709,1718>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.baseToolTipGenerator=(CategoryToolTipGenerator)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.baseURLGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseURLGenerator;
clone.baseURLGenerator=(CategoryURLGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base item URL generator not cloneable.");
}

1.34288458415192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1726,1733>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.baseURLGenerator=(CategoryURLGenerator)item.clone();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
set(index,stream.readObject());
}
}

1.340182894163944
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<285,290>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.3388345202485135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4605,4607>

-------- No Patch ---------


-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.3388345202485135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<574,576>

-------- No Patch ---------


-------- Similar Code ---------
if(!this.defaultGroup.equals(group)){
this.groups.add(group);
}

1.3388345202485135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<194,196>

-------- No Patch ---------


-------- Similar Code ---------
if(b_colinear){
l_minuendXs.clear();
l_minuendYs.clear();
l_subtrahendXs.clear();
l_subtrahendYs.clear();
l_polygonXs.clear();
l_polygonYs.clear();
b_colinear=false;
boolean b_useMinuend=((l_x3<=l_x1)&&(l_x1<=l_x4));
l_polygonXs.add(b_useMinuend?l_minuendCurX:l_subtrahendCurX);
l_polygonYs.add(b_useMinuend?l_minuendCurY:l_subtrahendCurY);
}

1.33876887238408
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<664,682>

-------- No Patch ---------


-------- Similar Code ---------
{
String line=input.substring(start,index);
if(index<input.length()-1){
result.addLine(line,font,paint);
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}

1.3380925259872474
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<125,134>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<values.length;i++){
int binIndex=bins-1;
if(values[i]<maximum){
double fraction=(values[i]-minimum)/(maximum-minimum);
if(fraction<0.0){
fraction=0.0;
}
binIndex=(int)(fraction*bins);
if(binIndex>=bins){
binIndex=bins-1;
}
}
HistogramBin bin=(HistogramBin)binList.get(binIndex);
bin.incrementCount();
}

1.337118762946295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<189,206>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=values.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=values;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.incrementCount();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(!urls[i].sameFile(codeBase)){
urlsNoBase.add(urls[i]);
}

1.3325795251835242
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ResourceBundleWrapper.java<102,104>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.size;index++){
if(this.objects[index]==object){
return (index);
}
}

1.330725988812425
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<161,165>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
l_polygonXs.addAll(l_minuendXs);
l_polygonYs.addAll(l_minuendYs);
l_polygonXs.add(l_intersectX);
l_polygonYs.add(l_intersectY);
Collections.reverse(l_subtrahendXs);
Collections.reverse(l_subtrahendYs);
l_polygonXs.addAll(l_subtrahendXs);
l_polygonYs.addAll(l_subtrahendYs);

1.330391443589598
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<715,726>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<cols;c++){
series.add(dataset.getXValue(c),dataset.getZValue(c,row));
}

1.3275302462745462
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/HeatMapUtilities.java<72,74>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=cols;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int r=0;r<rows;r++){
series.add(dataset.getYValue(r),dataset.getZValue(column,r));
}

1.3275302462745462
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/HeatMapUtilities.java<93,95>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=rows;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.3226051258374272
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<142,146>


-------- Patch ---------
this.data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.3226051258374272
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<132,136>


-------- Repeated Patch ---------
this.data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<series;i++){
double value=dataset.getYValue(i,index);
if(!Double.isNaN(value)){
result+=value;
}
}

1.322039910556133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<600,605>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=series;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Title duplicate=(Title)super.clone();
duplicate.listenerList=new EventListenerList();
return duplicate;

1.3217648016985404
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/Title.java<362,365>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=count-2;i>=0;i--){
coords=(double[])drState.upperCoordinates.get(i);
area.lineTo((float)coords[0],(float)coords[1]);
}

1.321745835149465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<312,315>


-------- Patch ---------
for(int index=count;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
boolean allNull=true;
int rowIndex=getRowIndex(rowKey);
DefaultKeyedValues row=(DefaultKeyedValues)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getValue(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}

1.3210451644966832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<360,375>


-------- Patch ---------
for(int index=item.getItemCount();index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(true){
this.data.remove(clone);
this.copy.remove(rowIndex);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int s=0;s<this.data.size();s++){
XYSeries series=(XYSeries)this.data.get(s);
if(series.getY(series.indexOf(x))!=null){
return false;
}
}

1.320794662871379
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<453,458>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item.getY(series.indexOf(clone))!=null){
return false;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYDataItem item=getRawDataItem(index);
boolean iterate=false;
double oldY=item.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
item.setY(y);
if(iterate){
findBoundsByIteration();
}else if(y!=null){
double yy=y.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=maxIgnoreNaN(this.maxY,yy);
}

1.3197998417212295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<668,685>


-------- Patch ---------
item.setY(data);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(false){
findBoundsByIteration();
}else if(data!=null){
double index=y.doubleValue();
this.end=minIgnoreNaN(this.minY,yy);
this.clone=maxIgnoreNaN(this.maxY,yy);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
RectangleEdge result=null;
AxisLocation location=getDomainAxisLocation(index);
if(location!=null){
result=Plot.resolveDomainAxisLocation(location,this.orientation);
}else {
result=RectangleEdge.opposite(getDomainAxisEdge(0));
}
return result;

1.3195079427872936
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<974,982>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.annotations.size();i++){
CategoryAnnotation annotation=(CategoryAnnotation)this.annotations.get(i);
annotation.removeChangeListener(this);
}

1.3187413559457792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3401,3405>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.annotations.size();i++){
XYAnnotation annotation=(XYAnnotation)this.annotations.get(i);
annotation.removeChangeListener(this);
}

1.3187413559457792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3049,3052>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int column=0;column<this.rows.size();column++){
ArrayList row=(ArrayList)this.rows.get(column);
row.clear();
}

1.3187413559457792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<300,303>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.clear();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
MatrixSeries series=(MatrixSeries)this.seriesList.get(i);
series.removeChangeListener(this);
}

1.3187413559457792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<285,288>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
return item.isSelected();

1.3184563530497264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<396,397>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Task t=(Task)this.tasks.get(i);
if(t.getDescription().equals(description)){
result=t;
break;
}
}

1.3183416771531822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<142,148>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(series!=null){
this.seriesList.add(series);
series.addChangeListener(this);
}

1.3181982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<88,91>

-------- No Patch ---------


-------- Similar Code ---------
if(!seriesXPoints.contains(xPoint)){
series.add(xPoint,null);
}

1.3181982745294945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<192,194>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.3139701119083966
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<175,179>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.3139701119083966
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<176,180>

-------- No Patch ---------


-------- Similar Code ---------
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
Comparable result=this.defaultGroup;
Comparable group=(Comparable)this.keyToGroupMap.get(key);
if(group!=null){
result=group;
}
return result;

1.312982384023281
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<158,166>

-------- No Patch ---------


-------- Similar Code ---------
if(index==start){
if(index<input.length()-1){
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}else {
result.addLine(input,font,paint);
moreInputToProcess=false;
}

1.3118742289491387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<135,146>

-------- No Patch ---------


-------- Similar Code ---------
setObject(null,rowKey,columnKey);
boolean allNull=true;
KeyedObjects row=(KeyedObjects)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getObject(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}

1.311735968882201
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<315,332>


-------- Repeated Patch ---------
for(int index=item.getItemCount();index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item.getItemCount();index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item.getItemCount();index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item.getItemCount();index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item.getItemCount();index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item.getItemCount();index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item.getItemCount();index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=item;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item.getItemCount();index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=item;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.3110120178258047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4854,4859>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
domainAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.3110120178258047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5239,5244>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.3110120178258047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5312,5317>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=entityCount-1;i>=0;i--){
ChartEntity entity=(ChartEntity)this.entities.get(i);
if(entity.getArea().contains(x,y)){
return entity;
}
}

1.3077308648627135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<143,148>


-------- Patch ---------
for(int index=entityCount;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=start;i<=end;i++){
this.data.remove(start);
}

1.3055776816670237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<344,346>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<domainAxisCount;i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}

1.305405971398624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5799,5805>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=domainAxisCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<rangeAxisCount;i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}

1.305405971398624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5807,5813>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=rangeAxisCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}

1.303365236220734
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<126,130>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int x=series.getItemColumn(itemIndex);
return new Integer(x);

1.3027146465316517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<160,163>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int y=series.getItemRow(itemIndex);
return new Integer(y);

1.3027146465316517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<179,182>

-------- No Patch ---------


-------- Similar Code ---------
XYToolTipGenerator generator=getToolTipGenerator(series,item,selected);
if(generator!=null){
tip=generator.generateToolTip(dataset,series,item);
}
String url=null;
XYURLGenerator urlster=getURLGenerator(series,item,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,series,item);
}
XYItemEntity entity=new XYItemEntity(hotspot,dataset,series,item,tip,url);
entities.add(entity);

1.3009398554857714
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1997,2009>


-------- Repeated Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,keyIndex);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(keyIndex,this.index);
}

1.2991649175638615
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<268,273>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}

1.2980971545710653
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<208,212>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}

1.2980971545710653
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<236,240>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.size();index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<999,1004>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1013,1018>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1277,1282>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1291,1296>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<972,977>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<986,991>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1270,1275>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.removeChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.297300816159481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1286,1291>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.configure();
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.29311022224765
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<522,541>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=minorTickCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.29311022224765
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<574,593>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=minorTickCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<minorTickCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=1;i<drState.lowerCoordinates.size();i++){
coords=(double[])drState.lowerCoordinates.get(i);
area.lineTo((float)coords[0],(float)coords[1]);
}

1.2912722973720288
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<305,308>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=drState.lowerCoordinates.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=drState;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=lowerCoordinates;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.fragments=new java.util.ArrayList();
TextFragment fragment=new TextFragment(text,font);
this.fragments.add(fragment);

1.2895224667493517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextLine.java<95,97>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
item.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.2895224667493517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<405,409>


-------- Repeated Patch ---------
item.setSelected(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Paint outlinePaint=getSeriesOutlinePaint(series);
Stroke stroke=getSeriesOutlineStroke(series);
LegendItem item=new LegendItem(label,description,null,null,shape,paint,stroke,outlinePaint);
item.setDataset(getDataset());
item.setSeriesKey(key);
item.setSeriesIndex(series);
result.add(item);
series++;

1.2876916978014712
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1107,1115>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<=(end-start);i++){
this.data.remove(start);
}

1.287414887131154
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<400,402>


-------- Patch ---------
for(int index=start;index<=(end-clone);index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=start;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<=(end-start);i++){
this.data.remove(start);
}

1.287414887131154
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1003,1005>


-------- Repeated Patch ---------
for(int index=start;index<=(end-clone);index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=start;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=(end-clone);index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(value<lowerOutlierThreshold){
outliers.add(number);
if(value<minOutlier&&value>=lowerFaroutThreshold){
minOutlier=value;
}
}else {
minRegularValue=Math.min(minRegularValue,value);
maxRegularValue=Math.max(maxRegularValue,value);
}

1.286131808188852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<148,157>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<bins;i++){
HistogramBin bin;
if(i==bins-1){
bin=new HistogramBin(lower,maximum);
}else {
upper=minimum+(i+1)*binWidth;
bin=new HistogramBin(lower,upper);
lower=upper;
}
binList.add(bin);
}

1.284088958008739
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<173,187>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=bins;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(xObject instanceof Number){
xNumber=(Number)xObject;
}else {
if(xObject instanceof Date){
Date xDate=(Date)xObject;
xNumber=new Long(xDate.getTime());
}else {
xNumber=new Integer(0);
}
}
Number windDir=(Number)data[seriesIndex][itemIndex][1];
Number windForce=(Number)data[seriesIndex][itemIndex][2];
oneSeriesData.add(new WindDataItem(xNumber,windDir,windForce));

1.2836082658699606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<147,162>


-------- Patch ---------
for(int index=start;index<=end;index++){
xNumber=new Long(item.getTime());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.calendar.setTime(date);
int year=this.calendar.get(Calendar.YEAR);
int month=this.calendar.get(Calendar.MONTH);
int quarter=month/3;
if(this.quarterFirst){
toAppendTo.append(this.quarters[quarter]);
toAppendTo.append(" ");
toAppendTo.append(year);
}else {
toAppendTo.append(year);
toAppendTo.append(" ");
toAppendTo.append(this.quarters[quarter]);
}

1.2832365064999398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/QuarterDateFormat.java<154,167>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot subplot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=info.getSubplotInfo(i);
subplot.handleClick(x,y,subplotInfo);
}

1.2826379726667212
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<478,482>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot subplot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=info.getSubplotInfo(i);
subplot.handleClick(x,y,subplotInfo);
}

1.2826379726667212
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<625,629>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot subplot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=info.getSubplotInfo(i);
subplot.handleClick(x,y,subplotInfo);
}

1.2826379726667212
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<645,649>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot subplot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=info.getSubplotInfo(i);
subplot.handleClick(x,y,subplotInfo);
}

1.2826379726667212
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<610,614>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(copy){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem copyItem=new JMenuItem(localizationResources.getString("Copy"));
copyItem.setActionCommand(COPY_COMMAND);
copyItem.addActionListener(this);
result.add(copyItem);
separator=!save;
}

1.2822924506072817
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2745,2756>

-------- No Patch ---------


-------- Similar Code ---------
if(entity!=null){
StandardEntityCollection sec=new StandardEntityCollection();
sec.add(entity);
result.setEntityCollection(sec);
}

1.2809461685514332
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/TextTitle.java<723,727>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>item){
SelectableValue dataItem=(SelectableValue)this.data.getObject(item);
result=dataItem.getValue();
}

1.2809461685514332
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<170,173>


-------- Patch ---------
for(int index=start;index<=end;index++){
result=item.getValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Tick tick=new DateTick(tickDate,tickLabel,anchor,rotationAnchor,angle);
result.add(tick);
long currentTickTime=tickDate.getTime();
tickDate=unit.addToDate(tickDate,this.timeZone);
long nextTickTime=tickDate.getTime();
for(int minorTick=1;minorTick<minorTickSpaces;minorTick++){
long minorTickTime=currentTickTime+(nextTickTime-currentTickTime)*minorTick/minorTickSpaces;
if(getRange().contains(minorTickTime)&&(!isHiddenValue(minorTickTime))){
result.add(new DateTick(TickType.MINOR,new Date(minorTickTime),"",TextAnchor.TOP_CENTER,TextAnchor.CENTER,0.0));
}
}

1.27399808747465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1673,1692>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=minorTickSpaces;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
copy.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Tick tick=new DateTick(tickDate,tickLabel,anchor,rotationAnchor,angle);
result.add(tick);
long currentTickTime=tickDate.getTime();
tickDate=unit.addToDate(tickDate,this.timeZone);
long nextTickTime=tickDate.getTime();
for(int minorTick=1;minorTick<minorTickSpaces;minorTick++){
long minorTickTime=currentTickTime+(nextTickTime-currentTickTime)*minorTick/minorTickSpaces;
if(getRange().contains(minorTickTime)&&(!isHiddenValue(minorTickTime))){
result.add(new DateTick(TickType.MINOR,new Date(minorTickTime),"",TextAnchor.TOP_CENTER,TextAnchor.CENTER,0.0));
}
}

1.27399808747465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1786,1804>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=minorTickSpaces;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<minorTickSpaces;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
copy.add(clone);
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.add(clone);
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
copy.add(clone);
for(int index=start;index<=minorTickSpaces;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.add(clone);
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
copy.add(clone);
for(int index=start;index<minorTickSpaces;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.add(clone);
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.add(clone);
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis xAxis=(Axis)this.domainAxes.get(i);
if(xAxis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=xAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.2739074963751584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3479,3485>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
RectangleEdge clone=getDomainAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis yAxis=(Axis)this.rangeAxes.get(i);
if(yAxis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=yAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.2739074963751584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3526,3532>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
RectangleEdge clone=getRangeAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.2739074963751584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3135,3141>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
RectangleEdge clone=getDomainAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
RectangleEdge clone=getDomainAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.2739074963751584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3182,3188>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
RectangleEdge clone=getRangeAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
RectangleEdge clone=getRangeAxisEdge(index);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
int min=calendar.get(Calendar.MINUTE);
this.minute=(byte)min;
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.2730754350646811
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Minute.java<146,158>


-------- Patch ---------
if(end==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
Calendar.getInstance(end).setTime(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.clone=(byte)start;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.item=new Day(index,end);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
peg(Calendar.getInstance(end));
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<crosshairs.size();i++){
Crosshair c=(Crosshair)crosshairs.get(i);
this.xCrosshairs.remove(c);
c.removePropertyChangeListener(this);
}

1.2724045574346934
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/panel/CrosshairOverlay.java<140,144>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<crosshairs.size();i++){
Crosshair c=(Crosshair)crosshairs.get(i);
this.yCrosshairs.remove(c);
c.removePropertyChangeListener(this);
}

1.2724045574346934
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/panel/CrosshairOverlay.java<199,203>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy.size();index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<copy;index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy.size();index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=copy;index++){
this.data.remove(clone);
clone.removePropertyChangeListener(this);
this.data.remove(clone);
clone.removePropertyChangeListener(this);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.keys.size();i++){
 final Object key=this.keys.get(i);
this.indexMap.put(key,new Integer(i));
}

1.2724045574346934
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<299,302>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.minY=Double.NaN;
this.maxY=Double.NaN;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeriesDataItem item=(TimeSeriesDataItem)iterator.next();
updateBoundsForAddedItem(item);
}

1.2723448696087953
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1246,1252>


-------- Patch ---------
for(int index=start;index<=end;index++){
updateBoundsForAddedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.minY=Double.NaN;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.maxY=Double.NaN;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastX=x;
currentTickValue+=unit;
if(cyclenow){
currentTickValue=calculateLowestVisibleTickValue();
upperValue=cycleBound;
cycled=true;
this.boundMappedToLastCycle=true;
}

1.271182360991008
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<541,560>


-------- Repeated Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<itemCount;i++){
SelectableValue item=(SelectableValue)this.data.getObject(i);
item.setSelected(false);
}

1.2707253433941508
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<414,417>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setSelected(false);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<extraLabels.size();i++){
temp[0]=extraLabels.get(i);
String labelAddition=MessageFormat.format(this.additionalFormatPattern,temp);
label.append(labelAddition);
}

1.2686677242511692
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<148,153>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<getItemCount();i++){
result.add(getTimePeriod(i));
}

1.2684771335723695
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<484,486>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYDataset existing=getDataset(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.2671835877564146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1428,1441>


-------- Patch ---------
if(index!=null){
dataset.addChangeListener(this);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
datasetChanged(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
left.moveTo((float)xx1,transStack1);
left.lineTo((float)xx1,transY1);
left.lineTo((float)xxLeft,transStackLeft);
left.clone();
}

1.2669709909068725
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedAreaRenderer.java<309,314>

-------- No Patch ---------


-------- Similar Code ---------
{
itemsInRow.add(block);
block.setBounds(new Rectangle2D.Double(x,y,size.width,size.height));
x=x+size.width;
maxHeight=Math.max(maxHeight,size.height);
}

1.2655694114163398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<189,196>

-------- No Patch ---------


-------- Similar Code ---------
{
itemsInColumn.add(block);
block.setBounds(new Rectangle2D.Double(x,y,size.width,size.height));
y=y+size.height;
maxWidth=Math.max(maxWidth,size.width);
}

1.2655694114163398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<212,219>

-------- No Patch ---------


-------- Similar Code ---------
boolean result=false;
result=list.add(outlier);
list.updateAveragedOutlier();
list.setMultiple(true);
return result;

1.2640782273254023
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<179,183>

-------- No Patch ---------


-------- Similar Code ---------
for(int d=0;d<datasetCount;d++){
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset instanceof SelectableCategoryDataset){
SelectableCategoryDataset scd=(SelectableCategoryDataset)dataset;
if(scd.getSelectionState()!=null){
CategoryDatasetSelectionState selState=scd.getSelectionState();
selState.clearSelection();
}
}
}

1.2602627451275157
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5366,5379>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int d=0;d<datasetCount;d++){
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset instanceof AbstractXYDataset){
AbstractXYDataset axyd=(AbstractXYDataset)dataset;
if(axyd.getSelectionState()!=null){
XYDatasetSelectionState selState=axyd.getSelectionState();
selState.clearSelection();
}
}
}

1.2602627451275157
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<6014,6025>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<datasetCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
double mij=get(i,j)*this.m_scaleFactor;
Number n=new Double(mij/this.m_totalSum);
return n;

1.258059155323081
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/NormalizedMatrixSeries.java<93,99>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Object obj=iterator.next();
if(obj instanceof Number){
Number n=(Number)obj;
double v=n.doubleValue();
if(!Double.isNaN(v)){
vlist.add(n);
}
}
}
Collections.sort(vlist);
this.data.addObject(vlist,rowKey,columnKey);

1.257745919015853
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<117,128>

-------- No Patch ---------


-------- Similar Code ---------
invalidateRangeInfo();
if(seriesNumber>=this.valueHistory.length){
throw new IllegalArgumentException("TimeSeriesDataset.addValue(): series #"+seriesNumber);
}
if(this.valueHistory[seriesNumber]==null){
this.valueHistory[seriesNumber]=new ValueSequence(this.historyCount);
this.seriesCount++;
}
this.valueHistory[seriesNumber].enterData(index,value);
fireSeriesChanged();

1.2571663400314255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<449,466>


-------- Patch ---------
invalidateRangeInfo();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
fireSeriesChanged();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.outlierLists.isEmpty()){
return this.outlierLists.add(new OutlierList(outlier));
}else {
boolean updated=false;
for(Iterator iterator=this.outlierLists.iterator();iterator.hasNext();){
OutlierList list=(OutlierList)iterator.next();
if(list.isOverlapped(outlier)){
updated=updateOutlierList(list,outlier);
}
}
if(!updated){
updated=this.outlierLists.add(new OutlierList(outlier));
}
return updated;
}

1.2568503034448066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<137,154>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
xAxis.setPlot(this);
xAxis.addChangeListener(this);
}
}

1.251931451128441
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5242,5248>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
yAxis.setPlot(this);
yAxis.addChangeListener(this);
}
}

1.251931451128441
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5249,5255>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(item!=null){
item.setPlot(this);
item.addChangeListener(this);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone,locale);
calendar.setTime(time);
this.year=(short)calendar.get(Calendar.YEAR);
peg(calendar);

1.2513233848848209
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Year.java<159,162>

-------- No Patch ---------


-------- Similar Code ---------
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
GeneralPath path=convertToDataSpace(region,dataArea,dataset);
int seriesCount=dataset.getSeriesCount();

1.2507461762275485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5917,5930>


-------- Patch ---------
if(end==null){
continue;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
double outlier=((Number)yOutliers.get(i)).doubleValue();
Number minOutlier=bawDataset.getMinOutlier(row,column);
Number maxOutlier=bawDataset.getMaxOutlier(row,column);
Number minRegular=bawDataset.getMinRegularValue(row,column);
Number maxRegular=bawDataset.getMaxRegularValue(row,column);
if(outlier>maxOutlier.doubleValue()){
outlierListCollection.setHighFarOut(true);
}else if(outlier<minOutlier.doubleValue()){
outlierListCollection.setLowFarOut(true);
}else if(outlier>maxRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}else if(outlier<minRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}
Collections.sort(outliers);
}

1.2475536692828602
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java<801,826>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipText!=null||this.urlText!=null){
ChartEntity entity=new ChartEntity(entityArea,this.toolTipText,this.urlText);
sec.add(entity);
result=new BlockResult();
result.setEntityCollection(sec);
}

1.2465733665633838
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/LabelBlock.java<364,370>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
 final Object object=get(i);
if(object!=null&&object instanceof Serializable){
stream.writeInt(i);
stream.writeObject(object);
}else {
stream.writeInt(-1);
}
}

1.246114252731644
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<258,267>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<count;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(entities!=null){
String tip=null;
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,key);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,key,this.pieIndex);
}
PieSectionEntity entity=new PieSectionEntity(arc,this.dataset,this.pieIndex,section,key,tip,url);
entities.add(entity);
}

1.2454019229907103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<2701,2716>

-------- No Patch ---------


-------- Similar Code ---------
List result=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
result.add(ko.getKey());
}
return result;

1.242232516387979
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<154,160>


-------- Patch ---------
for(int index=start;index<=end;index++){
copy.add(item.getKey());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(Iterator iterator=outliers.iterator();iterator.hasNext();){
Outlier outlier=(Outlier)iterator.next();
outlierListCollection.add(outlier);
}

1.2416693258966358
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java<830,833>


-------- Patch ---------
for(int index=start;index<=end;index++){
copy.add(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(Iterator iterator=outliers.iterator();iterator.hasNext();){
Outlier outlier=(Outlier)iterator.next();
outlierListCollection.add(outlier);
}

1.2416693258966358
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<664,667>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
copy.add(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMean();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<357,363>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMean();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<377,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMedian();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<397,403>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMedian();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<417,423>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ1();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<437,443>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ1();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<457,463>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ3();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<477,483>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ3();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<497,503>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<654,660>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<674,680>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<694,700>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<714,720>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<734,740>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<754,760>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<774,780>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<794,800>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getOutliers();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<814,820>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getOutliers();
}
return result;

1.2404739583721618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<834,840>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex==0){
String key=line.substring(start,i);
rowKey=removeStringDelimiters(key);
}else {
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,i)));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));
}
start=i+1;
fieldIndex++;
}
}
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,line.length())));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));

1.2404408670935703
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<155,179>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=line;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<line;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
CategoryDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
CategoryItemRenderer renderer=getRendererForDataset(dataset);

1.2392532711451891
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5314,5324>


-------- Repeated Patch ---------
if(end==null){
continue;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
XYItemRenderer renderer=getRendererForDataset(dataset);

1.2392532711451891
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5871,5881>


-------- Repeated Patch ---------
if(end==null){
continue;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.minX=Double.NaN;
this.maxX=Double.NaN;
this.minY=Double.NaN;
this.maxY=Double.NaN;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
XYDataItem item=(XYDataItem)iterator.next();
updateBoundsForAddedItem(item);
}

1.2388636614710233
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<304,312>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
updateBoundsForAddedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
this.minY=Double.NaN;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
this.maxY=Double.NaN;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.minY=Double.NaN;
for(int index=start;index<=end;index++){
updateBoundsForAddedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.maxY=Double.NaN;
for(int index=start;index<=end;index++){
updateBoundsForAddedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.minY=Double.NaN;
this.maxY=Double.NaN;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.minY=Double.NaN;
this.maxY=Double.NaN;
for(int index=start;index<=end;index++){
updateBoundsForAddedItem(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<vlist.size();i++){
Number n=(Number)vlist.get(i);
double v=n.doubleValue();
minval=Math.min(minval,v);
maxval=Math.max(maxval,v);
}

1.2386230654859616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<133,138>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
minval=Math.min(clone,item.doubleValue());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(index>=getDatasetCount()){
return ;
}
Collection markers=getDomainMarkers(index,layer);
ValueAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.2359542900119795
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4127,4138>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=getDatasetCount()){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.2359542900119795
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4160,4171>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,index);
if(!Double.isNaN(v)){
if(v>=0.0){
result[1]+=v;
}else {
result[0]+=v;
}
}
}

1.2358412537258652
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<469,479>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=series;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<series;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.23448944820387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<407,416>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.23448944820387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<460,469>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(data instanceof YisSymbolic){
yStr=((YisSymbolic)data).getYSymbolicValue(series,item);
}else {
double y=data.getYValue(series,item);
yStr=Double.toString(round(y,2));
}

1.2335700171552226
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<84,90>

-------- No Patch ---------


-------- Similar Code ---------
if(generator!=null){
tip=generator.generateToolTip(dataset,row,column);
}
String url=null;
CategoryURLGenerator urlster=getURLGenerator(row,column,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,row,column);
}
CategoryItemEntity entity=new CategoryItemEntity(s,tip,url,dataset,dataset.getRowKey(row),dataset.getColumnKey(column));
entities.add(entity);

1.2335653352117881
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1869,1879>


-------- Repeated Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(info==null){
return ;
}
EntityCollection entities=info.getOwner().getEntityCollection();
if(entities==null){
return ;
}
XYAnnotationEntity entity=new XYAnnotationEntity(hotspot,rendererIndex,toolTipText,urlText);
entities.add(entity);

1.2307426445273701
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractXYAnnotation.java<157,166>


-------- Patch ---------
if(item==null){
return ;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
item.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
ImageEncoder imageEncoder=null;
String className=(String)encoders.get(format);
if(className==null){
throw new IllegalArgumentException("Unsupported image format - "+format);
}
try{
Class imageEncoderClass=Class.forName(className);
imageEncoder=(ImageEncoder)imageEncoderClass.newInstance();
}catch (Exception e) {
  throw new IllegalArgumentException(e.toString());
}

return imageEncoder;

1.2305378583295914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/encoders/ImageEncoderFactory.java<102,115>

-------- No Patch ---------


-------- Similar Code ---------
if(null!=l_tipGenerator){
l_tip=l_tipGenerator.generateToolTip(x_dataset,x_series,x_item);
}
String l_url=null;
XYURLGenerator l_urlGenerator=getURLGenerator(x_series,x_item,selected);
if(null!=l_urlGenerator){
l_url=l_urlGenerator.generateURL(x_dataset,x_series,x_item);
}
XYItemEntity l_entity=new XYItemEntity(l_entityArea,x_dataset,x_series,x_item,l_tip,l_url);
l_entities.add(l_entity);

1.2303135374567684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<901,914>


-------- Repeated Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int index=getColumnIndex(columnKey);
if(index<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects rowData=(KeyedObjects)iterator.next();
int i=rowData.getIndex(columnKey);
if(i>=0){
rowData.removeValue(i);
}
}
this.columnKeys.remove(columnKey);

1.2293410439675616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<412,425>

-------- No Patch ---------


-------- Similar Code ---------
if(this.minMiddleIndex>=0){
long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long minMiddle=s+(e-s)/2;
if(middle<minMiddle){
this.minMiddleIndex=index;
}
}else {
this.minMiddleIndex=index;
}

1.2270614103470372
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

1.2270614103470372
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<299,311>

-------- No Patch ---------


-------- Similar Code ---------
g2.clip(dataArea);
drawDomainGridlines(g2,dataArea);
AxisState rangeAxisState=(AxisState)axisStateMap.get(getRangeAxis());
if(rangeAxisState==null){
if(parentState!=null){
rangeAxisState=(AxisState)parentState.getSharedAxisStates().get(getRangeAxis());
}
}
if(rangeAxisState!=null){
drawRangeGridlines(g2,dataArea,rangeAxisState.getTicks());
drawZeroRangeBaseline(g2,dataArea);
}

1.2269866911525455
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3666,3680>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
Number explode=(Number)this.explodePercentages.get(key);
if(explode!=null){
result=Math.max(result,explode.doubleValue());
}
}

1.2242300716847827
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<1652,1658>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getDomainMarkers(index,layer);
CategoryAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
CategoryMarker marker=(CategoryMarker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.2208507196095133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4200,4213>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.2208507196095133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4231,4244>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,row,col);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,row,col);
}
Shape area=new Rectangle((int)(point.getX()-headW),(int)(point.getY()-headH),(int)(headW*2),(int)(headH*2));
CategoryItemEntity entity=new CategoryItemEntity(area,tip,url,this.dataset,this.dataset.getRowKey(row),this.dataset.getColumnKey(col));
entities.add(entity);

1.2202307031706503
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1347,1366>


-------- Repeated Patch ---------
data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}

1.2181883201867507
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1069,1071>

-------- No Patch ---------


-------- Similar Code ---------
if(this.visibleSeries==null){
return rowIndex;
}
int index=-1;
for(int vRow=0;vRow<this.visibleSeries.length;vRow++){
if(this.visibleSeries[vRow]==rowIndex){
index=vRow;
break;
}
}
return index;

1.2170606089534846
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/CategoryItemRendererState.java<180,190>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double transY1=rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation);
if(!Double.isNaN(transX1)&&!Double.isNaN(transY1)){
ControlPoint p=new ControlPoint(plot.getOrientation()==PlotOrientation.HORIZONTAL?(float)transY1:(float)transX1,plot.getOrientation()==PlotOrientation.HORIZONTAL?(float)transX1:(float)transY1);
if(!this.points.contains(p)){
this.points.add(p);
}
}

1.216498992541362
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<182,201>

-------- No Patch ---------


-------- Similar Code ---------
if(properties){
JMenuItem propertiesItem=new JMenuItem(localizationResources.getString("Properties..."));
propertiesItem.setActionCommand(PROPERTIES_COMMAND);
propertiesItem.addActionListener(this);
result.add(propertiesItem);
separator=true;
}

1.2162516171925692
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2736,2743>

-------- No Patch ---------


-------- Similar Code ---------
this.calendar.setTime(date);
int month=this.calendar.get(Calendar.MONTH);
toAppendTo.append(this.months[month]);
if(this.showYear[month]){
toAppendTo.append(this.yearFormatter.format(date));
}
return toAppendTo;

1.2156856602896684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MonthDateFormat.java<201,207>


-------- Patch ---------
this.copy.setTime(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
int index=itemCount-1;
double x=dataset.getXValue(series,index);
while(index>=0&&(x<xLow||x>xHigh)){
index--;
if(index>=0){
x=dataset.getXValue(series,index);
}
}
return Math.max(index,0);
}

1.2151689859346007
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<228,242>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis yAxis=getRangeAxisForDataset(index);
if(xAxis==null||yAxis==null){
return foundData;
}
XYItemRenderer renderer=getRenderer(index);
if(renderer==null){
renderer=getRenderer();
if(renderer==null){
return foundData;
}
}
XYItemRendererState state=renderer.initialise(g2,dataArea,this,dataset,info);

1.2146965892140307
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3814,3827>

-------- No Patch ---------


-------- Similar Code ---------
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}

1.2132198324627606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<298,312>

-------- No Patch ---------


-------- Similar Code ---------
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}

1.2132198324627606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<336,350>

-------- No Patch ---------


-------- Similar Code ---------
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}

1.2132198324627606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<390,404>

-------- No Patch ---------


-------- Similar Code ---------
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}

1.2132198324627606
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<389,403>

-------- No Patch ---------


-------- Similar Code ---------
{
int index=0;
double x=dataset.getXValue(series,index);
while(index<itemCount&&(x<xLow||x>xHigh)){
index++;
if(index<itemCount){
x=dataset.getXValue(series,index);
}
}
return Math.min(Math.max(0,index),itemCount-1);
}

1.212763351795
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<134,148>

-------- No Patch ---------


-------- Similar Code ---------
if(unique.add(entry.getValue())){
String label=getMinPaintValue((Integer)entry.getValue()).toString()+" - ";
String description=label;
Shape shape=new Rectangle2D.Double(1.0,1.0,1.0,1.0);
Paint paint=getSeriesPaint(((Integer)entry.getValue()).intValue());
Paint outlinePaint=Color.black;
Stroke outlineStroke=DEFAULT_STROKE;
result.add(new LegendItem(label,description,null,null,shape,paint,outlineStroke,outlinePaint));
}

1.2073352041670151
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<319,335>

-------- No Patch ---------


-------- Similar Code ---------
if(k<(stemBottom+getBulbRadius())){
mercuryStem.setRoundRect(midX-j,k,i,(stemBottom+getBulbRadius())-k,l,l);
tempArea=new Area(mercuryStem);
mercury.add(tempArea);
}

1.2067922132015712
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1176,1181>

-------- No Patch ---------


-------- Similar Code ---------
for(int eq=0;eq<equations;eq++){
yCalc+=result[eq]*Math.pow(data[0][item],eq);
}

1.2065249071095954
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<307,309>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=equations;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.data.size()==0){
return ;
}
for(int i=0;i<this.data.size();i++){
OHLCSeries series=(OHLCSeries)this.data.get(i);
series.removeChangeListener(this);
}
this.data.clear();
fireDatasetChanged(new DatasetChangeInfo());

1.205849407415013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<424,437>


-------- Patch ---------
this.data.clear();
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int months;
int years;
Calendar calendar=Calendar.getInstance(this.timeZone,this.locale);
calendar.setTime(date);
int count=unit.getMultiple();
int current=calendar.get(unit.getCalendarField());
int value=count*(current/count);
DateTickUnitType t=unit.getUnitType();

1.2057816862403075
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<880,889>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
out.writeObject(key);
SerialUtilities.writePaint((Paint)map.get(key),out);
}

1.2020306346223977
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1442,1446>


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.writeObject(index);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
SerialUtilities.writePaint((Paint)data.get(index),clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
clone.writeObject(index);
SerialUtilities.writePaint((Paint)data.get(index),clone);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.unitType.getCalendarField(),this.count);
return calendar.getTime();

1.2020306346223977
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<235,238>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.rollUnitType.getCalendarField(),this.rollCount);
return calendar.getTime();

1.2020306346223977
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<271,274>

-------- No Patch ---------


-------- Similar Code ---------
if(index<0){
throw new IllegalArgumentException("Requires index >= 0.");
}
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}
this.objects[index]=object;
this.size=Math.max(this.size,index+1);

1.2016446266559442
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<123,132>

-------- No Patch ---------


-------- Similar Code ---------
MeanAndStandardDeviation item=new MeanAndStandardDeviation(mean,standardDeviation);
this.data.addObject(item,rowKey,columnKey);
double m=Double.NaN;
double sd=Double.NaN;
if(mean!=null){
m=mean.doubleValue();
}
if(standardDeviation!=null){
sd=standardDeviation.doubleValue();
}

1.1995872424287461
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<351,362>


-------- Patch ---------
if(end!=null){
item=standardDeviation.doubleValue();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CombinedDomainCategoryPlot result=(CombinedDomainCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
return result;

1.1988866638463689
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<663,670>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setParent(clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotArea[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotArea[i],subAnchor,parentState,subplotInfo);
}

1.1966574818879523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<368,381>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(start!=null){
subAnchor=start;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotAreas[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotAreas[i],subAnchor,parentState,subplotInfo);
}

1.1966574818879523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<466,479>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(start!=null){
subAnchor=start;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(start!=null){
subAnchor=start;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(start!=null){
subAnchor=start;
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(start!=null){
subAnchor=start;
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<end;index++){
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}
if(end!=null){
subplotInfo=new PlotRenderingInfo(end.getOwner());
end.addSubplotInfo(null);
}
if(start!=null){
subAnchor=start;
}

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams){
ebp=(EntityBlockParams)params;
if(ebp.getGenerateEntities()){
sec=new StandardEntityCollection();
}
}
Rectangle2D contentArea=(Rectangle2D)area.clone();
contentArea=trimMargin(contentArea);
drawBorder(g2,contentArea);

1.1943843292997713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BlockContainer.java<206,215>


-------- Patch ---------
index=trimMargin(contentArea);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
drawBorder(clone,index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TimePeriod period=(TimePeriod)this.values.getRowKey(item);
return getXValue(period);

1.1934563530497264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<379,380>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendLabelURLGenerator!=null){
urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
}
Paint paint=lookupSectionPaint(key,false);
Paint outlinePaint=lookupSectionOutlinePaint(key,false);
Stroke outlineStroke=lookupSectionOutlineStroke(key,false);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
item.setDataset(getDataset());
item.setSeriesIndex(this.dataset.getIndex(key));
item.setSeriesKey(key);
result.add(item);

1.191523105580966
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3050,3066>


-------- Patch ---------
item.setDataset(getDataset());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
data.add(item);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemPaint(series,item);
}

1.1885274816004225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<737,739>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemFillPaint(series,item);
}

1.1885274816004225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<917,919>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemOutlinePaint(series,item);
}

1.1885274816004225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1087,1090>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemShape(series,item);
}

1.1885274816004225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useOutlinePaint){
outlinePaint=getItemOutlinePaint(series,item,selected);
}

1.1885274816004225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<752,754>

-------- No Patch ---------


-------- Similar Code ---------
if(item==s.getLastItemIndex()){
drawShape1(g2,pass,series,item,selected,s.seriesPath);
}

1.1871335550304924
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<969,972>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.VERTICAL){
left.moveTo(transX1,transStack1);
left.lineTo(transX1,transY1);
left.lineTo(transXLeft,transStackLeft);
}else {
left.moveTo(transStack1,transX1);
left.lineTo(transY1,transX1);
left.lineTo(transStackLeft,transXLeft);
}
left.clone();

1.1866651181462038
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<367,377>

-------- No Patch ---------


-------- Similar Code ---------
if(visible){
drawShape1(g2,pass,series,item,selected,state.workingLine);
}

1.1861917691714599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<886,888>

-------- No Patch ---------


-------- Similar Code ---------
ValueSequence values=this.valueHistory[series];
return values.getData(translateGet(item));

1.1843696767430927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<754,755>

-------- No Patch ---------


-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
b.setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
return new Size2D(s.width,s.height);

1.1787063241245663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<283,287>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.1784113556382407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<407,409>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.1784113556382407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<516,518>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries series=sampleFunction2DToSeries(f,start,end,samples,seriesKey);
XYSeriesCollection collection=new XYSeriesCollection(series);
return collection;

1.1746987753628986
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<510,513>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.174134848312531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<342,347>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.174134848312531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<348,353>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.174134848312531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<382,387>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.174134848312531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
if(save){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem saveItem=new JMenuItem(localizationResources.getString("Save_as..."));
saveItem.setActionCommand(SAVE_COMMAND);
saveItem.addActionListener(this);
result.add(saveItem);
separator=true;
}

1.1741013448684408
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2758,2769>

-------- No Patch ---------


-------- Similar Code ---------
if(print){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem printItem=new JMenuItem(localizationResources.getString("Print..."));
printItem.setActionCommand(PRINT_COMMAND);
printItem.addActionListener(this);
result.add(printItem);
separator=true;
}

1.1741013448684408
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2771,2782>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<384,389>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<414,419>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=getHigh(series,item);
if(n!=null){
result=n.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<215,220>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<249,254>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<283,288>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<317,322>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<351,356>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number high=getHigh(series,item);
if(high!=null){
result=high.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<146,151>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<176,181>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<206,211>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<236,241>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<266,271>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getStartX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<64,69>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getEndX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<82,87>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getStartY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<100,105>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getEndY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<118,123>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<76,81>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number z=getZ(series,item);
if(z!=null){
result=z.doubleValue();
}
return result;

1.1739309624621435
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYZDataset.java<60,65>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Map.Entry entry=(Map.Entry)iterator.next();
Paint p1=(Paint)entry.getValue();
Paint p2=(Paint)map2.get(entry.getKey());
if(!PaintUtilities.equal(p1,p2)){
return false;
}
}

1.1720768453101886
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1465,1472>

-------- No Patch ---------


-------- Similar Code ---------
if(data instanceof XisSymbolic){
xStr=((XisSymbolic)data).getXSymbolicValue(series,item);
}else if(data instanceof TimeSeriesCollection){
RegularTimePeriod p=((TimeSeriesCollection)data).getSeries(series).getTimePeriod(item);
xStr=p.toString();
}else {
double x=data.getXValue(series,item);
xStr=Double.toString(round(x,2));
}

1.1713808507732595
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<91,103>


-------- Patch ---------
for(int index=start;index<=end;index++){
xStr=item.toString();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
String result=null;
Object[] items=createItemArray((XYZDataset)dataset,series,item);
result=MessageFormat.format(getFormatString(),items);
return result;

1.1713641887041
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<180,183>

-------- No Patch ---------


-------- Similar Code ---------
if(itemsInRow.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width-x),size.height));
x=0.0;
y=y+size.height;
}else {
itemsInRow.clear();
x=0.0;
y=y+maxHeight;
maxHeight=size.height;
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width),size.height));
x=size.width+this.horizontalGap;
itemsInRow.add(block);
}

1.1706279286904202
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<198,221>

-------- No Patch ---------


-------- Similar Code ---------
if(itemsInColumn.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height-y)));
y=0.0;
x=x+size.width;
}else {
itemsInColumn.clear();
x=x+maxWidth;
y=0.0;
maxWidth=size.width;
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height)));
y=size.height+this.verticalGap;
itemsInColumn.add(block);
}

1.1706279286904202
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<221,244>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}

1.1701426372034023
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<379,382>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}

1.1701426372034023
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<329,332>

-------- No Patch ---------


-------- Similar Code ---------
if(getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,false);
}

1.168184439853002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<366,369>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
State s=(State)state;
s.seriesPath.reset();
s.setLastPointGood(false);
}

1.167873642830583
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<328,332>


-------- Patch ---------
for(int index=start;index<=end;index++){
s.seriesPath.reset();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setLastPointGood(false);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
s.seriesPath.reset();
item.setLastPointGood(false);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
width=width+sizes[i].getWidth();
maxHeight=Math.max(sizes[i].height,maxHeight);
block.setBounds(new Rectangle2D.Double(x,0.0,sizes[i].width,sizes[i].height));
x=x+sizes[i].width;
}

1.1676308820048706
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<364,375>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
height=height+sizes[i].getHeight();
maxWidth=Math.max(sizes[i].width,maxWidth);
block.setBounds(new Rectangle2D.Double(0.0,y,sizes[i].width,sizes[i].height));
y=y+sizes[i].height;
}

1.1676308820048706
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<319,330>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.foregroundDomainMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1673769136493544
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2565,2576>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1673769136493544
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2839,2850>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1673769136493544
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2554,2565>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1673769136493544
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2857,2868>


-------- Repeated Patch ---------
for(int index=start;index<=end;index++){
item.removeChangeListener(this);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
RectangleInsets insets=getInsets();
insets.trim(plotArea);
Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();
if(info!=null){
info.setPlotArea(plotArea);
info.setDataArea(plotArea);
}
drawBackground(g2,plotArea);
Shape savedClip=g2.getClip();

1.1659740538037249
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<232,243>

-------- No Patch ---------


-------- Similar Code ---------
String result=null;
Object[] items=createItemArray(dataset,series,item);
result=MessageFormat.format(this.formatString,items);
return result;

1.1657270844796221
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<247,250>

-------- No Patch ---------


-------- Similar Code ---------
while(low<=high){
int mid=(low+high)/2;
Segment midSegment=(Segment)this.exceptionSegments.get(mid);
if(segment.contains(midSegment)||midSegment.contains(segment)){
return mid;
}
if(midSegment.before(segment)){
low=mid+1;
}else if(midSegment.after(segment)){
high=mid-1;
}else {
throw new IllegalStateException("Invalid condition.");
}
}

1.1655859109434963
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1147,1165>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,hotspot,dataset,series,item,selected,transX,transY);
}

1.1631030544848153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<478,481>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,shape,dataset,series,item,selected,transX1,transY1);
}

1.1631030544848153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<521,524>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<subCategoryCount;i++){
if(RectangleEdge.isTopOrBottom(edge)){
xx=(float)(x0+(i+0.5)*width);
yy=(float)area.getCenterY();
}else {
xx=(float)area.getCenterX();
yy=(float)(y0+(i+0.5)*height);
}
String label=this.subCategories.get(i).toString();
TextUtilities.drawRotatedString(label,g2,xx,yy,TextAnchor.CENTER,0.0,TextAnchor.CENTER);
}

1.162495101977952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<366,378>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=subCategoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator toolTipGenerator=getToolTipGenerator();
if(toolTipGenerator!=null){
tip=toolTipGenerator.generateToolTip(dataset,key);
}
String url=null;
PieURLGenerator urlGenerator=getURLGenerator();
if(urlGenerator!=null){
url=urlGenerator.generateURL(dataset,key,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(path,dataset,getPieIndex(),section,key,tip,url);
entities.add(entity);
}

1.162210044272014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<426,444>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useFillPaint){
g2.setPaint(getItemFillPaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.1609993626001298
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1028,1033>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.160768922830523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<439,444>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.160768922830523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<548,553>

-------- No Patch ---------


-------- Similar Code ---------
ticks.add(new NumberTick(new Double(t0),"",TextAnchor.CENTER,TextAnchor.CENTER,0.0));
x0=valueToJava2D(t0,dataArea,edge);
if(edge==RectangleEdge.TOP){
inside=new Line2D.Double(x0,y0,x0,y0+insideLength);
outside=new Line2D.Double(x0,y0,x0,y0-outsideLength);
}else if(edge==RectangleEdge.BOTTOM){
inside=new Line2D.Double(x0,y0,x0,y0-insideLength);
outside=new Line2D.Double(x0,y0,x0,y0+outsideLength);
}

1.158456818863889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<731,741>

-------- No Patch ---------


-------- Similar Code ---------
FontMetrics fm=this.g2.getFontMetrics();
Rectangle2D bounds=TextUtilities.getTextBounds(text.substring(start,end),this.g2,fm);
float result=(float)bounds.getWidth();
return result;

1.1582626253742871
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/G2TextMeasurer.java<75,79>

-------- No Patch ---------


-------- Similar Code ---------
CombinedRangeCategoryPlot result=(CombinedRangeCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.157942103085713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<530,545>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setParent((CombinedRangeCategoryPlot)super.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(index!=null){
rangeAxis.configure();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CombinedRangeXYPlot result=(CombinedRangeXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.157942103085713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<678,692>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setParent((CombinedRangeXYPlot)super.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
if(index!=null){
rangeAxis.configure();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
if(index!=null){
rangeAxis.configure();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
CombinedDomainXYPlot result=(CombinedDomainXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis domainAxis=result.getDomainAxis();
if(domainAxis!=null){
domainAxis.configure();
}
return result;

1.157942103085713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<697,711>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.setParent((CombinedDomainXYPlot)super.clone());
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
if(index!=null){
domainAxis.configure();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
double width=constraint.getWidth();
Rectangle2D bounds=new Rectangle2D.Double((width-s.width)/2.0,0.0,s.width,s.height);
b.setBounds(bounds);
return new Size2D((width-s.width)/2.0,s.height);

1.1579288724113284
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<147,154>

-------- No Patch ---------


-------- Similar Code ---------
if(object instanceof OHLCDataItem){
OHLCDataItem item=(OHLCDataItem)object;
return this.date.compareTo(item.date);
}else {
throw new ClassCastException("OHLCDataItem.compareTo().");
}

1.157899243484486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/OHLCDataItem.java<201,207>

-------- No Patch ---------


-------- Similar Code ---------
Date previous=previousStandardDate(date,unit);
Calendar calendar=Calendar.getInstance(this.timeZone,this.locale);
calendar.setTime(previous);
calendar.add(unit.getCalendarField(),unit.getMultiple());
return calendar.getTime();

1.1576105229127633
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1093,1097>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getFirstMillisecond(this.workingCalendar));

1.1560310020263098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<779,780>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getLastMillisecond(this.workingCalendar));

1.1560310020263098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<792,793>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
items=createItemArray((XYZDataset)dataset,series,item);
}else {
items=createItemArray(dataset,series,item);
}

1.1556707049815413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<182,187>

-------- No Patch ---------


-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.15549144430233
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<497,516>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.15549144430233
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<696,715>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(Iterator j=map.keySet().iterator();j.hasNext();){
key=(String)j.next();
newMap.put(key,map.get(key));
}

1.1543338830461352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<213,216>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,yyAverage,xx);
}

1.153758641592529
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<486,489>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,xx,yyAverage);
}

1.153758641592529
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<700,703>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.1533811169530066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<523,536>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.1533811169530066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<722,735>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double[] yyEnd=new double[yEnd.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(xStart,0,xxStart,0,xStart.length);
System.arraycopy(xEnd,0,xxEnd,0,xEnd.length);
System.arraycopy(y,0,yy,0,y.length);
System.arraycopy(yStart,0,yyStart,0,yStart.length);
System.arraycopy(yEnd,0,yyEnd,0,yEnd.length);
clone.seriesList.add(i,new double[][]{xx,xxStart,xxEnd,yy,yyStart,yyEnd});

1.153267595665222
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<540,548>

-------- No Patch ---------


-------- Similar Code ---------
while(measurer.getStringWidth(text,start,end)>width){
end--;
if(end<=start){
return end;
}
}

1.1525785892056737
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<253,258>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&circle.intersects(dataArea)){
addEntity(entities,circle,dataset,series,item,selected,circle.getCenterX(),circle.getCenterY());
}

1.1515917279707324
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<259,263>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.1505105150230601
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<909,912>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.1505105150230601
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1058,1061>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,null,dataset,series,item,selected,transX1,transY1);
}

1.1501857794816084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<278,281>

-------- No Patch ---------


-------- Similar Code ---------
g2.setStroke(getItemStroke(series,item,selected));
g2.setPaint(getItemPaint(series,item,selected));
g2.draw(shape);

1.1485732617714162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<905,907>

-------- No Patch ---------


-------- Similar Code ---------
if(pass==0&&getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,!getUseYInterval());
}

1.148336093669391
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<310,313>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1475981465156782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<921,925>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1475981465156782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1070,1074>

-------- No Patch ---------


-------- Similar Code ---------
HashSet hs=(HashSet)this.xPoints.clone();
Iterator iterator=hs.iterator();
while(iterator.hasNext()){
Number x=(Number)iterator.next();
if(canPrune(x)){
removeAllValuesForX(x);
}
}

1.1469944211498837
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<466,473>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<highLowDataset.getItemCount(series);item++){
double volume=highLowDataset.getVolumeValue(series,item);
if(volume>this.maxVolume){
this.maxVolume=volume;
}
}

1.1451675420656637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<618,625>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.getItemCount(clone);index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TextBlock label=super.createLabel(category,width,edge,g2);
String s=(String)this.sublabels.get(category);
if(s!=null){
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
TextLine line=new TextLine(s,this.sublabelFont,this.sublabelPaint);
label.addLine(line);
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
TextLine line=label.getLastLine();
if(line!=null){
line.addFragment(new TextFragment("  "+s,this.sublabelFont,this.sublabelPaint));
}
}
}
return label;

1.1446549006679276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<173,190>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemLineVisible(series,item)){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}

1.14328200498446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<334,338>

-------- No Patch ---------


-------- Similar Code ---------
long start=Math.max(from,this.segmentStart);
long end=Math.min(to,this.segmentEnd);
if(start<=end){
return new SegmentRange(start,end);
}else {
return null;
}

1.1429381987305245
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1672,1683>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.1414283074846956
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4823,4841>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
if(useAnchor){
double sourceX=source.getX();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceX=source.getY();
}
double anchorX=domainAxis.java2DToValue(sourceX,info.getDataArea(),getDomainAxisEdge());
domainAxis.resizeRange2(factor,anchorX);
}else {
domainAxis.resizeRange(factor);
}
}
}

1.1414283074846956
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5202,5220>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.1414283074846956
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5279,5297>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int s=0;s<seriesCount;s++){
double value=dataset.getYValue(s,item);
if(!Double.isNaN(value)){
total=total+value;
}
}

1.1393893705702296
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2103,2108>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(categoryIndex);
if(arc==null){
continue;
}
Comparable key=getSectionKey(categoryIndex);
paint=lookupSectionPaint(key,false);
outlinePaint=lookupSectionOutlinePaint(key,false);
outlineStroke=lookupSectionOutlineStroke(key,false);
g2.setPaint(paint);

1.1384926638145458
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<460,468>


-------- Patch ---------
copy.setPaint(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(x.length==2){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}

1.137809387638973
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<239,243>

-------- No Patch ---------


-------- Similar Code ---------
this.axisOffset.trim(dataArea);
dataArea=integerise(dataArea);
if(dataArea.isEmpty()){
return ;
}
createAndAddEntity((Rectangle2D)dataArea.clone(),info,null,null);
if(info!=null){
info.setDataArea(dataArea);
}
drawBackground(g2,dataArea);
Map axisStateMap=drawAxes(g2,area,dataArea,info);

1.1362831654115266
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3242,3255>

-------- No Patch ---------


-------- Similar Code ---------
if(item==dataset.getItemCount(series)-1){
if(s.seriesIndex==series){
g2.setStroke(lookupSeriesStroke(series));
g2.setPaint(lookupSeriesPaint(series));
g2.draw(s.seriesPath);
}
}

1.1349301949456165
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<798,805>

-------- No Patch ---------


-------- Similar Code ---------
double x1;
if(this.useSeriesOffset){
x1=domainAxis.getCategorySeriesMiddle(column,dataset.getColumnCount(),visibleRow,visibleRowCount,this.itemMargin,dataArea,plot.getDomainAxisEdge());
}else {
x1=domainAxis.getCategoryMiddle(column,getColumnCount(),dataArea,plot.getDomainAxisEdge());
}
Number n=(Number)values.get(i);
double value=n.doubleValue();
double y1=rangeAxis.valueToJava2D(value,dataArea,plot.getRangeAxisEdge());

1.1336480823841357
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<411,424>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(item.getValue()!=null){
double y=yN.doubleValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.131886996247689
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1211,1216>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,value<0.0);
}

1.130776905453651
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,y1<0.0);
}

1.130776905453651
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<318,323>

-------- No Patch ---------


-------- Similar Code ---------
Iterator iterator=this.bins.iterator();
while(iterator.hasNext()){
SimpleHistogramBin existingBin=(SimpleHistogramBin)iterator.next();
if(bin.overlapsWith(existingBin)){
throw new RuntimeException("Overlapping bin");
}
}
this.bins.add(bin);
Collections.sort(this.bins);

1.1286552269297678
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<184,193>


-------- Patch ---------
this.copy.add(data);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
Collections.sort(this.copy);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator tipster=getToolTipGenerator();
if(tipster!=null){
tip=tipster.generateToolTip(dataset,currentKey);
}
String url=null;
if(getURLGenerator()!=null){
url=getURLGenerator().generateURL(dataset,currentKey,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(upperArc,dataset,getPieIndex(),sectionIndex,currentKey,tip,url);
entities.add(entity);
}

1.128340101670749
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<556,572>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(yN!=null){
double y=yN.doubleValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
findBoundsByIteration();
}
}
}

1.1265688971273013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1228,1236>

-------- No Patch ---------


-------- Similar Code ---------
if(Modifier.isPublic(f.getModifiers())&&Modifier.isFinal(f.getModifiers())){
String name=f.getName();
Object oColor=f.get(null);
if(oColor instanceof Color){
if(c.equals(oColor)){
return name;
}
}
}

1.126002541570632
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintUtilities.java<116,126>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=1;item<itemCount;item++){
double x=this.dataset.getXValue(series,item);
result=Math.min(result,x-prev);
prev=x;
}

1.1252877909696366
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/IntervalXYDelegate.java<420,424>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(item.getValue()!=null){
double yy=item.getValue().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}

1.12441874505733
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<841,845>

-------- No Patch ---------


-------- Similar Code ---------
Shape entityArea=null;
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)||Double.isNaN(x1)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();

1.1231021516890616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1000,1011>

-------- No Patch ---------


-------- Similar Code ---------
int validItems=0;
double[][] data=new double[2][itemCount];
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(!Double.isNaN(x)&&!Double.isNaN(y)){
data[0][validItems]=x;
data[1][validItems]=y;
validItems++;
}
}

1.1226599077113284
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<256,266>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
super(area,toolTipText,urlText);
this.dataset=dataset;
this.series=series;
this.item=item;

1.1220987218683118
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/XYItemEntity.java<88,91>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1212551905559067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<240,243>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1212551905559067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<293,296>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value=dataset.getYValue(series,item);
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
maximum=Math.max(maximum,value);
}
}

1.1207332516012474
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1262,1268>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
if(!Double.isNaN(x)){
minimum=Math.min(minimum,x);
maximum=Math.max(maximum,x);
}
}

1.1207332516012474
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1335,1341>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(getDarkerSides()){
if(paint instanceof Color){
Color c=(Color)paint;
c=c.darker();
paint=c;
}
}
double start=arc.getAngleStart();
double extent=arc.getAngleExtent();
double end=start+extent;
g2.setStroke(outlineStroke);

1.1190925190531404
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<621,633>


-------- Patch ---------
for(int index=start;index<=end;index++){
c=item.darker();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
paint=item;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
c=item.darker();
paint=item;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
data.setStroke(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
while(iterator.hasNext()){
Comparable category=(Comparable)iterator.next();
g2.setFont(getTickLabelFont(category));
TextBlock label=createLabel(category,l*r,edge,g2);
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
max=Math.max(max,calculateTextBlockHeight(label,position,g2));
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
max=Math.max(max,calculateTextBlockWidth(label,position,g2));
}
Tick tick=new CategoryTick(category,label,position.getLabelAnchor(),position.getRotationAnchor(),position.getAngle());
ticks.add(tick);
categoryIndex=categoryIndex+1;
}

1.118981064124674
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1121,1139>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yyHigh,false);
drawAdditionalItemLabel(g2,orientation,dataset,series,item,xx,yyLow);
}

1.1175660912210175
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<232,237>

-------- No Patch ---------


-------- Similar Code ---------
case WIDTHMETHOD_INTERVALDATA :
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
double startPos=domainAxis.valueToJava2D(intervalXYData.getStartXValue(series,item),dataArea,plot.getDomainAxisEdge());
double endPos=domainAxis.valueToJava2D(intervalXYData.getEndXValue(series,item),dataArea,plot.getDomainAxisEdge());
xxWidth=Math.abs(endPos-startPos);
break;


1.1146963305767268
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<730,740>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double z=Double.NaN;
if(dataset instanceof XYZDataset){
XYZDataset xyzData=(XYZDataset)dataset;
z=xyzData.getZValue(series,item);
}

1.1144611553616182
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<176,189>

-------- No Patch ---------


-------- Similar Code ---------
super(paint,stroke,outlinePaint,outlineStroke,alpha);
this.startValue=start;
this.endValue=end;
this.gradientPaintTransformer=null;
setLabelOffsetType(LengthAdjustmentType.CONTRACT);

1.1144609243552697
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/IntervalMarker.java<117,121>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.line.setLine(transX0,transY0,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.line.setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.line);
}

1.1143316909069099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<605,613>

-------- No Patch ---------


-------- Similar Code ---------
{
Range result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
int count=series.getItemCount();
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}
}
return result;
}

1.113911258383627
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<651,673>

-------- No Patch ---------


-------- Similar Code ---------
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
double value=intervalDataset.getYValue(series,item);
if(Double.isNaN(value)){
return ;
}
double total=0.0;
if(this.renderAsPercentages){
total=DatasetUtilities.calculateStackTotal((TableXYDataset)dataset,item);
value=value/total;
}

1.1124659935096197
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<256,274>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
double z=((XYZDataset)dataset).getZValue(series,item);
p=this.paintScale.getPaint(z);
}else {
if(this.useFillPaint){
p=getItemFillPaint(series,item,selected);
}else {
p=getItemPaint(series,item,selected);
}
}

1.1106829465616705
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<500,511>

-------- No Patch ---------


-------- Similar Code ---------
Paint paint=lookupSeriesPaint(series);
LegendItem item=new LegendItem(label,paint);
item.setToolTipText(toolTipText);
item.setURLText(urlText);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}

1.1095670591386717
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1006,1014>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()-this.barWidth/2.0);
}
return result;

1.1090659155918265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<219,224>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()+this.barWidth/2.0);
}
return result;

1.1090659155918265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<251,256>

-------- No Patch ---------


-------- Similar Code ---------
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(x1)||Double.isNaN(y1)){
itemVisible=false;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();

1.108011569569053
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<751,762>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.1070212686010013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<342,352>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.1070212686010013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<784,794>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D bounds=createHotSpotBounds(g2,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,state,null);
if(bounds==null){
return false;
}
return bounds.contains(xx,yy);

1.106631103370551
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1087,1095>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotShapes()){
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
g2.draw(shape);
}

1.1061935814999952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<591,602>

-------- No Patch ---------


-------- Similar Code ---------
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)transY1,(int)transX1);
}
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);

1.1061641810538898
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<577,587>


-------- Patch ---------
data.setPaint(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double end=im.getEndValue();
Range range=domainAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=domainAxis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double end2d=domainAxis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);

1.1051159210977617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1358,1369>

-------- No Patch ---------


-------- Similar Code ---------
double end=im.getEndValue();
Range range=rangeAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=rangeAxis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=rangeAxis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);

1.1051159210977617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1557,1568>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(xRange.contains(x)){
if(!Double.isNaN(y)){
minimum=Math.min(minimum,y);
maximum=Math.max(maximum,y);
}
}
}

1.1050613991553444
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1464,1473>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number min=item.getMinOutlier();
if(min!=null){
double minv=min.doubleValue();
if(!Double.isNaN(minv)){
if(minv<this.minimumRangeValue||Double.isNaN(this.minimumRangeValue)){
this.minimumRangeValue=minv;
this.minimumRangeValueRow=r;
this.minimumRangeValueColumn=c;
}
}
}

1.1044692618797967
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<860,871>

-------- No Patch ---------


-------- Similar Code ---------
Number startX=null;
Number x=this.dataset.getX(series,item);
if(x!=null){
startX=new Double(x.doubleValue()-(getIntervalPositionFactor()*getIntervalWidth()));
}
return startX;

1.104417657300259
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/IntervalXYDelegate.java<262,268>

-------- No Patch ---------


-------- Similar Code ---------
Paint paint=lookupSeriesPaint(series);
Paint outlinePaint=lookupSeriesOutlinePaint(series);
Stroke outlineStroke=lookupSeriesOutlineStroke(series);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint,outlineStroke,outlinePaint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}

1.1033810761362748
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1443,1453>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useYInterval){
value0=ixyd.getStartYValue(series,item);
value1=ixyd.getEndYValue(series,item);
}else {
value0=this.base;
value1=ixyd.getYValue(series,item);
}

1.1032784957966146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<817,824>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());

1.1032571852207134
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<283,296>


-------- Patch ---------
if(Double.isNaN(index)){
y1=0.0;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(item==s.getLastItemIndex()){
PathIterator pi=s.seriesPath.getPathIterator(null);
int count=0;
while(!pi.isDone()){
count++;
pi.next();
}
g2.setStroke(getItemStroke(series,item,selected));
g2.setPaint(getItemPaint(series,item,selected));
g2.draw(s.seriesPath);
g2.draw(s.intervalPath);
}

1.1029264513401653
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<getToolTipCount(series);item++){
String t1=getToolTipText(series,item);
String t2=generator.getToolTipText(series,item);
if(t1!=null){
result=result&&t1.equals(t2);
}else {
result=result&&(t2==null);
}
}

1.1025430457591037
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<184,193>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(getUseYInterval()){
y0=intervalDataset.getStartYValue(series,item);
y1=intervalDataset.getEndYValue(series,item);
}else {
y0=getBase();
y1=intervalDataset.getYValue(series,item);
}

1.1025243599811394
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<229,236>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}

1.1023363844719207
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1036,1046>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.102312073438617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1229,1238>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.102312073438617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1246,1255>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartXValue(series,item);
double uvalue=ixyd.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.102312073438617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1316,1325>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(isShapesFilled()){
g2.fill(shape);
}else {
g2.draw(shape);
}

1.1018120052466276
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<447,461>

-------- No Patch ---------


-------- Similar Code ---------
if(!(range.intersects(start,end))){
return ;
}
 final Composite savedComposite=g2.getComposite();
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,marker.getAlpha()));
double start2d=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);

1.1010746911809766
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1236,1249>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getXValue(series,item);
uvalue=lvalue;
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0997892530641056
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<133,138>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getYValue(series,item);
uvalue=lvalue;
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0997892530641056
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<189,194>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Shape shape=lookupLegendShape(series);
Paint paint=lookupSeriesPaint(series);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getRowKey(series));

1.0996113021525784
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/CategoryStepRenderer.java<195,205>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getStartValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
minimum=Math.min(minimum,value.doubleValue());
}
}

1.0991041400472121
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1626,1639>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getEndValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
maximum=Math.max(maximum,value.doubleValue());
}
}

1.0991041400472121
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1744,1757>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(item==0){
areaState.area=new Polygon();
double zero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)zero);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)zero,(int)transX1);
}
}

1.0990340073264413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<563,574>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getStartXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
}
}

1.0990022151508032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1512,1527>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getEndXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}
if(!Double.isNaN(value)){
maximum=Math.max(maximum,value);
}
}

1.0990022151508032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1569,1583>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double translatedValue1=rangeAxis.valueToJava2D(value1,dataArea,plot.getRangeAxisEdge());
double bottom=Math.min(translatedValue0,translatedValue1);
double top=Math.max(translatedValue0,translatedValue1);
double startX=ixyd.getStartXValue(series,item);
if(Double.isNaN(startX)){
return null;
}
double endX=ixyd.getEndXValue(series,item);
if(Double.isNaN(endX)){
return null;
}

1.0987547476605726
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<841,853>


-------- Patch ---------
if(Double.isNaN(index)){
return null;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int volume=(int)highLowData.getVolumeValue(series,item);
double volumeHeight=volume/this.maxVolume;
double min,max;
if(horiz){
min=dataArea.getMinX();
max=dataArea.getMaxX();
}else {
min=dataArea.getMinY();
max=dataArea.getMaxY();
}

1.0987541269463081
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<760,771>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0987244362575523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3851,3860>


-------- Patch ---------
for(int index=firstItem;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=lastItem;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0987244362575523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3882,3891>


-------- Repeated Patch ---------
for(int index=firstItem;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=lastItem;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=firstItem;index<=lastItem;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
State drState=(State)state;
double x=intervalDataset.getXValue(series,item);
double yLow=intervalDataset.getStartYValue(series,item);
double yHigh=intervalDataset.getEndYValue(series,item);
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,xAxisLocation);

1.0984019788478823
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<269,279>

-------- No Patch ---------


-------- Similar Code ---------
if(label==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,selected);
g2.setFont(labelFont);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setPaint(paint);
ItemLabelPosition position=null;
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}

1.0983317477276477
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1023,1039>


-------- Patch ---------
data.setFont(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
data.setPaint(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
XYAreaRendererState areaState=(XYAreaRendererState)state;
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());

1.098302560840051
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<494,508>


-------- Repeated Patch ---------
if(Double.isNaN(index)){
y1=0.0;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
TableXYDataset tdataset=(TableXYDataset)dataset;
PlotOrientation orientation=plot.getOrientation();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double[] stack1=getStackValues(tdataset,series,item);
double x0=dataset.getXValue(series,Math.max(item-1,0));

1.097475614231168
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<223,236>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getXValue(series,item);
uvalue=lvalue;
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}
}

1.097199546647821
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<768,775>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double dx=0.0;
double dy=0.0;
if(dataset instanceof VectorXYDataset){
dx=((VectorXYDataset)dataset).getVectorXValue(series,item);
dy=((VectorXYDataset)dataset).getVectorYValue(series,item);
}
double xx0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());

1.0966661528055948
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<224,233>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double transY1=rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation);
State s=(State)state;

1.0963654441897117
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<230,242>

-------- No Patch ---------


-------- Similar Code ---------
double x=item.getXValue();
this.minX=minIgnoreNaN(this.minX,x);
this.maxX=maxIgnoreNaN(this.maxX,x);
if(item.getY()!=null){
double y=item.getYValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.0955925426234938
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<248,255>


-------- Patch ---------
this.index=maxIgnoreNaN(this.maxX,item.getXValue());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
WindDataset windData=(WindDataset)dataset;
Paint seriesPaint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(seriesPaint);
g2.setStroke(seriesStroke);
Number x=windData.getX(series,item);
Number windDir=windData.getWindDirection(series,item);
Number wforce=windData.getWindForce(series,item);

1.0954403785890743
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/WindItemRenderer.java<120,131>

-------- No Patch ---------


-------- Similar Code ---------
Segment start=getSegment(fromMillisecond);
Segment end=getSegment(toMillisecond);
this.millisecond=fromMillisecond;
this.segmentNumber=calculateSegmentNumber(fromMillisecond);
this.segmentStart=start.segmentStart;
this.segmentEnd=end.segmentEnd;
this.segmentCount=(end.getSegmentNumber()-start.getSegmentNumber()+1);

1.0935198415261702
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1632,1645>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation.equals(PlotOrientation.HORIZONTAL)){
line=new Line2D.Double(yy0,xx0,yy1,xx1);
}else {
line=new Line2D.Double(xx0,yy0,xx1,yy1);
}
g2.setPaint(getItemPaint(series,item,selected));
g2.setStroke(getItemStroke(series,item,selected));
g2.draw(line);
double dxx=(xx1-xx0);

1.0931759326762642
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<242,253>


-------- Patch ---------
copy.draw(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=intervalXYData.getStartXValue(series,item);
uvalue=intervalXYData.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0926831482366857
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<753,762>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)||Double.isNaN(x1)){
return ;
}
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
if(Double.isNaN(y0)||Double.isNaN(x0)){
return ;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();

1.0926767057232007
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<850,862>

-------- No Patch ---------


-------- Similar Code ---------
Shape shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}else if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}
if(shape.intersects(dataArea)){
if(getItemShapeFilled(series,item)){
g2.fill(shape);
}else {
g2.draw(shape);
}
}

1.0920565358282357
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<866,882>

-------- No Patch ---------


-------- Similar Code ---------
for(int pieItem=0;pieItem<getListCount();pieItem++){
if(getURLCount(pieItem)!=generator.getURLCount(pieItem)){
return false;
}
keySet=((HashMap)this.urls.get(pieItem)).keySet();
String key;
for(Iterator i=keySet.iterator();i.hasNext();){
key=(String)i.next();
if(!getURL(key,pieItem).equals(generator.getURL(key,pieItem))){
return false;
}
}
}

1.0919026154667595
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<177,190>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(pass==0){
drawItemPass0(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}else if(pass==1){
drawItemPass1(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}

1.0915632875171581
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<380,387>

-------- No Patch ---------


-------- Similar Code ---------
Font labelFont=getItemLabelFont(series,item,selected);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=generator.generateLabel(dataset,series,item);
ItemLabelPosition position=null;
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}

1.0912969700895871
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1897,1912>


-------- Patch ---------
copy.setFont(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
copy.setPaint(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
double xx=transX1;
double yy=transY1;
if(orientation==PlotOrientation.HORIZONTAL){
xx=transY1;
yy=transX1;
}
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.090740634812428
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<287,296>

-------- No Patch ---------


-------- Similar Code ---------
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
PlotOrientation orientation=plot.getOrientation();
RectangleEdge location=plot.getRangeAxisEdge();
Paint itemPaint=getItemPaint(series,item,selected);
Stroke itemStroke=getItemStroke(series,item,selected);
g2.setPaint(itemPaint);
g2.setStroke(itemStroke);

1.0906688673371434
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<331,341>


-------- Patch ---------
data.setPaint(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
data.setStroke(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Comparator comparator=new KeyedObjectComparator(KeyedObjectComparatorType.BY_KEY,order);
Collections.sort(this.data,comparator);

1.089763821237732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<295,297>

-------- No Patch ---------


-------- Similar Code ---------
Comparator comparator=new KeyedObjectComparator(KeyedObjectComparatorType.BY_VALUE,order);
Collections.sort(this.data,comparator);

1.089763821237732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<310,312>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=bx.getXValue(series,item);
if(xRange.contains(x)){
Number lvalue=bx.getMinRegularValue(series,item);
Number uvalue=bx.getMaxRegularValue(series,item);
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}
}

1.089404857255147
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1419,1431>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x)||Double.isNaN(y)){
return ;
}
double transX=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double transY=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());

1.0894035842280099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<412,427>


-------- Patch ---------
if(Double.isNaN(index)||Double.isNaN(clone)){
return ;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(Double.isNaN(y1)){
y1=0.0;
nullPoint=true;
}
double ph1=getPreviousHeight(tdataset,series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1+ph1,dataArea,plot.getRangeAxisEdge());
Paint seriesPaint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);

1.089259960300947
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<411,424>

-------- No Patch ---------


-------- Similar Code ---------
Paint itemPaint=getItemPaint(series,item,selected);
if(pass==0){
g2.setPaint(itemPaint);
g2.fill(left);
g2.fill(right);
}
if(entities!=null){
GeneralPath gp=new GeneralPath(left);
gp.append(right,false);
entityArea=gp;
addEntity(entities,entityArea,dataset,series,item,selected,transX1,transY1);
}

1.0892473035894223
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<435,449>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ohlc.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.0892385542274028
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1396,1408>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ixyd.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.0892385542274028
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1442,1454>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number y=dataset.getValue(item);
if(y!=null){
double yy=y.doubleValue();
if(yy>0.0){
return false;
}
}
}

1.0876557260871182
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<575,583>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(getItemLineVisible(series,item)){
if(this.drawSeriesLineAsPath){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}else {
drawPrimaryLine(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}
}

1.0875661601539248
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<771,781>

-------- No Patch ---------


-------- Similar Code ---------
years=calendar.get(Calendar.YEAR);
calendar.clear(Calendar.MILLISECOND);
calendar.set(years,value,1,0,0,0);
Month month=new Month(calendar.getTime(),this.timeZone,this.locale);
Date standardDate=calculateDateForPosition(month,this.tickMarkPosition);
long millis=standardDate.getTime();
if(millis>=date.getTime()){
month=(Month)month.previous();
month.peg(Calendar.getInstance(this.timeZone));
standardDate=calculateDateForPosition(month,this.tickMarkPosition);
}

1.0874018577602982
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1008,1023>

-------- No Patch ---------


-------- Similar Code ---------
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}

1.0864792133259837
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<693,706>

-------- No Patch ---------


-------- Similar Code ---------
if(handler!=this){
handler.characters(ch,start,length);
}

1.086011111093613
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/RootHandler.java<84,86>

-------- No Patch ---------


-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double z=0.0;
if(dataset instanceof XYZDataset){
z=((XYZDataset)dataset).getZValue(series,item);
}
Paint p=this.paintScale.getPaint(z);
double xx0=domainAxis.valueToJava2D(x+this.xOffset,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y+this.yOffset,dataArea,plot.getRangeAxisEdge());

1.0859118341658176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<353,363>

-------- No Patch ---------


-------- Similar Code ---------
double x0=ixyd.getStartXValue(series,item);
double x1=ixyd.getEndXValue(series,item);
double y=ixyd.getYValue(series,item);
RectangleEdge edge=plot.getDomainAxisEdge();
double xx0=domainAxis.valueToJava2D(x0,dataArea,edge);
double xx1=domainAxis.valueToJava2D(x1,dataArea,edge);
double yy=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
Line2D line;

1.085455164168127
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<320,328>

-------- No Patch ---------


-------- Similar Code ---------
double y0=ixyd.getStartYValue(series,item);
double y1=ixyd.getEndYValue(series,item);
double x=ixyd.getXValue(series,item);
RectangleEdge edge=plot.getRangeAxisEdge();
double yy0=rangeAxis.valueToJava2D(y0,dataArea,edge);
double yy1=rangeAxis.valueToJava2D(y1,dataArea,edge);
double xx=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
Line2D line;

1.085455164168127
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<360,368>

-------- No Patch ---------


-------- Similar Code ---------
if(obj instanceof DefaultBoxAndWhiskerCategoryDataset){
DefaultBoxAndWhiskerCategoryDataset dataset=(DefaultBoxAndWhiskerCategoryDataset)obj;
return ObjectUtilities.equal(this.data,dataset.data);
}

1.0854399732956135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<900,904>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drawHorizontalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}else if(orientation==PlotOrientation.VERTICAL){
drawVerticalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}

1.0851326451225254
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<340,347>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.length;i++){
 final DefaultKeyedValue value=data[i];
addValue(value.getKey(),value.getValue());
}

1.0850648907029599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<368,371>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<data.length;i++){
 final DefaultKeyedValue value=data[i];
addValue(value.getKey(),value.getValue());
}

1.0850648907029599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<394,397>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(dataArea.isEmpty()){
return ;
}
state.setDataArea(dataArea);
createAndAddEntity((Rectangle2D)dataArea.clone(),state,null,null);
if(getRenderer()!=null){
getRenderer().drawBackground(g2,this,dataArea);
}else {
drawBackground(g2,dataArea);
}
Map axisStateMap=drawAxes(g2,area,dataArea,state);

1.0850042248342129
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3613,3628>

-------- No Patch ---------


-------- Similar Code ---------
Paint paint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double x=x1;
double y=Double.isNaN(y1)?getRangeBase():y1;
double transX1=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());

1.0844024145469255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<359,370>

-------- No Patch ---------


-------- Similar Code ---------
OHLCDataset highLowData=(OHLCDataset)dataset;
double x=highLowData.getXValue(series,item);
double yHigh=highLowData.getHighValue(series,item);
double yLow=highLowData.getLowValue(series,item);
double yOpen=highLowData.getOpenValue(series,item);
double yClose=highLowData.getCloseValue(series,item);
RectangleEdge domainEdge=plot.getDomainAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,domainEdge);
RectangleEdge edge=plot.getRangeAxisEdge();

1.0833327759090572
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<673,684>

-------- No Patch ---------


-------- Similar Code ---------
this.displayStart=mapValueToFixedRange(start);
this.displayEnd=mapValueToFixedRange(end);
if(this.displayStart<this.displayEnd){
setRange(this.displayStart,this.displayEnd);
}else {
setRange(this.displayStart,this.fixedRange.getUpperBound()+(this.displayEnd-this.fixedRange.getLowerBound()));
}
notifyListeners(new AxisChangeEvent(this));

1.0830900427769368
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ModuloAxis.java<113,122>


-------- Patch ---------
this.index=mapValueToFixedRange(end);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
notifyListeners(new AxisChangeEvent(this));
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(seriesPaint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double transY1=(Double.isNaN(y1)?Double.NaN:rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation));

1.0828669834773066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<207,219>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
return sv.isSelected();

1.0824108800612615
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<465,466>

-------- No Patch ---------


-------- Similar Code ---------
double transX=domainAxis.valueToJava2D(x,dataArea,xAxisLocation)-adjx;
double transY=rangeAxis.valueToJava2D(y,dataArea,yAxisLocation)-adjy;
g2.setPaint(getItemPaint(series,item,selected));
PlotOrientation orientation=plot.getOrientation();
if(orientation==PlotOrientation.HORIZONTAL){
g2.fillRect((int)transY,(int)transX,this.dotHeight,this.dotWidth);
}else if(orientation==PlotOrientation.VERTICAL){
g2.fillRect((int)transX,(int)transY,this.dotWidth,this.dotHeight);
}

1.0823646115133827
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDotRenderer.java<241,255>

-------- No Patch ---------


-------- Similar Code ---------
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x0)||Double.isNaN(y0)){
return ;
}
double xx0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y0,dataArea,location);
double yy=rangeAxis.valueToJava2D(y,dataArea,location);

1.0822914544080573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<419,428>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.0822099825719005
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/ValueHandler.java<140,142>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.0822099825719005
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/KeyHandler.java<135,137>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D bar=createBar(g2,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
if(bar==null){
return ;
}
boolean positive=true;
if(this.useYInterval){
positive=dataset.getYValue(series,item)>=0.0;
}else error

1.081981044042644
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<928,941>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,xAxisLocation);
double yyLow=rangeAxis.valueToJava2D(yLow,dataArea,yAxisLocation);
double yyHigh=rangeAxis.valueToJava2D(yHigh,dataArea,yAxisLocation);
Paint p=getItemPaint(series,item,selected);
Stroke s=getItemStroke(series,item,selected);
Line2D line=null;
Shape shape=getItemShape(series,item,selected);
Shape top=null;

1.0811468597794192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<197,208>

-------- No Patch ---------


-------- Similar Code ---------
JPanel panel=new JPanel(new BorderLayout());
JTable table=new JTable(model);
for(int columnIndex=0;columnIndex<model.getColumnCount();columnIndex++){
TableColumn column=table.getColumnModel().getColumn(columnIndex);
Class c=model.getColumnClass(columnIndex);
if(c.equals(Number.class)){
column.setCellRenderer(new NumberCellRenderer());
}
}
panel.add(new JScrollPane(table));
return panel;

1.0806106788436045
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RefineryUtilities.java<243,254>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=model;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
copy.add(new JScrollPane(clone));
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(Iterator i=this.paintIndex.entrySet().iterator();i.hasNext();){
Map.Entry entry=(Map.Entry)i.next();
String label=entry.getKey().toString();
String description=label;
Shape shape=new Rectangle2D.Double(1.0,1.0,1.0,1.0);
Paint paint=lookupSeriesPaint(((Integer)entry.getValue()).intValue());
Paint outlinePaint=Color.black;
Stroke outlineStroke=DEFAULT_STROKE;
result.add(new LegendItem(label,description,null,null,shape,paint,outlineStroke,outlinePaint));
}

1.0790763040302522
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<296,311>


-------- Patch ---------
for(int index=start;index<=end;index++){
data.add(new LegendItem(item.getKey().toString(),index,null,null,new Rectangle2D.Double(1.0,1.0,1.0,1.0),lookupSeriesPaint(((Integer)item.getValue()).intValue()),clone,Color.black));
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double yOpen=hld.getOpenValue(series,item);
if(!Double.isNaN(yOpen)){
double yyOpen=rangeAxis.valueToJava2D(yOpen,dataArea,location);
if(this.openTickPaint!=null){
g2.setPaint(this.openTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyOpen,xx+delta,yyOpen,xx));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx-delta,yyOpen,xx,yyOpen));
}
}

1.0784479330903693
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<371,389>

-------- No Patch ---------


-------- Similar Code ---------
double yClose=hld.getCloseValue(series,item);
if(!Double.isNaN(yClose)){
double yyClose=rangeAxis.valueToJava2D(yClose,dataArea,location);
if(this.closeTickPaint!=null){
g2.setPaint(this.closeTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyClose,xx,yyClose,xx-delta));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyClose,xx+delta,yyClose));
}
}

1.0784479330903693
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<393,411>

-------- No Patch ---------


-------- Similar Code ---------
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,midY-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.0778345749044438
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/MiddlePinNeedle.java<96,108>


-------- Patch ---------
item=new Area(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
this.data.insertValue(position,key,value);
PieDatasetChangeType ct=PieDatasetChangeType.ADD;
fireDatasetChanged(new PieDatasetChangeInfo(ct,position,position));

1.0772622882530463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<261,264>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1291,1294>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1295,1298>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1306,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1310,1313>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1415,1418>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1419,1422>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1430,1433>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1434,1437>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1614,1617>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1618,1621>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1629,1632>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.077218601300061
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1633,1636>

-------- No Patch ---------


-------- Similar Code ---------
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);
Number yQ1Median=boxAndWhiskerData.getQ1Value(series,item);
Number yQ3Median=boxAndWhiskerData.getQ3Value(series,item);
List yOutliers=boxAndWhiskerData.getOutliers(series,item);

1.0771989545110467
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<521,531>

-------- No Patch ---------


-------- Similar Code ---------
if(result==null){
result=new Rectangle();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double xx=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double yy=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
result.setRect(xx-2,yy-2,4,4);
return result;

1.0771052831180017
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1039,1049>


-------- Patch ---------
item.setRect(end-2,index-2,4,4);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getStartYValue(series,item);
}else if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getLowValue(series,item);
}else {
value=dataset.getYValue(series,item);
}
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
}
}

1.0767667883268126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1682,1701>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getEndYValue(series,item);
}else if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getHighValue(series,item);
}else {
value=dataset.getYValue(series,item);
}
if(!Double.isNaN(value)){
maximum=Math.max(maximum,value);
}
}

1.0767667883268126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1800,1817>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.0760877279974648
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<343,346>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.0760877279974648
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<323,328>

-------- No Patch ---------


-------- Similar Code ---------
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(stroke);
g2.fill(hotspot);
if(isOutline()){
g2.setStroke(lookupSeriesOutlineStroke(series));
g2.setPaint(lookupSeriesOutlinePaint(series));
g2.draw(hotspot);
}

1.0753562002436896
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<351,366>

-------- No Patch ---------


-------- Similar Code ---------
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);
Number yQ1Median=boxAndWhiskerData.getQ1Value(series,item);
Number yQ3Median=boxAndWhiskerData.getQ3Value(series,item);
double xx=domainAxis.valueToJava2D(x.doubleValue(),dataArea,plot.getDomainAxisEdge());

1.0748945909615366
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<381,393>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
sv.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.0746444710930554
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<475,479>


-------- Repeated Patch ---------
item.setSelected(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(Double.isNaN(y0)||Double.isNaN(y1)){
return ;
}
double yy0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double yy1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
double x0=intervalDataset.getStartXValue(series,item);
double xx0=domainAxis.valueToJava2D(x0,dataArea,xAxisLocation);
double x1=intervalDataset.getEndXValue(series,item);
double xx1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double intervalW=xx1-xx0;

1.0740610964241903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<237,253>

-------- No Patch ---------


-------- Similar Code ---------
if(this.barAlignmentFactor>=0.0&&this.barAlignmentFactor<=1.0){
double x=ixyd.getXValue(series,item);
double interval=endX-startX;
startX=x-interval*this.barAlignmentFactor;
endX=startX+interval;
}

1.0738856495252869
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<866,871>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,item);
if(!Double.isNaN(v)){
if(this.renderAsPercentages){
v=v/total;
}
if(v>0){
positiveBase=positiveBase+v;
}else {
negativeBase=negativeBase+v;
}
}
}

1.0731728808054375
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<279,292>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=series;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<series;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
item.setDataset(dataset);
item.setDatasetIndex(datasetIndex);
if(getTreatLegendShapeAsLine()){
item.setLineVisible(true);
item.setLine(shape);
item.setLinePaint(paint);
item.setShapeVisible(false);
}else {
Paint outlinePaint=lookupSeriesOutlinePaint(series);
Stroke outlineStroke=lookupSeriesOutlineStroke(series);
item.setOutlinePaint(outlinePaint);
item.setOutlineStroke(outlineStroke);
}

1.0731232716733476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1017,1031>

-------- No Patch ---------


-------- Similar Code ---------
if(shape.intersects(dataArea)){
g2.setPaint(getPaint(dataset,series,item,selected));
g2.fill(shape);
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}
}

1.071880033941634
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<459,475>

-------- No Patch ---------


-------- Similar Code ---------
g2.fill(circle);
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(circle);
if(isItemLabelVisible(series,item,selected)){
if(orientation==PlotOrientation.VERTICAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transX,transY,false);
}else if(orientation==PlotOrientation.HORIZONTAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transY,transX,false);
}
}

1.071580026350286
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<239,253>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=that.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0713343304931437
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<175,188>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=urlCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=generator.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0713343304931437
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<165,177>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=urlCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<urlCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double xs=x;
double xe=x;
double y=dataset.getYValue(series,item);
double ys=y;
double ye=y;
if(intervalDataset!=null){
xs=intervalDataset.getStartXValue(series,item);
xe=intervalDataset.getEndXValue(series,item);
ys=intervalDataset.getStartYValue(series,item);
ye=intervalDataset.getEndYValue(series,item);
}

1.0712536726662558
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<161,172>

-------- No Patch ---------


-------- Similar Code ---------
if((!getPlotLines())||((!(domainAxis instanceof CyclicNumberAxis))&&(!(rangeAxis instanceof CyclicNumberAxis)))){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double xn=dataset.getXValue(series,item-1);
double yn=dataset.getYValue(series,item-1);
if(Double.isNaN(yn)){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double[] x=new double[2];

1.0710511280614958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<145,161>

-------- No Patch ---------


-------- Similar Code ---------
double x1=axis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double x2=axis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(Math.min(x1,x2),dataArea.getMinY(),Math.abs(x2-x1),dataArea.getWidth());
}else {
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(x1,x2),dataArea.getWidth(),Math.abs(x2-x1));
}
Paint paint=plot.getDomainTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.0702817388261356
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1112,1130>


-------- Patch ---------
if(index!=null){
copy.setPaint(paint);
g2.fill(clone);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double y1=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double y2=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(y1,y2),dataArea.getWidth(),Math.abs(y2-y1));
}else {
band=new Rectangle2D.Double(Math.min(y1,y2),dataArea.getMinY(),Math.abs(y2-y1),dataArea.getHeight());
}
Paint paint=plot.getRangeTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.0702817388261356
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1148,1165>


-------- Repeated Patch ---------
if(index!=null){
copy.setPaint(paint);
g2.fill(clone);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,plotArea.getMaxY()-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.0701180025497998
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/PinNeedle.java<94,106>


-------- Repeated Patch ---------
item=new Area(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}
getFrame().draw(g2,target);
getFrame().getInsets().trim(target);
target=trimPadding(target);

1.069158800575449
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/PaintScaleLegend.java<537,545>


-------- Patch ---------
getFrame().draw(copy,(Rectangle2D)data.clone());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
getFrame().getInsets().trim((Rectangle2D)data.clone());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
int itemCount=dataset.getItemCount(series);
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double transX2=domainAxis.valueToJava2D(x2,dataArea,plot.getDomainAxisEdge());

1.0676441800400718
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<305,319>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
SelectableValue dataItem=new SelectableValue(data.getValue(i));
this.data.addObject(data.getKey(i),dataItem);
}

1.0675371974300505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<106,109>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
IntervalMarker marker=(IntervalMarker)iterator.next();
double start=Math.max(marker.getStartValue(),this.axis.getRange().getLowerBound());
double end=Math.min(marker.getEndValue(),this.axis.getRange().getUpperBound());
double s=this.axis.valueToJava2D(start,dataArea,RectangleEdge.BOTTOM);
double e=this.axis.valueToJava2D(end,dataArea,RectangleEdge.BOTTOM);
Rectangle2D r=new Rectangle2D.Double(s,y+this.topOuterGap,e-s,h-this.topOuterGap);
Composite originalComposite=g2.getComposite();
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,marker.getAlpha()));

1.066983600244797
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MarkerAxisBand.java<192,213>

-------- No Patch ---------


-------- Similar Code ---------
if(value>0.0){
translatedBase=rangeAxis.valueToJava2D(positiveBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(positiveBase+value,dataArea,edgeR);
}else {
translatedBase=rangeAxis.valueToJava2D(negativeBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(negativeBase+value,dataArea,edgeR);
}
RectangleEdge edgeD=plot.getDomainAxisEdge();
double startX=intervalDataset.getStartXValue(series,item);
if(Double.isNaN(startX)){
return ;
}
double translatedStartX=domainAxis.valueToJava2D(startX,dataArea,edgeD);

1.0664395966631386
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<297,316>


-------- Patch ---------
if(Double.isNaN(index)){
return ;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double transX2=domainAxis.valueToJava2D(x2,dataArea,plot.getDomainAxisEdge());
double transY2=rangeAxis.valueToJava2D(y2,dataArea,plot.getRangeAxisEdge());

1.0650172161580866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<518,533>

-------- No Patch ---------


-------- Similar Code ---------
if((i-offset)>=0){
TimeSeriesDataItem item=source.getRawDataItem(i-offset);
RegularTimePeriod p=item.getPeriod();
Number v=item.getValue();
long currentIndex=p.getSerialIndex();
if(currentIndex>serialLimit){
if(v!=null){
sum=sum+v.doubleValue();
n=n+1;
}
}else {
finished=true;
}
}

1.0646684742618477
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<146,161>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotImages()){
Image image=getImage(plot,series,item,transX1,transY1);
if(image!=null){
Point hotspot=getImageHotspot(plot,series,item,transX1,transY1,image);
g2.drawImage(image,(int)(transX1-hotspot.getX()),(int)(transY1-hotspot.getY()),null);
entityArea=new Rectangle2D.Double(transX1-hotspot.getX(),transY1-hotspot.getY(),image.getWidth(null),image.getHeight(null));
}
}

1.0644293738910178
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<887,899>

-------- No Patch ---------


-------- Similar Code ---------
if(this.additionalItemLabelGenerator==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,false);
Paint paint=getItemLabelPaint(series,item,false);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=this.additionalItemLabelGenerator.generateLabel(dataset,series,item);
ItemLabelPosition position=getNegativeItemLabelPosition(series,item,false);
Point2D anchorPoint=calculateLabelAnchorPoint(position.getItemLabelAnchor(),x,y,orientation);
TextUtilities.drawRotatedString(label,g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getTextAnchor(),position.getAngle(),position.getRotationAnchor());

1.0642707753316105
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<264,282>


-------- Repeated Patch ---------
copy.setPaint(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Number[] result=new Number[data.length];
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}
return result;

1.0635101550532284
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<429,433>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number lvalue=bx.getMinRegularValue(series,item);
if(lvalue==null){
lvalue=bx.getValue(series,item);
}
Number uvalue=bx.getMaxRegularValue(series,item);
if(uvalue==null){
uvalue=bx.getValue(series,item);
}
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}

1.063400014671693
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1054,1069>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
Object[] result=new Object[3];
result[0]=dataset.getSeriesKey(series).toString();
double x=dataset.getXValue(series,item);
if(this.xDateFormat!=null){
result[1]=this.xDateFormat.format(new Date((long)x));
}else {
result[1]=this.xFormat.format(x);
}
double y=dataset.getYValue(series,item);

1.0633816193099725
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<277,288>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value<0.0){
total=total+value;
}
}
}
minimum=Math.min(minimum,total);
}

1.0633702726790273
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1970,1985>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
total=total+value;
}
}
}
maximum=Math.max(maximum,total);
}

1.0633702726790273
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2010,2024>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.minX=Double.NaN;
this.maxX=Double.NaN;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.0633232069478924
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<601,608>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorXValue(series,item);
if(delta<0.0){
uvalue=vdataset.getXValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getXValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0622460502594913
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<115,127>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorYValue(series,item);
if(delta<0.0){
uvalue=vdataset.getYValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getYValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0622460502594913
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<171,183>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int hash=5;
hash=HashUtilities.hashCode(hash,this.intervalDelegate);
hash=HashUtilities.hashCode(hash,this.data);
return hash;

1.0618600860701233
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<515,518>

-------- No Patch ---------


-------- Similar Code ---------
if(source==null){
throw new IllegalArgumentException("Null \'source\' argument.");
}
double[][] clone=new double[source.length][];
for(int i=0;i<source.length;i++){
if(source[i]!=null){
double[] row=new double[source[i].length];
System.arraycopy(source[i],0,row,0,source[i].length);
clone[i]=row;
}
}
return clone;

1.061708557644032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<100,111>

-------- No Patch ---------


-------- Similar Code ---------
if(properties||copy){
this.popup=createPopupMenu(properties,copy,save,print,zoom);
}

1.061210351258514
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<763,765>

-------- No Patch ---------


-------- Similar Code ---------
if(yyQ1Median<yyQ3Median){
box=new Rectangle2D.Double(yyQ1Median,xx-width/2,yyQ3Median-yyQ1Median,width);
}else {
box=new Rectangle2D.Double(yyQ3Median,xx-width/2,yyQ1Median-yyQ3Median,width);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);

1.061054407564003
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<447,461>

-------- No Patch ---------


-------- Similar Code ---------
if(yyQ1Median>yyQ3Median){
box=new Rectangle2D.Double(xx-width/2,yyQ3Median,width,yyQ1Median-yyQ3Median);
}else {
box=new Rectangle2D.Double(xx-width/2,yyQ1Median,width,yyQ3Median-yyQ1Median);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);

1.061054407564003
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<590,604>

-------- No Patch ---------


-------- Similar Code ---------
int i=getIndex(key);
this.data.removeValue(key);
PieDatasetChangeType ct=PieDatasetChangeType.REMOVE;
fireDatasetChanged(new PieDatasetChangeInfo(ct,i,i));

1.0607689228305228
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<277,280>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<rowCount;r++){
Number n=data.getValue(r,column);
if(n!=null){
total+=n.doubleValue();
}
}

1.0582841941170371
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<129,134>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=rowCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int c=0;c<columnCount;c++){
Number n=data.getValue(row,c);
if(n!=null){
total+=n.doubleValue();
}
}

1.0582841941170371
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<184,189>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=columnCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);

1.0582809183916826
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<417,433>


-------- Patch ---------
copy.setStroke(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);

1.0582809183916826
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<560,576>


-------- Repeated Patch ---------
copy.setStroke(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
total=total+v.doubleValue();
}
}

1.0577742184151375
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<279,284>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(getShadowsVisible()){
this.barPainter.paintBarShadow(g2,this,series,item,selected,bar,barBase,!this.useYInterval);
}
this.barPainter.paintBar(g2,this,series,item,selected,bar,barBase);
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,!positive);
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());

1.0575165640487887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<960,980>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}

1.0568015187270436
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<237,239>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
boolean itemContributesToXBounds=false;
boolean itemContributesToYBounds=false;
double x=item.getXValue();
if(!Double.isNaN(x)){
if(x<=this.minX||x>=this.maxX){
itemContributesToXBounds=true;
}
}
if(item.getY()!=null){
double y=item.getYValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
itemContributesToYBounds=true;
}
}
}

1.0549776015716201
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<267,282>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=start;i<limit1;i++){
if(c1!=c2){
return false;
}
c1=it1.next();
c2=it2.next();
}

1.0547584922020752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AttributedStringUtilities.java<95,101>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=limit1;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
double[] y=new double[2];
x[0]=xn;
y[0]=yn;
xn=dataset.getXValue(series,item);
yn=dataset.getYValue(series,item);
if(Double.isNaN(yn)){
return ;
}
x[1]=xn;

1.0544129919053873
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<162,173>


-------- Patch ---------
item[0]=clone;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int r=0;r<data.length;r++){
columnCount=Math.max(columnCount,data[r].length);
}

1.054350722671264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<445,447>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(info!=null){
info.setPlotArea(area);
}
RectangleInsets insets=getInsets();
insets.trim(area);
drawBackground(g2,area);
Rectangle2D interior=(Rectangle2D)area.clone();
this.padding.trim(interior);
int midX=(int)(interior.getX()+(interior.getWidth()/2));
int midY=(int)(interior.getY()+(interior.getHeight()/2));
int stemTop=(int)(interior.getMinY()+getBulbRadius());

1.0542142497637912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1116,1130>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getStartXValue(series,item);
uvalue=dataset.getEndXValue(series,item);
double offset=(uvalue-lvalue)/2.0;
lvalue=lvalue-offset;
uvalue=uvalue-offset;
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.053216399133195
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<181,189>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<itemCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(item>0){
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double ph0=getPreviousHeight(tdataset,series,item-1);
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0+ph0,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getLine().setLine(transX0,transY0,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getLine().setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.getLine());
}

1.051907616593599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<464,483>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double positive=base;
double negative=base;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
double value=number.doubleValue();
if(value>0.0){
positive=positive+value;
}
if(value<0.0){
negative=negative+value;
}
}
}
minimum=Math.min(minimum,negative);
maximum=Math.max(maximum,positive);
}

1.0515151565128138
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1860,1879>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
OHLCDataset hld=(OHLCDataset)dataset;
double yHigh=hld.getHighValue(series,item);
double yLow=hld.getLowValue(series,item);
if(!Double.isNaN(yHigh)&&!Double.isNaN(yLow)){
double yyHigh=rangeAxis.valueToJava2D(yHigh,dataArea,location);
double yyLow=rangeAxis.valueToJava2D(yLow,dataArea,location);
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyLow,xx,yyHigh,xx));
entityArea=new Rectangle2D.Double(Math.min(yyLow,yyHigh),xx-1.0,Math.abs(yyHigh-yyLow),2.0);
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyLow,xx,yyHigh));
entityArea=new Rectangle2D.Double(xx-1.0,Math.min(yyLow,yyHigh),2.0,Math.abs(yyHigh-yyLow));
}
}

1.0509806937803339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<344,364>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
areaState.setSeriesArea(new Polygon());
areaState.setLastSeriesPoints(areaState.getCurrentSeriesPoints());
areaState.setCurrentSeriesPoints(new Stack());
double transY2=rangeAxis.valueToJava2D(ph1,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getSeriesArea().addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getSeriesArea().addPoint((int)transY2,(int)transX1);
}
}

1.0509795571443357
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<429,449>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getMean();
}
return result;

1.049997767895971
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<153,159>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getMean();
}
return result;

1.049997767895971
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<197,203>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.049997767895971
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<215,221>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.049997767895971
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<233,239>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
runningTotal=runningTotal+v.doubleValue();
}
result.addValue(data.getKey(i),new Double(runningTotal/total));
}

1.0477124456834948
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<286,292>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy.getItemCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<copy;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
shape=getItemShape(series,item,selected);
if(plot.getOrientation()==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(!nullPoint){
if(getShapePaint()!=null){
g2.setPaint(getShapePaint());
}else {
g2.setPaint(seriesPaint);
}
if(getShapeStroke()!=null){
g2.setStroke(getShapeStroke());
}else {
g2.setStroke(seriesStroke);
}
g2.draw(shape);
}
}

1.0465964661025846
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<541,566>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
Comparable k=series.getKey();
if(k!=null&&k.equals(key)){
result=series;
}
}
return result;

1.046203706825965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<289,298>

-------- No Patch ---------


-------- Similar Code ---------
this.data.setValue(value,chipx,chipy);
if(isMaxValue(value)){
this.maxValue=(Double)value;
}
if(isMinValue(value)){
this.minValue=(Double)value;
}

1.045757613030395
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<145,151>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotArea()&&item>0&&this.pArea!=null&&(item==(itemCount-1)||Double.isNaN(y1))){
double transY2=rangeAxis.valueToJava2D(getRangeBase(),dataArea,plot.getRangeAxisEdge());
transY2=restrictValueToDataArea(transY2,plot,dataArea);
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY2,(int)transX1);
}
g2.fill(this.pArea);
if(isOutline()){
g2.setStroke(plot.getOutlineStroke());
g2.setPaint(plot.getOutlinePaint());
g2.draw(this.pArea);
}
this.pArea=null;
}

1.0421942277201859
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<478,508>

-------- No Patch ---------


-------- Similar Code ---------
State state=(State)super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
this.points=new Vector();
setDrawSeriesLineAsPath(true);
return state;

1.0419118444533797
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<151,155>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.timePeriodClass=null;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.0396346130025704
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<950,956>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=xAxis.getUpperBound();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,end);
}

1.0385416972139758
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3650,3664>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=axis.getUpperBound();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,end);
}

1.0385416972139758
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3685,3699>

-------- No Patch ---------


-------- Similar Code ---------
if(!isNull){
String plainStr=(String)stream.readObject();
result=new AttributedString(plainStr);
char c=stream.readChar();
int start=0;
while(c!=CharacterIterator.DONE){
int limit=stream.readInt();
Map atts=(Map)stream.readObject();
result.addAttributes(atts,start,limit);
start=limit;
c=stream.readChar();
}
}

1.0384429449774581
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/SerialUtilities.java<504,517>


-------- Patch ---------
for(int index=start;index<=end;index++){
item.addAttributes(clone,start,start);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
start=start;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
item.addAttributes(clone,start,start);
start=start;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
int l1=data.length;
Number[][] result=new Number[l1][];
for(int i=0;i<l1;i++){
result[i]=createNumberArray(data[i]);
}
return result;

1.0370864338127637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<252,260>

-------- No Patch ---------


-------- Similar Code ---------
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}

1.036934670033062
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<319,322>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerXYDataset){
BoxAndWhiskerXYDataset d=(BoxAndWhiskerXYDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.0348811658202721
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGenerator.java<138,146>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerCategoryDataset){
BoxAndWhiskerCategoryDataset d=(BoxAndWhiskerCategoryDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.0348811658202721
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerToolTipGenerator.java<118,127>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<data[r].length;c++){
String columnKey=columnKeyPrefix+(c+1);
result.addValue(new Double(data[r][c]),rowKey,columnKey);
}

1.0330326148121474
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<372,375>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(item>0){
x0=dataset.getXValue(series,item-1);
y0=Double.isNaN(y1)?y1:dataset.getYValue(series,item-1);
x=x0;
y=Double.isNaN(y0)?getRangeBase():y0;
transX0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
transY0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
transY0=restrictValueToDataArea(transY0,plot,dataArea);
if(Double.isNaN(y1)){
transX1=transX0;
transY0=transY1;
}
if(transY0!=transY1){
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY0);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY0,(int)transX1);
}
}
}

1.0318804181627468
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<404,434>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
double x=Math.log(data.getXValue(series,i));
double y=Math.log(data.getYValue(series,i));
sumX+=x;
sumY+=y;
double xx=x*x;
sumXX+=xx;
double xy=x*y;
sumXY+=xy;
}

1.0316282418729463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<206,215>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
List values=(List)this.data.getObject(row,column);
if(values!=null){
return Collections.unmodifiableList(values);
}else {
return Collections.EMPTY_LIST;
}

1.0290395356587947
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<172,178>

-------- No Patch ---------


-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((this.maximumRangeValueRow==r&&this.maximumRangeValueColumn==c)||(this.minimumRangeValueRow==r&&this.minimumRangeValueColumn==c)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.0287327458860798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<207,219>


-------- Repeated Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((r==this.maximumRangeValueRow&&c==this.maximumRangeValueColumn)||(r==this.maximumRangeValueIncStdDevRow&&c==this.maximumRangeValueIncStdDevColumn)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.0287327458860798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<433,452>


-------- Repeated Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
{
 final int s1=d1.toSerial();
 final int s2=d2.toSerial();
 final int start=Math.min(s1,s2);
 final int end=Math.max(s1,s2);
 final int s=toSerial();
if(include==SerialDate.INCLUDE_BOTH){
return (s>=start&&s<=end);
}else if(include==SerialDate.INCLUDE_FIRST){
return (s>=start&&s<end);
}else if(include==SerialDate.INCLUDE_SECOND){
return (s>start&&s<=end);
}else {
return (s>start&&s<end);
}
}

1.027431063163109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/SpreadsheetDate.java<416,435>

-------- No Patch ---------


-------- Similar Code ---------
{
Range range=getRange();
double start=range.getLowerBound();
double end=range.getUpperBound();
double log1=calculateLog(start);
double log2=calculateLog(end);
double length=log2-log1;
Range adjusted=null;
if(isInverted()){
double logA=log1+length*(1-upperPercent);
double logB=log1+length*(1-lowerPercent);
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}else {
double logA=log1+length*lowerPercent;
double logB=log1+length*upperPercent;
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}
setRange(adjusted);
}

1.026087838860784
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<800,819>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(y0)){
y0=0.0;
}
double[] stack0=getStackValues(tdataset,series,Math.max(item-1,0));
int itemCount=dataset.getItemCount(series);
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double[] stack2=getStackValues(tdataset,series,Math.min(item+1,itemCount-1));

1.0251553710850927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<238,253>


-------- Patch ---------
if(Double.isNaN(clone)){
y2=0.0;
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int c=0;c<data[r].length;c++){
String columnKey=columnKeyPrefix+(c+1);
result.addValue(data[r][c],rowKey,columnKey);
}

1.0235481064131917
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<400,403>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int r=0;r<data.length;r++){
Comparable rowKey=rowKeys[r];
for(int c=0;c<data[r].length;c++){
Comparable columnKey=columnKeys[c];
result.addValue(new Double(data[r][c]),rowKey,columnKey);
}
}

1.0212648102056352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<456,462>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<data.length;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<n;i++){
double x=data.getXValue(series,i);
double y=data.getYValue(series,i);
sumX+=x;
sumY+=y;
double xx=x*x;
sumXX+=xx;
double xy=x*y;
sumXY+=xy;
}

1.0212582065528115
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<119,128>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int groups=this.seriesToGroupMap.getGroupCount();
int categories=data.getColumnCount();
int columns=groups*categories;
double categoryMargin=0.0;
double itemMargin=0.0;

1.0202095055224343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java<150,161>

-------- No Patch ---------


-------- Similar Code ---------
if(this.dialBackgroundPaint!=null){
fillArc(g2,originalArea,dataMin,dataMax,this.dialBackgroundPaint,true);
}
drawTicks(g2,meterArea,dataMin,dataMax);
drawArcForInterval(g2,meterArea,new MeterInterval("",this.range,this.dialOutlinePaint,new BasicStroke(1.0),null));
Iterator iterator=this.intervals.iterator();
while(iterator.hasNext()){
MeterInterval interval=(MeterInterval)iterator.next();
drawArcForInterval(g2,meterArea,interval);
}
Number n=data.getValue();

1.0181471262911828
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<866,880>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
double total=0.0;
int rowCount=data.getRowCount();
for(int v=0;v<validRows.length;v++){
int row=validRows[v];
if(row<rowCount){
Number n=data.getValue(row,column);
if(n!=null){
total+=n.doubleValue();
}
}
}
return total;

1.0164119664750095
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<152,166>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
double total=0.0;
int colCount=data.getColumnCount();
for(int v=0;v<validCols.length;v++){
int col=validCols[v];
if(col<colCount){
Number n=data.getValue(row,col);
if(n!=null){
total+=n.doubleValue();
}
}
}
return total;

1.0164119664750095
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<207,221>

-------- No Patch ---------


-------- Similar Code ---------
int categoryCount=dataset.getColumnCount();
int seriesIndex=dataset.getRowIndex(seriesKey);
int seriesCount=dataset.getRowCount();
double start=getCategoryStart(categoryIndex,categoryCount,area,edge);
double end=getCategoryEnd(categoryIndex,categoryCount,area,edge);
double width=end-start;
if(seriesCount==1){
return start+width/2.0;
}else {
double gap=(width*itemMargin)/(seriesCount-1);
double ww=(width*(1-itemMargin))/seriesCount;
return start+(seriesIndex*(ww+gap));
}

1.0127743564705571
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<714,728>

-------- No Patch ---------


-------- Similar Code ---------
this.maximumItemCount=maximum;
int remove=this.data.size()-maximum;
if(remove>0){
this.data.subList(0,remove).clear();
findBoundsByIteration();
fireSeriesChanged();
}

1.0104788386171608
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<384,390>


-------- Patch ---------
this.clone=start;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(;i>=0;--i){
ValueDataset data=this.datasets[i];
if(data!=null&&data.getValue()!=null){
value=(data.getValue().doubleValue())%this.revolutionDistance;
value=value/this.revolutionDistance*360;
current=i%x;
this.seriesNeedle[current].draw(g2,needleArea,value);
}
}

1.0096501009384447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<682,692>

-------- No Patch ---------


-------- Similar Code ---------
double[] xStart=data[1];
double[] xEnd=data[2];
double[] y=data[3];
double[] yStart=data[4];
double[] yEnd=data[5];
double[] xx=new double[x.length];
double[] xxStart=new double[xStart.length];
double[] xxEnd=new double[xEnd.length];
double[] yy=new double[y.length];

1.0089151306251747
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<530,538>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
double x=Math.log(data[i][0]);
double y=Math.log(data[i][1]);
sumX+=x;
sumY+=y;
double xx=x*x;
sumXX+=xx;
double xy=x*y;
sumXY+=xy;
}

1.0080820043600076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<162,171>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double[] positive=new double[groupCount];
double[] negative=new double[groupCount];
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
positive[groupIndex[series]]=positive[groupIndex[series]]+value;
}
if(value<0.0){
negative[groupIndex[series]]=negative[groupIndex[series]]+value;
}
}
}
for(int g=0;g<groupCount;g++){
minimum[g]=Math.min(minimum[g],negative[g]);
maximum[g]=Math.max(maximum[g],positive[g]);
}
}

1.0068540593369726
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1918,1942>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<categoryCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
super(key);
this.data=new java.util.ArrayList();
this.autoSort=autoSort;
this.allowDuplicateXValues=allowDuplicateXValues;
this.minX=Double.NaN;
this.maxX=Double.NaN;
this.minY=Double.NaN;
this.maxY=Double.NaN;

1.0063282552705926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<170,177>

-------- No Patch ---------


-------- Similar Code ---------
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'rangeAxis\' argument.");
}
this.data=data;
this.xDataRange=calculateXDataRange(data);
this.yDataRange=calculateYDataRange(data);
this.domainAxis=domainAxis;
this.domainAxis.setPlot(this);
this.domainAxis.addChangeListener(this);

0.9984552433988572
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<200,209>


-------- Patch ---------
this.index=data;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.clone=calculateYDataRange(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.item=domainAxis;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.item.setPlot(this);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
this.item.addChangeListener(this);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<data[0].length;i++){
float v=data[0][i];
if(v<lowest){
lowest=v;
}
if(v>highest){
highest=v;
}
}

0.9928750545451556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<723,731>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<data[0].length;i++){
float v=data[1][i];
if(v<lowest){
lowest=v;
}
if(v>highest){
highest=v;
}
}

0.9928750545451556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<755,763>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int columns=data.getColumnCount();
double categoryMargin=0.0;
if(columns>1){
categoryMargin=xAxis.getCategoryMargin();
}

0.9917263463590154
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer.java<245,256>


-------- Patch ---------
if(index>1){
item=copy.getCategoryMargin();
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<n;i++){
double x=data[i][0];
double y=data[i][1];
sumX+=x;
sumY+=y;
double xx=x*x;
sumXX+=xx;
double xy=x*y;
sumXY+=xy;
}

0.9882478632478633
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<75,84>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<=n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Repeated Patch ---------
for(int index=start;index<n;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' array.");
}
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
double avg=calculateMean(data);
double sum=0.0;
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}
return Math.sqrt(sum/(data.length-1));

0.9882044742083314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<310,323>


-------- Patch ---------
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
for(int i=0;i<this.data[0].length;i++){
float x=this.data[0][i];
float y=this.data[1][i];
int transX=(int)this.domainAxis.valueToJava2D(x,dataArea,RectangleEdge.BOTTOM);
int transY=(int)this.rangeAxis.valueToJava2D(y,dataArea,RectangleEdge.LEFT);
g2.fillRect(transX,transY,1,1);
}

0.9724503700555658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<617,628>


-------- Repeated Patch ---------
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=this.data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}


-------- Patch ---------
for(int index=start;index<=end;index++){
copy.fillRect(index,clone,1,1);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}

-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
Number n=new Double(get(i,j));
return n;

0.9607689228305228
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<103,108>

-------- No Patch ---------

-------- Original Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
XYDataItem item=(XYDataItem)this.data.get(index);
XYDataItem clone=(XYDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Unable to add cloned data item.");
}

}
}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<928,939>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimePeriodValue item=(TimePeriodValue)this.data.get(index);
TimePeriodValue clone=(TimePeriodValue)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Failed to add cloned item.");
}

}
}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<501,512>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1058,1070>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

3.0
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1058,1070>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem item=(XYDataItem)this.data.get(index);
return (XYDataItem)item.clone();

2.5503031841770047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<619,620>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
return (TimeSeriesDataItem)item.clone();

2.5503031841770047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<389,390>

-------- No Patch ---------


-------- Similar Code ---------
{
int index=Collections.binarySearch(this.data,item);
if(index<0){
this.data.add(-index-1,item);
}else {
if(this.allowDuplicateXValues){
int size=this.data.size();
while(index<size&&item.compareTo(this.data.get(index))==0){
index++;
}
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}
}else {
throw new SeriesException("X-value already exists.");
}
}
}

2.3536200501730447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<508,532>

-------- No Patch ---------


-------- Similar Code ---------
{
int index=Collections.binarySearch(this.data,item);
if(index<0){
this.data.add(-index-1,item);
}else {
if(this.allowDuplicateXValues){
int size=this.data.size();
while(index<size&&item.compareTo(this.data.get(index))==0){
index++;
}
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}
}else {
throw new SeriesException("X-value already exists.");
}
}
}

2.3536200501730447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<220,244>

-------- No Patch ---------


-------- Similar Code ---------
PlotRenderingInfo clone=(PlotRenderingInfo)super.clone();
if(this.plotArea!=null){
clone.plotArea=(Rectangle2D)this.plotArea.clone();
}
if(this.dataArea!=null){
clone.dataArea=(Rectangle2D)this.dataArea.clone();
}
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
for(int i=0;i<this.subplotInfo.size();i++){
PlotRenderingInfo info=(PlotRenderingInfo)this.subplotInfo.get(i);
clone.subplotInfo.add(info.clone());
}
return clone;

2.2787587203740176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PlotRenderingInfo.java<246,259>

-------- No Patch ---------


-------- Similar Code ---------
if(position<=this.data.size()){
this.data.add(position,item);
}else {
this.data.add(item);
}

2.242177683771768
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<240,245>

-------- No Patch ---------


-------- Similar Code ---------
XYLineAndShapeRenderer clone=(XYLineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.240333948664154
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1153,1163>

-------- No Patch ---------


-------- Similar Code ---------
SpiderWebPlot clone=(SpiderWebPlot)super.clone();
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
return clone;

2.2321423383500933
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1610,1617>

-------- No Patch ---------


-------- Similar Code ---------
DefaultIntervalCategoryDataset clone=(DefaultIntervalCategoryDataset)super.clone();
clone.categoryKeys=(Comparable[])this.categoryKeys.clone();
clone.seriesKeys=(Comparable[])this.seriesKeys.clone();
clone.startData=clone(this.startData);
clone.endData=clone(this.endData);
return clone;

2.227530399401109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java<753,759>

-------- No Patch ---------


-------- Similar Code ---------
LegendItem clone=(LegendItem)super.clone();
if(this.seriesKey instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.seriesKey;
clone.seriesKey=(Comparable)pc.clone();
}
clone.shape=ShapeUtilities.clone(this.shape);
if(this.fillPaintTransformer instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.fillPaintTransformer;
clone.fillPaintTransformer=(GradientPaintTransformer)pc.clone();
}
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.2209057334104063
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItem.java<1124,1137>

-------- No Patch ---------


-------- Similar Code ---------
AbstractXYItemRenderer clone=(AbstractXYItemRenderer)super.clone();
clone.itemLabelGeneratorList=(ObjectList)this.itemLabelGeneratorList.clone();
if(this.baseItemLabelGenerator!=null&&this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(XYItemLabelGenerator)pc.clone();
}
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
if(this.baseToolTipGenerator!=null&&this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(XYToolTipGenerator)pc.clone();
}

2.2166007486010706
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1701,1718>

-------- No Patch ---------


-------- Similar Code ---------
AbstractRenderer clone=(AbstractRenderer)super.clone();
if(this.seriesVisibleList!=null){
clone.seriesVisibleList=(BooleanList)this.seriesVisibleList.clone();
}
if(this.seriesVisibleInLegendList!=null){
clone.seriesVisibleInLegendList=(BooleanList)this.seriesVisibleInLegendList.clone();
}
if(this.paintList!=null){
clone.paintList=(PaintList)this.paintList.clone();
}
if(this.fillPaintList!=null){
clone.fillPaintList=(PaintList)this.fillPaintList.clone();
}

2.21645677481968
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3162,3182>

-------- No Patch ---------


-------- Similar Code ---------
AbstractXYItemLabelGenerator clone=(AbstractXYItemLabelGenerator)super.clone();
if(this.xFormat!=null){
clone.xFormat=(NumberFormat)this.xFormat.clone();
}
if(this.yFormat!=null){
clone.yFormat=(NumberFormat)this.yFormat.clone();
}
if(this.xDateFormat!=null){
clone.xDateFormat=(DateFormat)this.xDateFormat.clone();
}
if(this.yDateFormat!=null){
clone.yDateFormat=(DateFormat)this.yDateFormat.clone();
}
return clone;

2.2144386405126997
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<362,376>

-------- No Patch ---------


-------- Similar Code ---------
StandardEntityCollection clone=(StandardEntityCollection)super.clone();
clone.entities=new java.util.ArrayList(this.entities.size());
for(int i=0;i<this.entities.size();i++){
ChartEntity entity=(ChartEntity)this.entities.get(i);
clone.entities.add(entity.clone());
}
return clone;

2.1346387456147182
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<196,203>

-------- No Patch ---------


-------- Similar Code ---------
LineAndShapeRenderer clone=(LineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.134449690139175
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java<918,925>

-------- No Patch ---------


-------- Similar Code ---------
DefaultKeyedValues clone=(DefaultKeyedValues)super.clone();
clone.keys=(ArrayList)this.keys.clone();
clone.values=(ArrayList)this.values.clone();
clone.indexMap=(HashMap)this.indexMap.clone();
return clone;

2.134449690139175
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<462,466>

-------- No Patch ---------


-------- Similar Code ---------
PiePlot clone=(PiePlot)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
if(this.urlGenerator instanceof PublicCloneable){
clone.urlGenerator=(PieURLGenerator)ObjectUtilities.clone(this.urlGenerator);
}
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
if(this.legendLabelGenerator!=null){
clone.legendLabelGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelGenerator);
}
if(this.legendLabelToolTipGenerator!=null){
clone.legendLabelToolTipGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelToolTipGenerator);
}

2.1206807252308426
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3636,3652>

-------- No Patch ---------


-------- Similar Code ---------
item=(XYDataItem)item.clone();
if(this.autoSort){
this.data.add(-index-1,item);
}else {
this.data.add(item);
}
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
XYDataItem removed=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}

2.1201810120917615
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<833,846>

-------- No Patch ---------


-------- Similar Code ---------
DefaultPieDataset clone=(DefaultPieDataset)super.clone();
clone.data=(KeyedObjects)this.data.clone();
return clone;

2.081018796773782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<390,392>

-------- No Patch ---------


-------- Similar Code ---------
DefaultCategoryDataset clone=(DefaultCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.081018796773782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<459,461>

-------- No Patch ---------


-------- Similar Code ---------
DefaultMultiValueCategoryDataset clone=(DefaultMultiValueCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.081018796773782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<401,404>

-------- No Patch ---------


-------- Similar Code ---------
DefaultBoxAndWhiskerCategoryDataset clone=(DefaultBoxAndWhiskerCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.081018796773782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<916,919>

-------- No Patch ---------


-------- Similar Code ---------
DefaultStatisticalCategoryDataset clone=(DefaultStatisticalCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.081018796773782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<728,731>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(CategoryAxis)this.domainAxes.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<760,762>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<881,883>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1041,1043>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1164,1166>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(CategoryDataset)this.datasets.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1321,1323>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(CategoryItemRenderer)this.renderers.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(ValueAxis)this.domainAxes.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<819,821>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1007,1009>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1183,1185>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1307,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(XYDataset)this.datasets.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1400,1402>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(XYItemRenderer)this.renderers.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1613,1615>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(ValueDataset)this.datasets.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<471,473>

-------- No Patch ---------


-------- Similar Code ---------
if(this.scales.size()>index){
result=(DialScale)this.scales.get(index);
}

2.0781856483737573
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<674,676>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(index);
if(xAxis!=null){
axisCollection.add(xAxis,getDomainAxisEdge(index));
}
}

2.0773639692773926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3885,3890>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

2.0773639692773926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3893,3898>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(index);
if(axis!=null){
axisCollection.add(axis,getDomainAxisEdge(index));
}
}

2.0773639692773926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3722,3727>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

2.0773639692773926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3730,3735>

-------- No Patch ---------


-------- Similar Code ---------
Comparable result=null;
KeyedObject item=(KeyedObject)this.data.get(index);
if(item!=null){
result=item.getKey();
}
return result;

2.0612898886892617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<115,120>

-------- No Patch ---------


-------- Similar Code ---------
clone.backgroundDomainMarkers=(Map)ObjectUtilities.clone(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=(Map)ObjectUtilities.clone(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=(Map)ObjectUtilities.clone(this.backgroundRangeMarkers);
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
if(this.fixedLegendItems!=null){
clone.fixedLegendItems=(LegendItemCollection)this.fixedLegendItems.clone();
}

2.0576895603945067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5700,5718>

-------- No Patch ---------


-------- Similar Code ---------
{
item=(TimeSeriesDataItem)item.clone();
this.data.add(-index-1,item);
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
TimeSeriesDataItem d=(TimeSeriesDataItem)this.data.remove(0);
updateBoundsForRemovedItem(d);
}
}

2.039625673576028
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<847,857>

-------- No Patch ---------


-------- Similar Code ---------
LegendGraphic clone=(LegendGraphic)super.clone();
clone.shape=ShapeUtilities.clone(this.shape);
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.024989464060369
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendGraphic.java<719,722>

-------- No Patch ---------


-------- Similar Code ---------
StandardXYItemRenderer clone=(StandardXYItemRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

2.0203540102402586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<987,991>

-------- No Patch ---------


-------- Similar Code ---------
RelativeDateFormat clone=(RelativeDateFormat)super.clone();
clone.dayFormatter=(NumberFormat)this.dayFormatter.clone();
clone.secondFormatter=(NumberFormat)this.secondFormatter.clone();
return clone;

2.0131049512627555
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RelativeDateFormat.java<589,592>

-------- No Patch ---------


-------- Similar Code ---------
TimeTableXYDataset clone=(TimeTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

2.0131049512627555
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<598,601>

-------- No Patch ---------


-------- Similar Code ---------
AbstractBlock clone=(AbstractBlock)super.clone();
clone.bounds=(Rectangle2D)ShapeUtilities.clone(this.bounds);
if(this.frame instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.frame;
clone.frame=(BlockFrame)pc.clone();
}
return clone;

2.0120610210438326
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/AbstractBlock.java<596,602>

-------- No Patch ---------


-------- Similar Code ---------
AbstractPieItemLabelGenerator clone=(AbstractPieItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.percentFormat!=null){
clone.percentFormat=(NumberFormat)this.percentFormat.clone();
}
return clone;

2.0095133050851484
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java<236,244>

-------- No Patch ---------


-------- Similar Code ---------
AbstractCategoryItemLabelGenerator clone=(AbstractCategoryItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.dateFormat!=null){
clone.dateFormat=(DateFormat)this.dateFormat.clone();
}
return clone;

2.0095133050851484
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java<323,331>

-------- No Patch ---------


-------- Similar Code ---------
HighLowItemLabelGenerator clone=(HighLowItemLabelGenerator)super.clone();
if(this.dateFormatter!=null){
clone.dateFormatter=(DateFormat)this.dateFormatter.clone();
}
if(this.numberFormatter!=null){
clone.numberFormatter=(NumberFormat)this.numberFormatter.clone();
}
return clone;

2.0095133050851484
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/HighLowItemLabelGenerator.java<185,195>

-------- No Patch ---------


-------- Similar Code ---------
ChartRenderingInfo clone=(ChartRenderingInfo)super.clone();
if(this.chartArea!=null){
clone.chartArea=(Rectangle2D)this.chartArea.clone();
}
if(this.entities instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.entities;
clone.entities=(EntityCollection)pc.clone();
}
return clone;

2.005823664999465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartRenderingInfo.java<259,267>

-------- No Patch ---------


-------- Similar Code ---------
if(this.createEntitiesList!=null){
clone.createEntitiesList=(BooleanList)this.createEntitiesList.clone();
}
if(this.legendShapeList!=null){
clone.legendShapeList=(ShapeList)this.legendShapeList.clone();
}
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}
clone.listenerList=new EventListenerList();
return clone;

1.9868298198347176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3244,3260>

-------- No Patch ---------


-------- Similar Code ---------
if(this.a2!=null){
clone.a2=(Area)this.a2.clone();
}
if(this.rect1!=null){
clone.rect1=(Rectangle2D)this.rect1.clone();
}
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int i=0;i<this.datasets.length;++i){
if(clone.datasets[i]!=null){
clone.datasets[i].addChangeListener(clone);
}
}

1.9866767558471126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<815,829>

-------- No Patch ---------


-------- Similar Code ---------
if(this.a2!=null){
clone.a2=(Area)this.a2.clone();
}
if(this.rect1!=null){
clone.rect1=(Rectangle2D)this.rect1.clone();
}
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int i=0;i<this.datasets.length;++i){
if(clone.datasets[i]!=null){
clone.datasets[i].addChangeListener(clone);
}
}

1.9866767558471126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<815,829>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drState.lowerCoordinates.add(new double[]{yyLow,xx});
drState.upperCoordinates.add(new double[]{yyHigh,xx});
}else if(orientation==PlotOrientation.VERTICAL){
drState.lowerCoordinates.add(new double[]{xx,yyLow});
drState.upperCoordinates.add(new double[]{xx,yyHigh});
}

1.9861475785257114
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<286,293>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries series=(TaskSeries)this.data.get(index);
return series.getKey();

1.9816757331966124
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<240,241>

-------- No Patch ---------


-------- Similar Code ---------
if(rowIndex>=0){
row=(DefaultKeyedValues)this.rows.get(rowIndex);
}else {
row=new DefaultKeyedValues();
if(this.sortRowKeys){
rowIndex=-rowIndex-1;
this.rowKeys.add(rowIndex,rowKey);
this.rows.add(rowIndex,row);
}else {
this.rowKeys.add(rowKey);
this.rows.add(row);
}
}

1.9722850116804056
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<323,337>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.959364354902602
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<367,368>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.959364354902602
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
KeyToGroupMap result=(KeyToGroupMap)super.clone();
result.defaultGroup=(Comparable)KeyToGroupMap.clone(this.defaultGroup);
result.groups=(List)KeyToGroupMap.clone(this.groups);
result.keyToGroupMap=(Map)KeyToGroupMap.clone(this.keyToGroupMap);
return result;

1.9565552255117622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<259,264>

-------- No Patch ---------


-------- Similar Code ---------
if(value>this.upperBound){
return this.defaultPaint;
}
int count=this.lookupTable.size();
if(count==0){
return this.defaultPaint;
}
PaintItem item=(PaintItem)this.lookupTable.get(0);
if(value<item.value){
return this.defaultPaint;
}
int low=0;
int high=this.lookupTable.size()-1;

1.9541090753361912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<275,292>

-------- No Patch ---------


-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
return (TickUnit)this.tickUnits.get(index);
}else {
index=-(index+1);
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));
}

1.948735312047924
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<153,161>

-------- No Patch ---------


-------- Similar Code ---------
XYSeriesCollection clone=(XYSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.intervalDelegate=(IntervalXYDelegate)this.intervalDelegate.clone();
return clone;

1.945166040315447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<502,506>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesCollection clone=(TimeSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

1.945166040315447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<784,787>

-------- No Patch ---------


-------- Similar Code ---------
if(edge==RectangleEdge.TOP){
this.axesAtTop.add(axis);
}else if(edge==RectangleEdge.BOTTOM){
this.axesAtBottom.add(axis);
}else if(edge==RectangleEdge.LEFT){
this.axesAtLeft.add(axis);
}else if(edge==RectangleEdge.RIGHT){
this.axesAtRight.add(axis);
}

1.938312554737832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/AxisCollection.java<130,141>

-------- No Patch ---------


-------- Similar Code ---------
while(high-low>1){
int current=(low+high)/2;
item=(PaintItem)this.lookupTable.get(current);
if(value>=item.value){
low=current;
}else {
high=current;
}
}
if(high>low){
item=(PaintItem)this.lookupTable.get(high);
if(value<item.value){
item=(PaintItem)this.lookupTable.get(low);
}
}
return (item!=null?item.paint:this.defaultPaint);

1.9132880107784
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<293,309>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9095613533097013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<426,433>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9095613533097013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<269,276>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.9095613533097013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<314,321>

-------- No Patch ---------


-------- Similar Code ---------
Plot clone=(Plot)super.clone();
if(this.datasetGroup!=null){
clone.datasetGroup=(DatasetGroup)ObjectUtilities.clone(this.datasetGroup);
}
clone.drawingSupplier=(DrawingSupplier)ObjectUtilities.clone(this.drawingSupplier);
clone.listenerList=new EventListenerList();
return clone;

1.9073071628093317
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1378,1388>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(key.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(key)){
result.add(this.datasets.get(i));
}
}
}

1.9053782644739468
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4446,4459>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.9053782644739468
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4427,4440>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.9053782644739468
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4457,4470>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
CategoryAxis clonedAxis=(CategoryAxis)xAxis.clone();
clone.setDomainAxis(i,clonedAxis);
}
}

1.9013051227407733
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5101,5107>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
ValueAxis clonedAxis=(ValueAxis)yAxis.clone();
clone.setRangeAxis(i,clonedAxis);
}
}

1.9013051227407733
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5112,5118>

-------- No Patch ---------


-------- Similar Code ---------
MultiplePiePlot clone=(MultiplePiePlot)super.clone();
clone.pieChart=(JFreeChart)this.pieChart.clone();
clone.sectionPaints=new HashMap(this.sectionPaints);
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
return clone;

1.8900425747778211
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<658,662>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}

1.8778685335545773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1720,1745>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.8778685335545773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1724,1749>

-------- No Patch ---------


-------- Similar Code ---------
for(int itemNo=0;itemNo<series.getItemCount();itemNo++){
Number xValue=series.getX(itemNo);
seriesXPoints.add(xValue);
if(!this.xPoints.contains(xValue)){
this.xPoints.add(xValue);
int seriesCount=this.data.size();
for(int seriesNo=0;seriesNo<seriesCount;seriesNo++){
XYSeries dataSeries=(XYSeries)this.data.get(seriesNo);
if(!dataSeries.equals(series)){
dataSeries.add(xValue,null);
}
}
}
}

1.8655072407411968
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<175,188>

-------- No Patch ---------


-------- Similar Code ---------
SamplingXYLineRenderer clone=(SamplingXYLineRenderer)super.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
return clone;

1.8624082059235476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<308,312>

-------- No Patch ---------


-------- Similar Code ---------
XYDifferenceRenderer clone=(XYDifferenceRenderer)super.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

1.8571626268993402
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<1191,1193>

-------- No Patch ---------


-------- Similar Code ---------
XYAreaRenderer clone=(XYAreaRenderer)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

1.8571626268993402
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<695,697>

-------- No Patch ---------


-------- Similar Code ---------
XYAreaRenderer2 clone=(XYAreaRenderer2)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

1.8571626268993402
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<413,415>

-------- No Patch ---------


-------- Similar Code ---------
DefaultHeatMapDataset clone=(DefaultHeatMapDataset)super.clone();
clone.zValues=DataUtilities.clone(this.zValues);
return clone;

1.8571626268993402
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DefaultHeatMapDataset.java<319,321>

-------- No Patch ---------


-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.855963426151535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<114,116>

-------- No Patch ---------


-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.855963426151535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<105,107>

-------- No Patch ---------


-------- Similar Code ---------
if(item<tooltips.size()){
result=(String)tooltips.get(item);
}

1.855963426151535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<117,119>

-------- No Patch ---------


-------- Similar Code ---------
DateAxis clone=(DateAxis)super.clone();
if(this.dateFormatOverride!=null){
clone.dateFormatOverride=(DateFormat)this.dateFormatOverride.clone();
}
return clone;

1.8546230588583645
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1941,1948>

-------- No Patch ---------


-------- Similar Code ---------
NumberAxis clone=(NumberAxis)super.clone();
if(this.numberFormatOverride!=null){
clone.numberFormatOverride=(NumberFormat)this.numberFormatOverride.clone();
}
return clone;

1.8546230588583645
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1365,1370>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(this.datasets.get(i)==dataset){
result=(CategoryItemRenderer)this.renderers.get(i);
break;
}
}

1.8469238824157
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1709,1714>

-------- No Patch ---------


-------- Similar Code ---------
ScatterRenderer clone=(ScatterRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

1.845724679126723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<562,565>

-------- No Patch ---------


-------- Similar Code ---------
DefaultPolarItemRenderer clone=(DefaultPolarItemRenderer)super.clone();
clone.seriesFilled=(BooleanList)this.seriesFilled.clone();
return clone;

1.845724679126723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java<335,338>

-------- No Patch ---------


-------- Similar Code ---------
LogFormat clone=(LogFormat)super.clone();
clone.formatter=(NumberFormat)this.formatter.clone();
return clone;

1.845724679126723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/LogFormat.java<258,260>

-------- No Patch ---------


-------- Similar Code ---------
XYTaskDataset clone=(XYTaskDataset)super.clone();
clone.underlying=(TaskSeriesCollection)this.underlying.clone();
return clone;

1.845724679126723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<460,462>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeriesCollection clone=(XYIntervalSeriesCollection)super.clone();
int seriesCount=getSeriesCount();
clone.data=new java.util.ArrayList(seriesCount);
for(int i=0;i<this.data.size();i++){
clone.data.set(i,getSeries(i).clone());
}
return clone;

1.842293442693117
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<378,385>

-------- No Patch ---------


-------- Similar Code ---------
XYShapeRenderer clone=(XYShapeRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<570,575>

-------- No Patch ---------


-------- Similar Code ---------
XYBlockRenderer clone=(XYBlockRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<439,444>

-------- No Patch ---------


-------- Similar Code ---------
SlidingGanttCategoryDataset clone=(SlidingGanttCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(GanttCategoryDataset)pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<604,610>

-------- No Patch ---------


-------- Similar Code ---------
SlidingCategoryDataset clone=(SlidingCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(CategoryDataset)pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<345,350>

-------- No Patch ---------


-------- Similar Code ---------
KeyedObject clone=(KeyedObject)super.clone();
if(this.object instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.object;
clone.object=pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObject.java<114,119>

-------- No Patch ---------


-------- Similar Code ---------
XYBarDataset clone=(XYBarDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(XYDataset)pc.clone();
}
return clone;

1.8422243139053014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<376,381>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.8416252073346822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2645,2652>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.8416252073346822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2930,2937>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.8416252073346822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2701,2708>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.8416252073346822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2940,2947>

-------- No Patch ---------


-------- Similar Code ---------
KeyedObjects clone=(KeyedObjects)super.clone();
clone.data=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
clone.data.add(ko.clone());
}
return clone;

1.8393241905379227
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<325,332>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

1.8383957382657887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<867,872>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
ComparableObjectItem item=(ComparableObjectItem)this.data.get(i);
if(item.getComparable().equals(x)){
return i;
}
}

1.8383957382657887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<280,286>

-------- No Patch ---------


-------- Similar Code ---------
XYBarRenderer result=(XYBarRenderer)super.clone();
if(this.gradientPaintTransformer!=null){
result.gradientPaintTransformer=(GradientPaintTransformer)ObjectUtilities.clone(this.gradientPaintTransformer);
}
result.legendBar=ShapeUtilities.clone(this.legendBar);
return result;

1.8314119525837194
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1265,1271>

-------- No Patch ---------


-------- Similar Code ---------
{
DefaultXYDataset clone=(DefaultXYDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
clone.seriesList.add(i,new double[][]{xx,yy});
}
return clone;
}

1.829467452717
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<362,377>

-------- No Patch ---------


-------- Similar Code ---------
interior.add(this.backgroundPaintSample);
interior.add(button);
if(this.plotOrientation!=null){
boolean isVertical=this.plotOrientation.equals(PlotOrientation.VERTICAL);
int index=isVertical?ORIENTATION_VERTICAL:ORIENTATION_HORIZONTAL;
interior.add(new JLabel(localizationResources.getString("Orientation")));
this.orientationCombo=new JComboBox(orientationNames);
this.orientationCombo.setSelectedIndex(index);
this.orientationCombo.setActionCommand("Orientation");
this.orientationCombo.addActionListener(this);
interior.add(new JPanel());
interior.add(this.orientationCombo);
}

1.8260421947025438
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<254,270>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
CategoryDataset dataset=(CategoryDataset)this.datasets.get(i);
if(mappedAxes==null){
if(key.equals(ZERO)){
if(dataset!=null){
result.add(dataset);
}
}
}else {
if(mappedAxes.contains(key)){
if(dataset!=null){
result.add(dataset);
}
}
}
}

1.8153679653705952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4413,4431>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=0){
last=(TextLine)this.lines.get(index);
}

1.8130482822162202
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextBlock.java<139,141>

-------- No Patch ---------


-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
index=index+1;
}else {
index=-index;
}
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));

1.7780790532795505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<130,139>

-------- No Patch ---------


-------- Similar Code ---------
PeriodAxis clone=(PeriodAxis)super.clone();
clone.timeZone=(TimeZone)this.timeZone.clone();
clone.labelInfo=new PeriodAxisLabelInfo[this.labelInfo.length];
for(int i=0;i<this.labelInfo.length;i++){
clone.labelInfo[i]=this.labelInfo[i];
}
return clone;

1.769335755155038
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<1161,1168>

-------- No Patch ---------


-------- Similar Code ---------
DefaultTableXYDataset clone=(DefaultTableXYDataset)super.clone();
int seriesCount=this.data.size();
clone.data=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
XYSeries series=(XYSeries)this.data.get(i);
clone.data.add(series.clone());
}
clone.intervalDelegate=new IntervalXYDelegate(clone);
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
clone.updateXPoints();
return clone;

1.7612370164889186
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<545,560>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries clone=(XYSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<908,910>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeriesCollection clone=(VectorSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<328,331>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeriesCollection clone=(YIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<353,356>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeriesCollection clone=(XIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<355,358>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries clone=(TimeSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1031,1033>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeriesCollection clone=(OHLCSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.759123411213066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<485,488>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
DefaultKeyedValues rowData=(DefaultKeyedValues)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getValue(index);
}
}
return result;

1.7590369448472183
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<144,155>

-------- No Patch ---------


-------- Similar Code ---------
{
DefaultXYZDataset clone=(DefaultXYZDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] z=data[2];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
double[] zz=new double[z.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
System.arraycopy(z,0,zz,0,z.length);
clone.seriesList.add(i,new double[][]{xx,yy,zz});
}
return clone;
}

1.7466492502828252
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<412,430>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.optionalLibraries.size();i++){
OptionalLibraryHolder holder=(OptionalLibraryHolder)this.optionalLibraries.get(i);
Library l=holder.getLibrary();
if(l!=null){
libraries.add(l);
}
}

1.74632692088126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ui/BasicProjectInfo.java<266,273>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.745393636309342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2530,2541>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.745393636309342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2804,2815>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.745393636309342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4212,4223>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.745393636309342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4238,4249>

-------- No Patch ---------


-------- Similar Code ---------
List l=(List)this.data.getObject(row,column);
double average=0.0;
int count=0;
if(l!=null&&l.size()>0){
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}
if(count>0){
average=average/count;
}
}

1.7432534450585622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<204,216>


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
List l=(List)this.data.getObject(row,column);
double average=0.0;
int count=0;
if(l!=null&&l.size()>0){
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}
if(count>0){
average=average/count;
}
}

1.7432534450585622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<232,244>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Object result=null;
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
if(columnKey!=null){
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getObject(columnKey);
}
}
}
return result;

1.7411718751906875
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<112,123>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getX(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<215,216>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<229,230>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getX(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<172,173>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<186,187>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<200,201>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<330,331>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<283,284>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return ts.getValue(item);

1.7371421326803798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<476,477>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getX();

1.7366624670057833
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<222,224>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindDirection();

1.7366624670057833
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<251,253>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindForce();

1.7366624670057833
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<266,268>

-------- No Patch ---------


-------- Similar Code ---------
for(int rowNum=0;rowNum<this.rows.size();++rowNum){
row=(ArrayList)this.rows.get(rowNum);
for(int column=1;column<numberOfColumns;column++){
Object testValue=row.get(column);
if(testValue!=null){
double test=((Number)testValue).doubleValue();
if(test<this.minValue){
this.minValue=test;
}
if(test>this.maxValue){
this.maxValue=test;
}
}
}
}

1.731453071316574
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<373,388>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.domainAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}

1.731138278641239
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5648,5656>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.rangeAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}

1.731138278641239
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5661,5669>

-------- No Patch ---------


-------- Similar Code ---------
if(copyAndSort){
int itemCount=values.size();
List copy=new ArrayList(itemCount);
for(int i=0;i<itemCount;i++){
copy.add(i,values.get(i));
}
Collections.sort(copy);
values=copy;
}

1.7295336005016315
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<203,211>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(this.datasets.get(i)==dataset){
result=(XYItemRenderer)this.renderers.get(i);
if(result==null){
result=getRenderer();
}
break;
}
}

1.726405589725739
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1768,1776>


-------- Patch ---------
if(this.data.size()>0){
result=(XYItemRenderer)this.copy.get(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
break;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
result=(XYItemRenderer)this.copy.get(index);
break;

for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.renderers.size();i++){
CategoryItemRenderer renderer2=(CategoryItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
CategoryItemRenderer rc=(CategoryItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}

1.7224995579258984
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5134,5144>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.renderers.size();i++){
XYItemRenderer renderer2=(XYItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
XYItemRenderer rc=(XYItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}

1.7224995579258984
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5688,5697>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
yAxis.setPlot(this);
yAxis.addChangeListener(this);
}
}
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}

1.7209409468671986
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5249,5262>

-------- No Patch ---------


-------- Similar Code ---------
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

1.716997258881707
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<278,285>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYValue(item));

1.714645008101203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<214,215>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYLowValue(item));

1.714645008101203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<253,254>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYHighValue(item));

1.714645008101203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<266,267>

-------- No Patch ---------


-------- Similar Code ---------
if(collection==null){
throw new IllegalArgumentException("Null \'collection\' argument.");
}
 final Collection result=(Collection)ObjectUtilities.clone(collection);
result.clear();
 final Iterator iterator=collection.iterator();
while(iterator.hasNext()){
 final Object item=iterator.next();
if(item!=null){
result.add(clone(item));
}else {
result.add(null);
}
}
return result;

1.7113311926260137
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ObjectUtilities.java<203,222>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<this.rows;r++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
b.setBounds(new Rectangle2D.Double(c*width,r*height,width,height));
}
}

1.711102133755486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<190,200>

-------- No Patch ---------


-------- Similar Code ---------
JFreeChart chart=(JFreeChart)super.clone();
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
if(this.title!=null){
chart.title=(TextTitle)this.title.clone();
chart.title.addChangeListener(chart);
}
chart.subtitles=new ArrayList();
for(int i=0;i<getSubtitleCount();i++){
Title subtitle=(Title)getSubtitle(i).clone();
chart.subtitles.add(subtitle);
subtitle.addChangeListener(chart);
}

1.697568058472668
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1713,1730>


-------- Patch ---------
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
chart.subtitles=new ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
PaintItem item=new PaintItem(value,paint);
int index=Collections.binarySearch(this.lookupTable,item);
if(index>=0){
this.lookupTable.set(index,item);
}else {
this.lookupTable.add(-(index+1),item);
}

1.6922491220378943
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<250,257>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6862865456756566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2457,2474>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6862865456756566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2729,2746>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6862865456756566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2612,2629>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.6862865456756566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2813,2830>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getFirstMillisecond(this.workingCalendar));

1.6838043610549833
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<448,450>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getLastMillisecond(this.workingCalendar));

1.6838043610549833
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<462,464>

-------- No Patch ---------


-------- Similar Code ---------
int index=getIndex(period);
if(index>=0){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.remove(index);
updateBoundsForRemovedItem(item);
if(this.data.isEmpty()){
this.timePeriodClass=null;
}
fireSeriesChanged();
}

1.6829876964849255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<968,977>

-------- No Patch ---------


-------- Similar Code ---------
Object result=null;
KeyedObject kobj=(KeyedObject)this.data.get(item);
if(kobj!=null){
result=kobj.getObject();
}
return result;

1.6803375077368807
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<95,100>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<getSeriesCount();i++){
TaskSeries series=(TaskSeries)this.data.get(i);
Iterator iterator=series.getTasks().iterator();
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}
}

1.6691450182991734
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<635,647>

-------- No Patch ---------


-------- Similar Code ---------
DefaultOHLCDataset clone=(DefaultOHLCDataset)super.clone();
clone.data=new OHLCDataItem[this.data.length];
System.arraycopy(this.data,0,clone.data,0,this.data.length);
return clone;

1.6674164353151495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<333,336>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()==0){
return ;
}
for(int i=0;i<this.data.size();i++){
OHLCSeries series=(OHLCSeries)this.data.get(i);
series.removeChangeListener(this);
}
this.data.clear();
fireDatasetChanged(new DatasetChangeInfo());

1.6667490427783673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<424,437>


-------- Patch ---------
this.data.clear();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxH=Math.max(maxH,s.getHeight());
}
}

1.6661800778699707
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<370,380>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxW=Math.max(maxW,s.getWidth());
}
}

1.6661800778699707
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<403,413>

-------- No Patch ---------


-------- Similar Code ---------
MeterPlot clone=(MeterPlot)super.clone();
clone.tickLabelFormat=(NumberFormat)this.tickLabelFormat.clone();
clone.intervals=new java.util.ArrayList(this.intervals);
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
return clone;

1.6610927932171458
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<1329,1336>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeriesCollection clone=(TaskSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.keys=new java.util.ArrayList(this.keys);
return clone;

1.6594517546011611
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<681,684>

-------- No Patch ---------


-------- Similar Code ---------
if(keyIndex>=0){
KeyedObject ko=(KeyedObject)this.data.get(keyIndex);
ko.setObject(object);
}else {
KeyedObject ko=new KeyedObject(key,object);
this.data.add(ko);
}

1.6582858779830194
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<206,213>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}
int rendererCount=this.renderers.size();
for(int i=0;i<rendererCount;i++){
XYItemRenderer renderer=(XYItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.6571591593720736
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5815,5827>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getXValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getYValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVector();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<269,271>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorX();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<283,285>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorY();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<297,299>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return di.getX();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<157,159>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=(TimeSeries)this.data.get(series);
RegularTimePeriod period=s.getTimePeriod(item);
return getX(period);

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<399,401>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
return dp.getValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<309,311>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getOpenValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<256,258>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getCloseValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<282,284>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getHighValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<308,310>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getLowValue();

1.650948181291498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<334,336>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(dataset==this.datasets.get(i)){
result=i;
break;
}
}

1.648892119084918
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1392,1397>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(dataset==this.datasets.get(i)){
result=i;
break;
}
}

1.648892119084918
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1463,1468>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem result=(VectorDataItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.648342399863279
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<106,108>

-------- No Patch ---------


-------- Similar Code ---------
ComparableObjectItem result=(ComparableObjectItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.648342399863279
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<371,374>

-------- No Patch ---------


-------- Similar Code ---------
for(int s=0;s<this.data.size();s++){
XYSeries series=(XYSeries)this.data.get(s);
if(series.getY(series.indexOf(x))!=null){
return false;
}
}

1.6476017288419649
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<453,458>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem existing=(XYDataItem)this.data.get(index);
overwritten=(XYDataItem)existing.clone();
boolean iterate=false;
double oldY=existing.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setY(item.getY());
if(iterate){
findBoundsByIteration();
}else if(item.getY()!=null){
double yy=item.getY().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}

1.6422773567899525
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<809,826>


-------- Patch ---------
item.setY(data.getY());
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(scale==null){
throw new IllegalArgumentException("Null \'scale\' argument.");
}
DialScale existing=(DialScale)this.scales.get(index);
if(existing!=null){
removeLayer(existing);
}
this.layers.add(scale);
this.scales.set(index,scale);
scale.addChangeListener(this);
fireChangeEvent();

1.6400316496598584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<652,662>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0){
row.removeValue(columnIndex);
}
}

1.6384545702548161
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<392,399>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0){
row.removeValue(colIndex);
}
}

1.6384545702548161
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<348,355>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_minuendAtIntersect){
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.6362871065430342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<578,581>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_subtrahendAtIntersect){
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.6362871065430342
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<600,603>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getYValue());

1.6337684614079764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXLowValue());

1.6337684614079764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<227,229>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXHighValue());

1.6337684614079764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
RegularTimePeriod period=ts.getTimePeriod(item);
return new Long(getX(period));

1.6337684614079764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<413,415>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return new Double(di.getYValue());

1.6337684614079764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<242,244>

-------- No Patch ---------


-------- Similar Code ---------
if(n>0){
result.add(period,sum/n);
}else {
result.add(period,null);
}

1.633115930528994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<164,169>

-------- No Patch ---------


-------- Similar Code ---------
if(n>0){
result.add(x,sum/n);
}else {
result.add(x,null);
}

1.633115930528994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<346,351>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.6327184601178333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
Map urlMap=(Map)this.urls.get(list);
if(urlMap!=null){
result=urlMap.size();
}
return result;

1.6327184601178333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<116,121>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.6327184601178333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<84,89>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List tooltips=(List)this.toolTipSeries.get(list);
if(tooltips!=null){
result=tooltips.size();
}
return result;

1.6327184601178333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<94,99>

-------- No Patch ---------


-------- Similar Code ---------
if(get(r,c)!=that.get(r,c)){
return false;
}

1.6315062239661584
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<229,231>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];
if(!Arrays.equals(d1y,d2y)){
return false;
}
}

1.623146496965149
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<324,337>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rows.size()==0){
ArrayList newRow=new ArrayList();
for(int column=0;column<numberOfColumns;column++){
if(columnTypes[column]!=Types.NULL){
newRow.add(new Integer(0));
}
}
this.rows.add(newRow);
}

1.6216254129680192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<354,362>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=numberOfColumns;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
this.data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DialLayer layer=(DialLayer)this.layers.get(index);
if(layer!=null){
layer.removeChangeListener(this);
}
this.layers.remove(index);
fireChangeEvent();

1.6189243447545172
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<359,364>

-------- No Patch ---------


-------- Similar Code ---------
DialPointer pointer=(DialPointer)this.pointers.get(index);
if(pointer!=null){
pointer.removeChangeListener(this);
}
this.pointers.remove(index);
fireChangeEvent();

1.6189243447545172
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<414,419>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0&&row.getValue(columnIndex)!=null){
allNull=false;
break;
}
}

1.6131653587346406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<381,389>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0&&row.getObject(colIndex)!=null){
allNull=false;
break;
}
}

1.6131653587346406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<337,345>

-------- No Patch ---------


-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(seriesIndex+1);

1.6082918740013485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<443,444>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem removed=(XYDataItem)this.data.remove(index);
updateBoundsForRemovedItem(removed);
fireSeriesChanged();
return removed;

1.603533896990092
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<576,579>

-------- No Patch ---------


-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(0);

1.6028045922590732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<428,429>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (List)map.get("bins");

1.6028045922590732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<272,273>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (Comparable)map.get("key");

1.6028045922590732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
{
TimeSeriesDataItem existing=(TimeSeriesDataItem)this.data.get(index);
overwritten=(TimeSeriesDataItem)existing.clone();
boolean iterate=false;
Number oldYN=existing.getValue();
double oldY=oldYN!=null?oldYN.doubleValue():Double.NaN;
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setValue(item.getValue());
if(iterate){
findBoundsByIteration();
}else if(item.getValue()!=null){
double yy=item.getValue().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}
}

1.6026175128978921
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<825,846>

-------- No Patch ---------


-------- Similar Code ---------
if(value<item.value){
item=(PaintItem)this.lookupTable.get(low);
}

1.5896315611349412
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<305,307>

-------- No Patch ---------


-------- Similar Code ---------
HistogramDataset clone=(HistogramDataset)super.clone();
int seriesCount=getSeriesCount();
clone.list=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
clone.list.add(new HashMap((Map)this.list.get(i)));
}
return clone;

1.5889435417477933
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<499,505>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getPercentComplete();
}
return result;

1.5808241523674464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<456,463>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getSubtaskCount();
}
return result;

1.5808241523674464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<489,496>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
RegularTimePeriod period=di.getPeriod();
return getX(period);

1.5807109008990101
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<215,218>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.5735294839209666
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1457,1467>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.5735294839209666
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1567,1577>

-------- No Patch ---------


-------- Similar Code ---------
months=calendar.get(Calendar.MONTH);
days=calendar.get(Calendar.DATE);
hours=calendar.get(Calendar.HOUR_OF_DAY);
minutes=calendar.get(Calendar.MINUTE);
seconds=calendar.get(Calendar.SECOND);
calendar.set(years,months,days,hours,minutes,seconds);
calendar.set(Calendar.MILLISECOND,value);
Date mm=calendar.getTime();
if(mm.getTime()>=date.getTime()){
calendar.set(Calendar.MILLISECOND,value-1);
mm=calendar.getTime();
}

1.5696703692372842
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<892,903>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getRowCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}

1.5689428317410747
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1794,1807>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.plot.getIndexOf(this);
XYDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getSeriesCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}

1.5689428317410747
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<957,970>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
TimePeriod period=dp.getPeriod();
return new Long(getX(period));

1.5669812113811927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<241,244>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
RegularTimePeriod period=series.getTimePeriod(i);
int index=getIndex(period);
if(index<0){
result.add(period);
}
}

1.5663269208812602
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<500,506>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.5655870878119722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4854,4859>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
domainAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.5655870878119722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5239,5244>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.5655870878119722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5312,5317>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<999,1004>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1013,1018>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1277,1282>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1291,1296>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<972,977>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<986,991>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1270,1275>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.559844521518119
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1286,1291>

-------- No Patch ---------


-------- Similar Code ---------
KeyedObjects2D clone=(KeyedObjects2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=new java.util.ArrayList(this.rows.size());
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects row=(KeyedObjects)iterator.next();
clone.rows.add(row.clone());
}
return clone;

1.555289901818942
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<510,519>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];
if(!Arrays.equals(d1y,d2y)){
return false;
}
double[] d1z=d1[2];
double[] d2z=d2[2];
if(!Arrays.equals(d1z,d2z)){
return false;
}
}

1.5433521058505555
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<369,387>

-------- No Patch ---------


-------- Similar Code ---------
if(mapIndex<getListCount()){
Map urlMap=(Map)this.urls.get(mapIndex);
if(urlMap!=null){
result=(String)urlMap.get(key);
}
}

1.5432521029097739
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<134,139>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<domainAxisCount;i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}
int rangeAxisCount=this.rangeAxes.size();
for(int i=0;i<rangeAxisCount;i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}

1.5403364290842654
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5799,5813>

-------- No Patch ---------


-------- Similar Code ---------
if(emptyRange){
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
return copy;
}else {
return createCopy(startIndex,endIndex);
}

1.5372642353717991
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1117,1124>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}

1.5370598115272254
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<260,267>

-------- No Patch ---------


-------- Similar Code ---------
{
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
boolean iterate=false;
Number oldYN=item.getValue();
if(oldYN!=null){
double oldY=oldYN.doubleValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
}
item.setValue(value);
if(iterate){
findBoundsByIteration();
}else if(value!=null){
double yy=value.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=maxIgnoreNaN(this.maxY,yy);
}
fireSeriesChanged();
}

1.5317062102678982
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<720,740>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5292159917574637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<118,121>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5292159917574637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<186,189>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5292159917574637
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<104,107>

-------- No Patch ---------


-------- Similar Code ---------
if(count>1){
Number value=(Number)values.get(start+(count-1)/2);
result=value.doubleValue();
}else {
Number value=(Number)values.get(start);
result=value.doubleValue();
}

1.524566277017291
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<279,287>

-------- No Patch ---------


-------- Similar Code ---------
LegendItemCollection clone=(LegendItemCollection)super.clone();
clone.items=(List)ObjectUtilities.deepClone(this.items);
return clone;

1.5238292935660072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItemCollection.java<149,151>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries clone=(TaskSeries)super.clone();
clone.tasks=(List)ObjectUtilities.deepClone(this.tasks);
return clone;

1.5238292935660072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<194,196>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramDataset clone=(SimpleHistogramDataset)super.clone();
clone.bins=(List)ObjectUtilities.deepClone(this.bins);
return clone;

1.5238292935660072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<558,560>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeriesCollection clone=(MatrixSeriesCollection)super.clone();
clone.seriesList=(List)ObjectUtilities.deepClone(this.seriesList);
return clone;

1.5238292935660072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<271,273>

-------- No Patch ---------


-------- Similar Code ---------
CustomXYToolTipGenerator clone=(CustomXYToolTipGenerator)super.clone();
if(this.toolTipSeries!=null){
clone.toolTipSeries=new java.util.ArrayList(this.toolTipSeries);
}
return clone;

1.5212897255250313
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<159,164>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
result=sub.getPercentComplete();
}
}
return result;

1.519103886537417
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<605,615>

-------- No Patch ---------


-------- Similar Code ---------
if(item==null){
throw new IllegalArgumentException("Null \'period\' argument.");
}
Class periodClass=item.getPeriod().getClass();
if(this.timePeriodClass==null){
this.timePeriodClass=periodClass;
}else if(!this.timePeriodClass.equals(periodClass)){
String msg="You are trying to add data where the time "+"period class is "+periodClass.getName();
throw new SeriesException(msg);
}
TimeSeriesDataItem overwritten=null;
int index=Collections.binarySearch(this.data,item);

1.5146434923578966
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<809,824>

-------- No Patch ---------


-------- Similar Code ---------
int index=indexOf(x);
if(index<0){
throw new SeriesException("No observation for x = "+x);
}else {
ComparableObjectItem item=getDataItem(index);
item.setObject(y);
fireSeriesChanged();
}

1.51424076057042
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<301,309>

-------- No Patch ---------


-------- Similar Code ---------
TickUnits clone=(TickUnits)super.clone();
clone.tickUnits=new java.util.ArrayList(this.tickUnits);
return clone;

1.51239134579339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<187,189>

-------- No Patch ---------


-------- Similar Code ---------
ExtendedCategoryAxis clone=(ExtendedCategoryAxis)super.clone();
clone.sublabels=new HashMap(this.sublabels);
return clone;

1.51239134579339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<228,230>

-------- No Patch ---------


-------- Similar Code ---------
CustomXYURLGenerator clone=(CustomXYURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.51239134579339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<203,205>

-------- No Patch ---------


-------- Similar Code ---------
CustomCategoryURLGenerator clone=(CustomCategoryURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.51239134579339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<191,194>

-------- No Patch ---------


-------- Similar Code ---------
LookupPaintScale clone=(LookupPaintScale)super.clone();
clone.lookupTable=new java.util.ArrayList(this.lookupTable);
return clone;

1.51239134579339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<352,354>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getStart().getTime());
}
}
return result;

1.5113971596980278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<369,379>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.5113971596980278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<406,416>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries ts=(TaskSeries)this.data.get(series);
return ts.getKey();

1.5110874979024946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<147,148>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getLowerBound();

1.5110874979024946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<365,366>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getUpperBound();

1.5110874979024946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<391,392>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.isSelected();

1.5110874979024946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<455,456>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem temp=new TimeSeriesDataItem(period,value);
int index=Collections.binarySearch(this.data,temp);
if(index<0){
throw new SeriesException("There is no existing value for the "+"specified \'period\'.");
}
update(index,value);

1.5087734392584495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<705,711>

-------- No Patch ---------


-------- Similar Code ---------
AbstractAnnotation clone=(AbstractAnnotation)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.5041247355553724
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractAnnotation.java<192,194>

-------- No Patch ---------


-------- Similar Code ---------
int upper=Math.max(getDatasetCount(),getRendererCount());
if(index<0||index>=upper){
throw new IllegalArgumentException("Index "+index);
}
ValueAxis valueAxis=null;
List axisIndices=(List)this.datasetToDomainAxesMap.get(new Integer(index));
if(axisIndices!=null){
Integer axisIndex=(Integer)axisIndices.get(0);
valueAxis=getDomainAxis(axisIndex.intValue());
}else {
valueAxis=getDomainAxis(0);
}
return valueAxis;

1.5033835200494816
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3909,3925>

-------- No Patch ---------


-------- Similar Code ---------
int upper=Math.max(getDatasetCount(),getRendererCount());
if(index<0||index>=upper){
throw new IllegalArgumentException("Index "+index);
}
ValueAxis valueAxis=null;
List axisIndices=(List)this.datasetToRangeAxesMap.get(new Integer(index));
if(axisIndices!=null){
Integer axisIndex=(Integer)axisIndices.get(0);
valueAxis=getRangeAxis(axisIndex.intValue());
}else {
valueAxis=getRangeAxis(0);
}
return valueAxis;

1.5033835200494816
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3936,3952>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x3<l_x1)&&(l_x1<l_x4)){
double l_slope=(l_y4-l_y3)/(l_x4-l_x3);
l_subtrahendCurX=l_minuendCurX;
l_subtrahendCurY=new Double((l_slope*l_x1)+(l_y3-(l_slope*l_x3)));
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.4966814655861258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<540,549>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x1<l_x3)&&(l_x3<l_x2)){
double l_slope=(l_y2-l_y1)/(l_x2-l_x1);
l_minuendCurX=l_subtrahendCurX;
l_minuendCurY=new Double((l_slope*l_x3)+(l_y1-(l_slope*l_x1)));
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.4966814655861258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<551,560>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis xAxis=(Axis)this.domainAxes.get(i);
if(xAxis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=xAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.4952177117617413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3479,3485>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis yAxis=(Axis)this.rangeAxes.get(i);
if(yAxis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=yAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.4952177117617413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3526,3532>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.4952177117617413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3135,3141>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.4952177117617413
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3182,3188>

-------- No Patch ---------


-------- Similar Code ---------
Axis clone=(Axis)super.clone();
clone.plot=null;
clone.listenerList=new EventListenerList();
return clone;

1.4919675195253845
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1441,1445>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
xAxis.setPlot(this);
xAxis.addChangeListener(this);
}
}

1.4900364476110066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5242,5248>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMean();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<327,332>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMedian();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<344,349>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ1();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<361,366>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ3();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<378,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinRegularValue();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<395,400>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxRegularValue();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<412,417>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinOutlier();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<428,433>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxOutlier();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<446,451>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getOutliers();
}
return result;

1.4898613172606903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<463,468>

-------- No Patch ---------


-------- Similar Code ---------
if(list!=null){
try{
List clone=(List)list.getClass().newInstance();
Iterator iterator=list.iterator();
while(iterator.hasNext()){
clone.add(KeyToGroupMap.clone(iterator.next()));
}
result=clone;
}catch (Exception e) {
  throw new CloneNotSupportedException("Exception.");
}

}

1.4897761402487752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<309,321>

-------- No Patch ---------


-------- Similar Code ---------
if(plot instanceof CategoryPlot){
rangeAxis=((CategoryPlot)plot).getRangeAxis();
}else if(plot instanceof XYPlot){
rangeAxis=((XYPlot)plot).getRangeAxis();
}
this.rangeAxisPropertyPanel=DefaultAxisEditor.getInstance(rangeAxis);
if(this.rangeAxisPropertyPanel!=null){
this.rangeAxisPropertyPanel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
tabs.add(localizationResources.getString("Range_Axis"),this.rangeAxisPropertyPanel);
}
tabs.add(localizationResources.getString("Appearance"),appearance);
panel.add(tabs);
add(panel);

1.4823093564184289
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<320,338>

-------- No Patch ---------


-------- Similar Code ---------
AbstractObjectList clone=(AbstractObjectList)super.clone();
if(this.objects!=null){
clone.objects=new Object[this.objects.length];
System.arraycopy(this.objects,0,clone.objects,0,this.objects.length);
}
return clone;

1.4812179205690406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<235,241>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,item);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(item,this.index);
}

1.4811034853373846
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<178,183>

-------- No Patch ---------


-------- Similar Code ---------
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.4806888311894646
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1352,1365>

-------- No Patch ---------


-------- Similar Code ---------
ValueDataset existing=(ValueDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.4806888311894646
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<496,509>

-------- No Patch ---------


-------- Similar Code ---------
if(this.axis!=null){
clone.axis=(ValueAxis)ObjectUtilities.clone(this.axis);
clone.axis.setPlot(clone);
clone.axis.addChangeListener(clone);
}

1.4744177836139094
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1063,1067>

-------- No Patch ---------


-------- Similar Code ---------
if(this.domainAxis!=null){
clone.domainAxis=(ValueAxis)this.domainAxis.clone();
clone.domainAxis.setPlot(clone);
clone.domainAxis.addChangeListener(clone);
}

1.47434700497022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1074,1078>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rangeAxis!=null){
clone.rangeAxis=(ValueAxis)this.rangeAxis.clone();
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}

1.47434700497022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1079,1083>

-------- No Patch ---------


-------- Similar Code ---------
int column=this.columnKeys.indexOf(columnKey);
if(column<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
int index=rowData.getIndex(columnKey);
if(index>=0){
return rowData.getObject(index);
}else {
return null;
}

1.4741426679545135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<233,245>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
space.add(maxdim,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
space.add(maxdim,edge);
}

1.472506332367021
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<201,206>

-------- No Patch ---------


-------- Similar Code ---------
DialScale result=(DialScale)this.scales.get(0);
Integer scaleIndex=(Integer)this.datasetToScaleMap.get(datasetIndex);
if(scaleIndex!=null){
result=getScale(scaleIndex.intValue());
}
return result;

1.469406176257913
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<699,704>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getStart().getTime());
}
}
return result;

1.4675710888035498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<525,536>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.4675710888035498
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<565,576>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
bin.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.462033086993349
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<483,487>

-------- No Patch ---------


-------- Similar Code ---------
if(edge==RectangleEdge.LEFT){
y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);
y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);
x1=state.getCursor()-this.categoryLabelPositionOffset;
x0=x1-state.getMax();
}else if(edge==RectangleEdge.RIGHT){
y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);
y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);
x0=state.getCursor()+this.categoryLabelPositionOffset;
x1=x0-state.getMax();
}

1.4607957439934347
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1010,1025>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<clone.datasets.size();++i){
XYDataset d=getDataset(i);
if(d!=null){
d.addChangeListener(clone);
}
}

1.4597517660961177
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5675,5680>

-------- No Patch ---------


-------- Similar Code ---------
result=new LegendItemCollection();
int count=this.datasets.size();
for(int datasetIndex=0;datasetIndex<count;datasetIndex++){
CategoryDataset dataset=getDataset(datasetIndex);
if(dataset!=null){
CategoryItemRenderer renderer=getRenderer(datasetIndex);
if(renderer!=null){
int seriesCount=dataset.getRowCount();
for(int i=0;i<seriesCount;i++){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}
}
}
}

1.4579830496318005
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2238,2256>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4550546902943624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2552,2564>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4550546902943624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2826,2838>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4550546902943624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2541,2553>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.4550546902943624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2844,2856>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<clone.datasets.size();i++){
CategoryDataset dataset=clone.getDataset(i);
if(dataset!=null){
dataset.addChangeListener(clone);
}
}

1.4537858455759474
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5122,5127>

-------- No Patch ---------


-------- Similar Code ---------
CrosshairOverlay clone=(CrosshairOverlay)super.clone();
clone.xCrosshairs=(List)ObjectUtilities.deepClone(this.xCrosshairs);
clone.yCrosshairs=(List)ObjectUtilities.deepClone(this.yCrosshairs);
return clone;

1.4535608926317978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/panel/CrosshairOverlay.java<589,592>

-------- No Patch ---------


-------- Similar Code ---------
if(value>upperOutlierThreshold){
outliers.add(number);
if(value>maxOutlier&&value<=upperFaroutThreshold){
maxOutlier=value;
}
}else if(value<lowerOutlierThreshold){
outliers.add(number);
if(value<minOutlier&&value>=lowerFaroutThreshold){
minOutlier=value;
}
}else {
minRegularValue=Math.min(minRegularValue,value);
maxRegularValue=Math.max(maxRegularValue,value);
}

1.4523659188962599
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<142,157>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.timePeriodClass=null;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.4492439544478146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<950,956>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.minX=Double.NaN;
this.maxX=Double.NaN;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.4485159163951997
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<601,608>

-------- No Patch ---------


-------- Similar Code ---------
if(zoomOutIndex!=-1){
result.remove(zoomOutIndex);
}else {
zoomOutIndex=zoomInIndex+1;
}
result.add(zoomOut,zoomOutIndex);
if(autoIndex!=-1){
result.remove(autoIndex);
}else {
autoIndex=zoomOutIndex+1;
}
result.add(auto,autoIndex);

1.4475315107141062
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<169,182>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<this.data.getColumnCount();c++){
Number value=this.data.getValue(r,c);
if(value!=null){
unique.add(value);
}
}

1.4465394687643531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<172,177>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.isEmpty()){
return ;
}
long index=Long.MAX_VALUE;
try{
Method m=RegularTimePeriod.class.getDeclaredMethod("createInstance",new Class[]{Class.class,Date.class,TimeZone.class});
RegularTimePeriod newest=(RegularTimePeriod)m.invoke(this.timePeriodClass,new Object[]{this.timePeriodClass,new Date(latest),TimeZone.getDefault()});
index=newest.getSerialIndex();
}catch (NoSuchMethodException e) {
  e.printStackTrace();
}
catch (IllegalAccessException e) {
  e.printStackTrace();
}
catch (InvocationTargetException e) {
  e.printStackTrace();
}


1.446417574287046
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<905,927>

-------- No Patch ---------


-------- Similar Code ---------
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1xs=d1[1];
double[] d2xs=d2[1];
if(!Arrays.equals(d1xs,d2xs)){
return false;
}

1.4429174481224354
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<466,477>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
TaskSeries s=(TaskSeries)this.data.get(i);
if(s.getKey().equals(rowKey)){
result=i;
break;
}
}

1.4424989114445834
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<222,228>

-------- No Patch ---------


-------- Similar Code ---------
Series clone=(Series)super.clone();
clone.listeners=new EventListenerList();
clone.propertyChangeSupport=new PropertyChangeSupport(clone);
return clone;

1.4420255890109603
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/Series.java<243,246>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset instanceof SelectableCategoryDataset){
SelectableCategoryDataset scd=(SelectableCategoryDataset)dataset;
if(scd.getSelectionState()!=null){
CategoryDatasetSelectionState selState=scd.getSelectionState();
selState.clearSelection();
}
}
}

1.4418504063525037
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5365,5379>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset instanceof AbstractXYDataset){
AbstractXYDataset axyd=(AbstractXYDataset)dataset;
if(axyd.getSelectionState()!=null){
XYDatasetSelectionState selState=axyd.getSelectionState();
selState.clearSelection();
}
}
}

1.4418504063525037
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<6013,6025>

-------- No Patch ---------


-------- Similar Code ---------
DefaultBoxAndWhiskerXYDataset clone=(DefaultBoxAndWhiskerXYDataset)super.clone();
clone.dates=new java.util.ArrayList(this.dates);
clone.items=new java.util.ArrayList(this.items);
return clone;

1.4416763798341843
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<551,555>

-------- No Patch ---------


-------- Similar Code ---------
for(int itemIndex=0;itemIndex<maxItemCount;itemIndex++){
Object xObject=data[seriesIndex][itemIndex][0];
if(xObject!=null){
Number xNumber;
if(xObject instanceof Number){
xNumber=(Number)xObject;
}else {
if(xObject instanceof Date){
Date xDate=(Date)xObject;
xNumber=new Long(xDate.getTime());
}else {
xNumber=new Integer(0);
}
}
Number windDir=(Number)data[seriesIndex][itemIndex][1];
Number windForce=(Number)data[seriesIndex][itemIndex][2];
oneSeriesData.add(new WindDataItem(xNumber,windDir,windForce));
}
}
Collections.sort(oneSeriesData);
this.allSeriesData.add(seriesIndex,oneSeriesData);

1.4411285589481766
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<143,166>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
return start.getTime();

1.439943482883018
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<398,402>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date end=duration.getEnd();
return end.getTime();

1.439943482883018
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<406,410>

-------- No Patch ---------


-------- Similar Code ---------
CategoryAxis existing=(CategoryAxis)this.domainAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.domainAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.439116069636389
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<807,821>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.rangeAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.439116069636389
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1084,1098>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.4376536804664255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<407,416>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.4376536804664255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<460,469>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
Date end=duration.getEnd();
return (start.getTime()+end.getTime())/2.0;

1.4367796284276808
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<389,394>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

1.4320246859832855
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1665,1683>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
Rectangle2D hotspot=(Rectangle2D)area.clone();
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams&&((EntityBlockParams)params).getGenerateEntities()){
sec=new StandardEntityCollection();
sec.add(new TitleEntity(hotspot,this));
}
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}

1.4311811720850485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<530,542>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4311767760711893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<352,355>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4311767760711893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<213,216>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.4311767760711893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<386,389>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(series);
List labelList=(List)this.seriesLabelLists.get(key);
if(labelList==null){
labelList=new java.util.ArrayList();
this.seriesLabelLists.put(key,labelList);
}
labelList.add(label);

1.4295228506087931
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<109,115>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Object key=iterator.next();
Object entry=this.seriesLabelLists.get(key);
Object toAdd=entry;
if(entry instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)entry;
toAdd=pc.clone();
}
clone.seriesLabelLists.put(key,toAdd);
}

1.4293568594404595
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<186,195>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getStartBoundary());

1.4256589976464622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<408,410>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getEndBoundary());

1.4256589976464622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<426,428>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.data.getIndex(key);
PieDatasetChangeType ct=PieDatasetChangeType.ADD;
if(index>=0){
ct=PieDatasetChangeType.UPDATE;
}
this.data.setObject(key,new SelectableValue(value));
PieDatasetChangeInfo info=new PieDatasetChangeInfo(ct,index,index);
fireDatasetChanged(info);

1.4253037574365255
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<205,213>

-------- No Patch ---------


-------- Similar Code ---------
if(count>1){
Number value=(Number)values.get((count-1)/2);
result=value.doubleValue();
}else {
Number value=(Number)values.get(0);
result=value.doubleValue();
}

1.42420561793806
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<215,222>

-------- No Patch ---------


-------- Similar Code ---------
CategoryTableXYDataset clone=(CategoryTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.intervalDelegate=new IntervalXYDelegate(clone);
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
return clone;

1.423954500577411
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/CategoryTableXYDataset.java<398,406>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;(index==-1)&&(i<menu.getComponentCount());i++){
Component comp=menu.getComponent(i);
if(comp instanceof JMenuItem){
JMenuItem item=(JMenuItem)comp;
if(text.equals(item.getText())){
index=i;
}
}
}

1.4183734451753198
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<242,250>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxStartIndex>=0){
long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
if(start>maxStart){
this.maxStartIndex=index;
}
}else {
this.maxStartIndex=index;
}

1.4153897998295089
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<274,283>

-------- No Patch ---------


-------- Similar Code ---------
if(this.minEndIndex>=0){
long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
if(end<minEnd){
this.minEndIndex=index;
}
}else {
this.minEndIndex=index;
}

1.4153897998295089
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<313,322>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxEndIndex>=0){
long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
if(end>maxEnd){
this.maxEndIndex=index;
}
}else {
this.maxEndIndex=index;
}

1.4153897998295089
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<324,333>

-------- No Patch ---------


-------- Similar Code ---------
label.append(MessageFormat.format(this.formatPattern,createItemArray(dataset,series)));
Integer key=new Integer(series);
List extraLabels=(List)this.seriesLabelLists.get(key);
if(extraLabels!=null){
Object[] temp=new Object[1];
for(int i=0;i<extraLabels.size();i++){
temp[0]=extraLabels.get(i);
String labelAddition=MessageFormat.format(this.additionalFormatPattern,temp);
label.append(labelAddition);
}
}
return label.toString();

1.414655578839507
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<142,155>

-------- No Patch ---------


-------- Similar Code ---------
if(maximum<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
this.maximumItemCount=maximum;
int count=this.data.size();
if(count>maximum){
delete(0,count-maximum);
}

1.4146504650267497
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<292,299>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=0){
xAxis=plot.getDomainAxisForDataset(index);
}

1.41304828221622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<927,929>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
return item.isSelected();

1.41304828221622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<396,397>

-------- No Patch ---------


-------- Similar Code ---------
if(i>pointCount-1){
TimeSeriesDataItem startOfMovingAvg=source.getRawDataItem(i-pointCount);
rollingSumForPeriod-=startOfMovingAvg.getValue().doubleValue();
result.add(period,rollingSumForPeriod/pointCount);
}else if(i==pointCount-1){
result.add(period,rollingSumForPeriod/pointCount);
}

1.4031100677018247
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<214,224>

-------- No Patch ---------


-------- Similar Code ---------
if(renderer.isSeriesVisible(i)&&renderer.isSeriesVisibleInLegend(i)){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}

1.400414859356549
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5407,5414>

-------- No Patch ---------


-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
int d=calendar.get(Calendar.DAY_OF_MONTH);
int m=calendar.get(Calendar.MONTH)+1;
int y=calendar.get(Calendar.YEAR);
this.serialDate=SerialDate.createInstance(d,m,y);
peg(calendar);

1.3990489238156751
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Day.java<162,174>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelBandsDimension,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelBandsDimension,edge);
}
double tickMarkSpace=0.0;
if(isTickMarksVisible()){
tickMarkSpace=getTickMarkOutsideLength();
}
if(this.minorTickMarksVisible){
tickMarkSpace=Math.max(tickMarkSpace,this.minorTickMarkOutsideLength);
}
space.add(tickMarkSpace,edge);
return space;

1.397539543698927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<626,645>

-------- No Patch ---------


-------- Similar Code ---------
if(Math.abs(angle2-angle1)>getMinimumArcAngleToDraw()){
arcList.add(new Arc2D.Double(arcX,arcY+depth,pieArea.getWidth(),pieArea.getHeight()-depth,angle1,angle2-angle1,Arc2D.PIE));
}else {
arcList.add(null);
}

1.3974313701768315
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<412,419>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<yOutliers.size();i++){
double outlier=((Number)yOutliers.get(i)).doubleValue();
if(outlier>boxAndWhiskerData.getMaxOutlier(series,item).doubleValue()){
outlierListCollection.setHighFarOut(true);
}else if(outlier<boxAndWhiskerData.getMinOutlier(series,item).doubleValue()){
outlierListCollection.setLowFarOut(true);
}else if(outlier>boxAndWhiskerData.getMaxRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}else if(outlier<boxAndWhiskerData.getMinRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}
Collections.sort(outliers);
}

1.3919800739135837
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<637,660>

-------- No Patch ---------


-------- Similar Code ---------
DefaultKeyedValues2D clone=(DefaultKeyedValues2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=(List)ObjectUtilities.deepClone(this.rows);
return clone;

1.3900425747778211
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<571,579>

-------- No Patch ---------


-------- Similar Code ---------
if(index<itemCount){
x=dataset.getXValue(series,index);
}

1.3884619704916663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<143,145>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getDomainAxis(index);
}

1.3884619704916663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<765,768>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}

1.3884619704916663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1046,1049>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getDomainAxis(index);
}

1.3884619704916663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<824,827>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getRangeAxis(index);
}

1.3884619704916663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1188,1191>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>item){
SelectableValue dataItem=(SelectableValue)this.data.getObject(item);
result=dataItem.getValue();
}

1.3872896571773798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<170,173>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
item.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.3868451170685372
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<405,409>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotArea[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotArea[i],subAnchor,parentState,subplotInfo);
}

1.3861995784249914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<368,381>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotAreas[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotAreas[i],subAnchor,parentState,subplotInfo);
}

1.3861995784249914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<466,479>

-------- No Patch ---------


-------- Similar Code ---------
CategoryAxis clone=(CategoryAxis)super.clone();
clone.tickLabelFontMap=new HashMap(this.tickLabelFontMap);
clone.tickLabelPaintMap=new HashMap(this.tickLabelPaintMap);
clone.categoryLabelToolTips=new HashMap(this.categoryLabelToolTips);
return clone;

1.3844496901391752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1291,1295>

-------- No Patch ---------


-------- Similar Code ---------
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

1.3748987982087733
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<232,240>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis result=plot.getRangeAxis(index);
if(result==null){
result=plot.getRangeAxis();
}
return result;

1.373519317034659
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1774,1778>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.367409338912719
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1728,1731>

-------- No Patch ---------


-------- Similar Code ---------
long start=period.getStart().getTime();
long end=period.getEnd().getTime();
long middle=start+((end-start)/2);
if(this.minStartIndex>=0){
long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
if(start<minStart){
this.minStartIndex=index;
}
}else {
this.minStartIndex=index;
}

1.3663088407552153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<259,272>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.3660517934511667
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<884,893>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.3660517934511667
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ValueAxis.java<811,818>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getDomainAxisLocation(index);
RectangleEdge result=Plot.resolveDomainAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getDomainAxisEdge());
}
return result;

1.36251931379151
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1068,1074>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge());
}
return result;

1.36251931379151
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1368,1374>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1736,1739>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1740,1743>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1744,1747>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<202,204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<247,249>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<302,304>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendLabelURLGenerator instanceof PublicCloneable){
clone.legendLabelURLGenerator=(PieURLGenerator)ObjectUtilities.clone(this.legendLabelURLGenerator);
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3653,3656>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<206,208>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawingSupplier instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.drawingSupplier;
try{
result=(DrawingSupplier)pc.clone();
}catch (CloneNotSupportedException e) {
  e.printStackTrace();
}

}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/StandardChartTheme.java<1102,1110>

-------- No Patch ---------


-------- Similar Code ---------
if(value/total<minimumPercent){
otherKeys.add(currentKey);
}

1.3623982906752206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<321,323>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemLabelGenerator generator=(CategoryItemLabelGenerator)this.itemLabelGeneratorList.get(row);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<316,321>

-------- No Patch ---------


-------- Similar Code ---------
CategoryURLGenerator generator=(CategoryURLGenerator)this.urlGeneratorList.get(row);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<547,552>

-------- No Patch ---------


-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RenderAttributes.java<377,381>

-------- No Patch ---------


-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.positiveItemLabelPositionList.get(series);
if(position==null){
position=this.basePositiveItemLabelPosition;
}
return position;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2127,2132>

-------- No Patch ---------


-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.negativeItemLabelPositionList.get(series);
if(position==null){
position=this.baseNegativeItemLabelPosition;
}
return position;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2247,2252>

-------- No Patch ---------


-------- Similar Code ---------
XYItemLabelGenerator generator=(XYItemLabelGenerator)this.itemLabelGeneratorList.get(series);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<353,358>

-------- No Patch ---------


-------- Similar Code ---------
XYToolTipGenerator generator=(XYToolTipGenerator)this.toolTipGeneratorList.get(series);
if(generator==null){
generator=this.baseToolTipGenerator;
}
return generator;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<465,470>

-------- No Patch ---------


-------- Similar Code ---------
XYURLGenerator generator=(XYURLGenerator)this.urlGeneratorList.get(series);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<573,578>

-------- No Patch ---------


-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.3608933667042176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieSelectionAttributes.java<240,244>

-------- No Patch ---------


-------- Similar Code ---------
int index=indexOf(x);
if(index<0){
throw new SeriesException("No observation for x = "+x);
}else {
updateByIndex(index,y);
}

1.3603584574678491
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<745,751>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseShape!=null){
clone.baseShape=ShapeUtilities.clone(this.baseShape);
}

1.3593643549026022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3205,3207>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderer!=null){
clone.renderer=(PolarItemRenderer)ObjectUtilities.clone(this.renderer);
}

1.3593643549026022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1073,1076>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge(0));
}
return result;

1.357036957094591
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1254,1260>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex>0){
String key=line.substring(start,i);
keys.add(removeStringDelimiters(key));
}
start=i+1;
fieldIndex++;
}
}
String key=line.substring(start,line.length());
keys.add(removeStringDelimiters(key));
return keys;

1.3558955162621118
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<126,139>

-------- No Patch ---------


-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.3558473801618902
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4543,4545>

-------- No Patch ---------


-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.3558473801618902
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4560,4562>

-------- No Patch ---------


-------- Similar Code ---------
if(a instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(a);
}

1.3558473801618902
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4598,4600>

-------- No Patch ---------


-------- Similar Code ---------
this.maximumItemCount=maximum;
int remove=this.data.size()-maximum;
if(remove>0){
this.data.subList(0,remove).clear();
findBoundsByIteration();
fireSeriesChanged();
}

1.3555106018402614
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<384,390>

-------- No Patch ---------


-------- Similar Code ---------
if(pos==position){
this.keys.set(pos,key);
this.values.set(pos,value);
}else {
if(pos>=0){
this.keys.remove(pos);
this.values.remove(pos);
}
this.keys.add(position,key);
this.values.add(position,value);
rebuildIndex();
}

1.355297840126772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<277,290>

-------- No Patch ---------


-------- Similar Code ---------
PiePlotState state=super.initialise(g2,plotArea,plot,index,info);
state.setPassesRequired(3);
return state;

1.3531415289335018
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<323,325>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
 final Object object=get(i);
if(object!=null&&object instanceof Serializable){
stream.writeInt(i);
stream.writeObject(object);
}else {
stream.writeInt(-1);
}
}

1.3524358949279915
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<255,267>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
 final int index=stream.readInt();
if(index!=-1){
setPaint(index,SerialUtilities.readPaint(stream));
}
}

1.3517470760277535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<171,176>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setShape(index,SerialUtilities.readShape(stream));
}
}

1.3517470760277535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ShapeList.java<169,174>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setStroke(index,SerialUtilities.readStroke(stream));
}
}

1.3517470760277535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/StrokeList.java<166,171>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int i=datasetCount-1;i>=0;i--){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,state);
}
}
for(int i=this.datasets.size()-1;i>=0;i--){
foundData=render(g2,dataArea,i,state,crosshairState)||foundData;
}

1.34938235428761
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3744,3758>

-------- No Patch ---------


-------- Similar Code ---------
int result=127;
int size=size();
result=HashUtilities.hashCode(result,size());
if(size>0){
result=HashUtilities.hashCode(result,this.objects[0]);
if(size>1){
result=HashUtilities.hashCode(result,this.objects[size-1]);
if(size>2){
result=HashUtilities.hashCode(result,this.objects[size/2]);
}
}
}
return result;

1.3484010999079077
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<206,221>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
int index=rowData.getIndex(columnKey);
if(index>=0){
rowData.removeValue(columnKey);
}
}

1.3448898793049724
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<475,481>

-------- No Patch ---------


-------- Similar Code ---------
case 0 :
setSeriesNeedle(index,new ArrowNeedle(true));
setSeriesPaint(index,Color.red);
this.seriesNeedle[index].setHighlightPaint(Color.white);
break;

case 1 :


1.344196853776552
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<446,451>


-------- Patch ---------
case 1 :

if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
TimeSeriesDataItem item=series.getRawDataItem(i);
TimeSeriesDataItem oldItem=addOrUpdate(item.getPeriod(),item.getValue());
if(oldItem!=null){
overwritten.add(oldItem);
}
}

1.3431867711429466
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<753,760>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
double x=(bin.getStartBoundary()+bin.getEndBoundary())/2.0;
return new Double(x);

1.342663898129781
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<356,359>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipGeneratorList!=null){
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1703,1706>

-------- No Patch ---------


-------- Similar Code ---------
if(this.urlGeneratorList!=null){
clone.urlGeneratorList=(ObjectList)this.urlGeneratorList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1721,1723>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlinePaintList!=null){
clone.outlinePaintList=(PaintList)this.outlinePaintList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3184,3186>

-------- No Patch ---------


-------- Similar Code ---------
if(this.strokeList!=null){
clone.strokeList=(StrokeList)this.strokeList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3190,3192>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlineStrokeList!=null){
clone.outlineStrokeList=(StrokeList)this.outlineStrokeList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3196,3199>

-------- No Patch ---------


-------- Similar Code ---------
if(this.shapeList!=null){
clone.shapeList=(ShapeList)this.shapeList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3202,3204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelsVisibleList!=null){
clone.itemLabelsVisibleList=(BooleanList)this.itemLabelsVisibleList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3210,3213>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelFontList!=null){
clone.itemLabelFontList=(ObjectList)this.itemLabelFontList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3217,3220>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelPaintList!=null){
clone.itemLabelPaintList=(PaintList)this.itemLabelPaintList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3224,3227>

-------- No Patch ---------


-------- Similar Code ---------
if(this.positiveItemLabelPositionList!=null){
clone.positiveItemLabelPositionList=(ObjectList)this.positiveItemLabelPositionList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3231,3234>

-------- No Patch ---------


-------- Similar Code ---------
if(this.negativeItemLabelPositionList!=null){
clone.negativeItemLabelPositionList=(ObjectList)this.negativeItemLabelPositionList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3238,3241>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendShapeList!=null){
clone.legendShapeList=(ShapeList)this.legendShapeList.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3249,3251>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3252,3254>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3255,3257>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(XYPlot)this.subplots.get(subplotIndex);
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<529,531>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedLegendItems!=null){
clone.fixedLegendItems=(LegendItemCollection)this.fixedLegendItems.clone();
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5163,5166>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(XYPlot)this.subplots.get(subplotIndex);
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<580,582>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(CategoryPlot)this.subplots.get(subplotIndex);
}

1.3424600469221026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<256,258>

-------- No Patch ---------


-------- Similar Code ---------
String strToReturn;
try{
strToReturn=(String)this.symbols.get((int)value);
}catch (IndexOutOfBoundsException ex) {
  strToReturn="";
}

return strToReturn;

1.338623494089377
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<753,760>

-------- No Patch ---------


-------- Similar Code ---------
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

1.338312554737832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<341,343>

-------- No Patch ---------


-------- Similar Code ---------
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

1.338312554737832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<288,290>

-------- No Patch ---------


-------- Similar Code ---------
{
String line=input.substring(start,index);
if(index<input.length()-1){
result.addLine(line,font,paint);
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}

1.3365225166286083
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<125,134>

-------- No Patch ---------


-------- Similar Code ---------
legendItem.add(lg,this.legendItemGraphicEdge);
Font textFont=item.getLabelFont();
if(textFont==null){
textFont=this.itemFont;
}
Paint textPaint=item.getLabelPaint();
if(textPaint==null){
textPaint=this.itemPaint;
}
LabelBlock labelBlock=new LabelBlock(item.getLabel(),textFont,textPaint);
labelBlock.setPadding(this.itemLabelPadding);

1.3354351316166218
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<451,462>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMean();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<357,363>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMean();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<377,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMedian();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<397,403>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMedian();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<417,423>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ1();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<437,443>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ1();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<457,463>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ3();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<477,483>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ3();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<497,503>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<654,660>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<674,680>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<694,700>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<714,720>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<734,740>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<754,760>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<774,780>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<794,800>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getOutliers();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<814,820>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getOutliers();
}
return result;

1.3339747750586295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<834,840>

-------- No Patch ---------


-------- Similar Code ---------
{
 final PublicCloneable pc=(PublicCloneable)object;
return pc.clone();
}

1.3332402438829125
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ObjectUtilities.java<165,168>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.3312923448825207
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<523,536>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.3312923448825207
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<722,735>

-------- No Patch ---------


-------- Similar Code ---------
if(vlist.size()>0){
double maxval=Double.NEGATIVE_INFINITY;
double minval=Double.POSITIVE_INFINITY;
for(int i=0;i<vlist.size();i++){
Number n=(Number)vlist.get(i);
double v=n.doubleValue();
minval=Math.min(minval,v);
maxval=Math.max(maxval,v);
}
if(this.maximumRangeValue==null){
this.maximumRangeValue=new Double(maxval);
}else if(maxval>this.maximumRangeValue.doubleValue()){
this.maximumRangeValue=new Double(maxval);
}
if(this.minimumRangeValue==null){
this.minimumRangeValue=new Double(minval);
}else if(minval<this.minimumRangeValue.doubleValue()){
this.minimumRangeValue=new Double(minval);
}
this.rangeBounds=new Range(this.minimumRangeValue.doubleValue(),this.maximumRangeValue.doubleValue());
}

1.3311391511338915
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<130,156>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
minval=Math.min(Double.POSITIVE_INFINITY,clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
maxval=Math.max(Double.NEGATIVE_INFINITY,clone);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
minval=Math.min(Double.POSITIVE_INFINITY,clone);
maxval=Math.max(Double.NEGATIVE_INFINITY,clone);

TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data.size();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<data;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Size2D[] sizes=new Size2D[blocks.size()];
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
width=width+sizes[i].getWidth();
maxHeight=Math.max(sizes[i].height,maxHeight);
block.setBounds(new Rectangle2D.Double(x,0.0,sizes[i].width,sizes[i].height));
x=x+sizes[i].width;
}
if(blockCount>1){
width=width+this.horizontalGap*(blockCount-1);
}

1.3258925928522842
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<363,378>

-------- No Patch ---------


-------- Similar Code ---------
Size2D[] sizes=new Size2D[blocks.size()];
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
height=height+sizes[i].getHeight();
maxWidth=Math.max(sizes[i].width,maxWidth);
block.setBounds(new Rectangle2D.Double(0.0,y,sizes[i].width,sizes[i].height));
y=y+sizes[i].height;
}
if(blockCount>1){
height=height+this.verticalGap*(blockCount-1);
}

1.3258925928522842
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<318,333>

-------- No Patch ---------


-------- Similar Code ---------
List result=new ArrayList();
result.add(this.defaultGroup);
Iterator iterator=this.groups.iterator();
while(iterator.hasNext()){
Comparable group=(Comparable)iterator.next();
if(!result.contains(group)){
result.add(group);
}
}
return result;

1.32502267614566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<116,125>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=cloneMarkerMap(this.backgroundRangeMarkers);

1.3238805238972111
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5145,5162>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
clone.foregroundDomainMarkers=cloneMarkerMap(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=cloneMarkerMap(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=cloneMarkerMap(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=cloneMarkerMap(this.backgroundRangeMarkers);

1.3238805238972111
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5145,5162>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge result=null;
AxisLocation location=getDomainAxisLocation(index);
if(location!=null){
result=Plot.resolveDomainAxisLocation(location,this.orientation);
}else {
result=RectangleEdge.opposite(getDomainAxisEdge(0));
}
return result;

1.3238316602399391
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<974,982>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getColumnKey(index);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getRowKey(index);
}

1.3234124278744834
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<204,209>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<yOutliers.size();i++){
double outlier=((Number)yOutliers.get(i)).doubleValue();
Number minOutlier=bawDataset.getMinOutlier(row,column);
Number maxOutlier=bawDataset.getMaxOutlier(row,column);
Number minRegular=bawDataset.getMinRegularValue(row,column);
Number maxRegular=bawDataset.getMaxRegularValue(row,column);
if(outlier>maxOutlier.doubleValue()){
outlierListCollection.setHighFarOut(true);
}else if(outlier<minOutlier.doubleValue()){
outlierListCollection.setLowFarOut(true);
}else if(outlier>maxRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}else if(outlier<minRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}
Collections.sort(outliers);
}

1.3222924498763673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java<801,826>

-------- No Patch ---------


-------- Similar Code ---------
if(index==start){
if(index<input.length()-1){
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}else {
result.addLine(input,font,paint);
moreInputToProcess=false;
}

1.3222539954874757
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<135,146>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem item=getRawDataItem(index);
boolean iterate=false;
double oldY=item.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
item.setY(y);
if(iterate){
findBoundsByIteration();
}else if(y!=null){
double yy=y.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=maxIgnoreNaN(this.maxY,yy);
}

1.321092485050985
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<668,685>

-------- No Patch ---------


-------- Similar Code ---------
if(b_colinear){
l_minuendXs.clear();
l_minuendYs.clear();
l_subtrahendXs.clear();
l_subtrahendYs.clear();
l_polygonXs.clear();
l_polygonYs.clear();
b_colinear=false;
boolean b_useMinuend=((l_x3<=l_x1)&&(l_x1<=l_x4));
l_polygonXs.add(b_useMinuend?l_minuendCurX:l_subtrahendCurX);
l_polygonYs.add(b_useMinuend?l_minuendCurY:l_subtrahendCurY);
}

1.3204007623043108
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<664,682>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.size;index++){
if(this.objects[index]==object){
return (index);
}
}

1.3181334521300085
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<161,165>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<rendererCount;i++){
CategoryItemRenderer renderer=(CategoryItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.3177762248019245
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5264,5270>

-------- No Patch ---------


-------- Similar Code ---------
if(otherKeys.size()>=minItems){
result.setValue(key,otherValue);
}

1.3158820457413858
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<346,348>

-------- No Patch ---------


-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(sectionIndex);
if(arc==null){
continue;
}
upperArc=new Arc2D.Double(arcX,arcY,pieArea.getWidth(),pieArea.getHeight()-depth,arc.getAngleStart(),arc.getAngleExtent(),Arc2D.PIE);
Comparable currentKey=(Comparable)sectionKeys.get(sectionIndex);
paint=lookupSectionPaint(currentKey,true);
outlinePaint=lookupSectionOutlinePaint(currentKey,false);
outlineStroke=lookupSectionOutlineStroke(currentKey,false);
g2.setPaint(paint);

1.315866961319219
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<534,546>

-------- No Patch ---------


-------- Similar Code ---------
if(this.plot!=null){
chart.plot=(Plot)this.plot.clone();
chart.plot.addChangeListener(chart);
}

1.3153551639147971
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1732,1735>

-------- No Patch ---------


-------- Similar Code ---------
if(data instanceof YisSymbolic){
yStr=((YisSymbolic)data).getYSymbolicValue(series,item);
}else {
double y=data.getYValue(series,item);
yStr=Double.toString(round(y,2));
}

1.3136711992224142
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<84,90>

-------- No Patch ---------


-------- Similar Code ---------
this.dates.add(date);
this.items.add(item);
if(this.minimumRangeValue==null){
this.minimumRangeValue=item.getMinRegularValue();
}else {
if(item.getMinRegularValue().doubleValue()<this.minimumRangeValue.doubleValue()){
this.minimumRangeValue=item.getMinRegularValue();
}
}
if(this.maximumRangeValue==null){
this.maximumRangeValue=item.getMaxRegularValue();
}else {
if(item.getMaxRegularValue().doubleValue()>this.maximumRangeValue.doubleValue()){
this.maximumRangeValue=item.getMaxRegularValue();
}
}

1.3133861194586416
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<224,243>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.3132708908286563
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<175,179>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.3132708908286563
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<176,180>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
entities.add(new AxisLabelEntity(this,hotspot,this.labelToolTip,this.labelURL));
}

1.3131325355599617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1388,1391>

-------- No Patch ---------


-------- Similar Code ---------
if(e!=null){
e.add(new PlotEntity(dataArea,this,toolTip,urlText));
}

1.3131325355599617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1176,1178>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=(Number)this.seriesBarWidthList.get(series);
if(n!=null){
result=n.doubleValue();
}
return result;

1.312364327481614
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LayeredBarRenderer.java<109,114>

-------- No Patch ---------


-------- Similar Code ---------
List result=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
result.add(ko.getKey());
}
return result;

1.312212345574654
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<154,160>

-------- No Patch ---------


-------- Similar Code ---------
boolean allNull=true;
int rowIndex=getRowIndex(rowKey);
DefaultKeyedValues row=(DefaultKeyedValues)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getValue(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}

1.3103436977394314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<360,375>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Object obj=iterator.next();
if(obj instanceof Number){
Number n=(Number)obj;
double v=n.doubleValue();
if(!Double.isNaN(v)){
vlist.add(n);
}
}
}
Collections.sort(vlist);
this.data.addObject(vlist,rowKey,columnKey);

1.3079474239731215
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<117,128>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,keyIndex);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(keyIndex,this.index);
}

1.3071904418591238
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<268,273>

-------- No Patch ---------


-------- Similar Code ---------
setObject(null,rowKey,columnKey);
boolean allNull=true;
KeyedObjects row=(KeyedObjects)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getObject(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}

1.3041978766026245
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<315,332>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
Number z=series.getItem(itemIndex);
return z;

1.3030830473173183
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<198,200>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double value=dataset.getYValue(i,index);
if(!Double.isNaN(value)){
result+=value;
}
}

1.302006916573514
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<600,605>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.3007095408703635
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4823,4841>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
if(useAnchor){
double sourceX=source.getX();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceX=source.getY();
}
double anchorX=domainAxis.java2DToValue(sourceX,info.getDataArea(),getDomainAxisEdge());
domainAxis.resizeRange2(factor,anchorX);
}else {
domainAxis.resizeRange(factor);
}
}
}

1.3007095408703635
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5202,5220>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.3007095408703635
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5279,5297>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(CategoryItemLabelGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("ItemLabelGenerator not cloneable.");
}

1.299067503302809
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1691,1700>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(CategoryToolTipGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base tool tip generator not cloneable.");
}

1.299067503302809
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1709,1718>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseURLGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseURLGenerator;
clone.baseURLGenerator=(CategoryURLGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base item URL generator not cloneable.");
}

1.299067503302809
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1726,1733>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.seriesList.add(series);
series.addChangeListener(this);
}

1.2939218741104048
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<88,91>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}

1.2937633977125855
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<126,130>

-------- No Patch ---------


-------- Similar Code ---------
if(start>=end){
throw new IllegalArgumentException("Requires \'start\' < \'end\'.");
}
if(samples<2){
throw new IllegalArgumentException("Requires \'samples\' > 1");
}
XYSeries series=new XYSeries(seriesKey);
double step=(end-start)/(samples-1);
for(int i=0;i<samples;i++){
double x=start+(step*i);
series.add(x,f.getValue(x));
}
return series;

1.2934642246474115
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<540,553>

-------- No Patch ---------


-------- Similar Code ---------
int seriesCount=data.length;
List seriesNameList=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
seriesNameList.add("Series "+(i+1));
}
return seriesNameList;

1.2915759546655978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<282,287>

-------- No Patch ---------


-------- Similar Code ---------
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.2906580701235975
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<522,541>

-------- No Patch ---------


-------- Similar Code ---------
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.2906580701235975
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<574,593>

-------- No Patch ---------


-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.2887961904367145
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<142,146>

-------- No Patch ---------


-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.2887961904367145
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<132,136>

-------- No Patch ---------


-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastY=y;
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
currentTickValue+=unit;

1.2882435800600343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<711,726>

-------- No Patch ---------


-------- Similar Code ---------
XYDataset existing=getDataset(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.2852629651744225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1428,1441>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultReadObject();
this.objects=new Object[this.size];
int count=stream.readInt();
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
set(index,stream.readObject());
}
}

1.285024136979331
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<282,290>

-------- No Patch ---------


-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.284817782296107
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4605,4607>

-------- No Patch ---------


-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.284817782296107
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<574,576>

-------- No Patch ---------


-------- Similar Code ---------
if(!this.defaultGroup.equals(group)){
this.groups.add(group);
}

1.284817782296107
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<194,196>

-------- No Patch ---------


-------- Similar Code ---------
if(this.explodePercentages!=null){
Number percent=(Number)this.explodePercentages.get(key);
if(percent!=null){
result=percent.doubleValue();
}
}

1.281387509027024
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<1610,1615>

-------- No Patch ---------


-------- Similar Code ---------
if(!seriesXPoints.contains(xPoint)){
series.add(xPoint,null);
}

1.2789126781607632
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<192,194>

-------- No Patch ---------


-------- Similar Code ---------
if(key.equals(this.aggregatedItemsKey)){
p=this.aggregatedItemsPaint;
}else {
p=(Paint)this.sectionPaints.get(key);
}

1.2784977188038757
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<480,485>

-------- No Patch ---------


-------- Similar Code ---------
XYToolTipGenerator generator=getToolTipGenerator(series,item,selected);
if(generator!=null){
tip=generator.generateToolTip(dataset,series,item);
}
String url=null;
XYURLGenerator urlster=getURLGenerator(series,item,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,series,item);
}
XYItemEntity entity=new XYItemEntity(hotspot,dataset,series,item,tip,url);
entities.add(entity);

1.277273982215966
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1997,2009>

-------- No Patch ---------


-------- Similar Code ---------
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
Comparable result=this.defaultGroup;
Comparable group=(Comparable)this.keyToGroupMap.get(key);
if(group!=null){
result=group;
}
return result;

1.2759897056501124
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<158,166>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Task t=(Task)this.tasks.get(i);
if(t.getDescription().equals(description)){
result=t;
break;
}
}

1.275832244777917
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<142,148>

-------- No Patch ---------


-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
int min=calendar.get(Calendar.MINUTE);
this.minute=(byte)min;
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.2753862338557975
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Minute.java<146,158>

-------- No Patch ---------


-------- Similar Code ---------
this.calendar.setTime(date);
int year=this.calendar.get(Calendar.YEAR);
int month=this.calendar.get(Calendar.MONTH);
int quarter=month/3;
if(this.quarterFirst){
toAppendTo.append(this.quarters[quarter]);
toAppendTo.append(" ");
toAppendTo.append(year);
}else {
toAppendTo.append(year);
toAppendTo.append(" ");
toAppendTo.append(this.quarters[quarter]);
}

1.2718972064410998
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/QuarterDateFormat.java<154,167>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=entityCount-1;i>=0;i--){
ChartEntity entity=(ChartEntity)this.entities.get(i);
if(entity.getArea().contains(x,y)){
return entity;
}
}

1.2712499435869797
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<143,148>

-------- No Patch ---------


-------- Similar Code ---------
Map clone=new HashMap();
Set keys=map.keySet();
Iterator iterator=keys.iterator();
while(iterator.hasNext()){
Object key=iterator.next();
List entry=(List)map.get(key);
Object toAdd=ObjectUtilities.deepClone(entry);
clone.put(key,toAdd);
}
return clone;

1.2695510446140161
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5182,5191>

-------- No Patch ---------


-------- Similar Code ---------
if(copy){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem copyItem=new JMenuItem(localizationResources.getString("Copy"));
copyItem.setActionCommand(COPY_COMMAND);
copyItem.addActionListener(this);
result.add(copyItem);
separator=!save;
}

1.2675132932144981
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2745,2756>

-------- No Patch ---------


-------- Similar Code ---------
if(!urls[i].sameFile(codeBase)){
urlsNoBase.add(urls[i]);
}

1.2672865061144751
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ResourceBundleWrapper.java<102,104>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRenderer existing=getRenderer(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

1.265220827921684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1658,1671>


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
configureDomainAxes();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
configureRangeAxes();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
invalidateRangeInfo();
if(seriesNumber>=this.valueHistory.length){
throw new IllegalArgumentException("TimeSeriesDataset.addValue(): series #"+seriesNumber);
}
if(this.valueHistory[seriesNumber]==null){
this.valueHistory[seriesNumber]=new ValueSequence(this.historyCount);
this.seriesCount++;
}
this.valueHistory[seriesNumber].enterData(index,value);
fireSeriesChanged();

1.264654970684533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<449,466>

-------- No Patch ---------


-------- Similar Code ---------
this.availableMouseHandlers.add(zoomHandler);
PanHandler panHandler=new PanHandler();
int panMask=InputEvent.CTRL_MASK;
String osName=System.getProperty("os.name").toLowerCase();
if(osName.startsWith("mac os x")){
panMask=InputEvent.ALT_MASK;
}
panHandler.setModifier(panMask);
this.availableMouseHandlers.add(panHandler);
this.auxiliaryMouseHandlers=new java.util.ArrayList();

1.2637376304938628
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<792,804>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subHandlers.size()>0){
Object top=this.subHandlers.peek();
if(top!=null){
result=(DefaultHandler)top;
}
}

1.262751729476036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/RootHandler.java<97,102>

-------- No Patch ---------


-------- Similar Code ---------
if(entity!=null){
StandardEntityCollection sec=new StandardEntityCollection();
sec.add(entity);
result.setEntityCollection(sec);
}

1.2623409567492605
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/TextTitle.java<723,727>

-------- No Patch ---------


-------- Similar Code ---------
Tick tick=new DateTick(tickDate,tickLabel,anchor,rotationAnchor,angle);
result.add(tick);
long currentTickTime=tickDate.getTime();
tickDate=unit.addToDate(tickDate,this.timeZone);
long nextTickTime=tickDate.getTime();
for(int minorTick=1;minorTick<minorTickSpaces;minorTick++){
long minorTickTime=currentTickTime+(nextTickTime-currentTickTime)*minorTick/minorTickSpaces;
if(getRange().contains(minorTickTime)&&(!isHiddenValue(minorTickTime))){
result.add(new DateTick(TickType.MINOR,new Date(minorTickTime),"",TextAnchor.TOP_CENTER,TextAnchor.CENTER,0.0));
}
}

1.2616980065931
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1673,1692>

-------- No Patch ---------


-------- Similar Code ---------
Tick tick=new DateTick(tickDate,tickLabel,anchor,rotationAnchor,angle);
result.add(tick);
long currentTickTime=tickDate.getTime();
tickDate=unit.addToDate(tickDate,this.timeZone);
long nextTickTime=tickDate.getTime();
for(int minorTick=1;minorTick<minorTickSpaces;minorTick++){
long minorTickTime=currentTickTime+(nextTickTime-currentTickTime)*minorTick/minorTickSpaces;
if(getRange().contains(minorTickTime)&&(!isHiddenValue(minorTickTime))){
result.add(new DateTick(TickType.MINOR,new Date(minorTickTime),"",TextAnchor.TOP_CENTER,TextAnchor.CENTER,0.0));
}
}

1.2616980065931
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1786,1804>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis existing=getDomainAxis(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.domainAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.2599190408264582
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<870,884>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ValueAxis existing=getRangeAxis(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.rangeAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.2599190408264582
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1220,1234>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
this.copy.set(clone,data);
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<values.length;i++){
int binIndex=bins-1;
if(values[i]<maximum){
double fraction=(values[i]-minimum)/(maximum-minimum);
if(fraction<0.0){
fraction=0.0;
}
binIndex=(int)(fraction*bins);
if(binIndex>=bins){
binIndex=bins-1;
}
}
HistogramBin bin=(HistogramBin)binList.get(binIndex);
bin.incrementCount();
}
Map map=new HashMap();
map.put("key",key);
map.put("bins",binList);
map.put("values.length",new Integer(values.length));
map.put("bin width",new Double(binWidth));
this.list.add(map);

1.2585991006817387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<189,213>

-------- No Patch ---------


-------- Similar Code ---------
Title duplicate=(Title)super.clone();
duplicate.listenerList=new EventListenerList();
return duplicate;

1.2541247355553724
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/Title.java<362,365>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int x=series.getItemColumn(itemIndex);
return new Integer(x);

1.2509481812914978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<160,163>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int y=series.getItemRow(itemIndex);
return new Integer(y);

1.2509481812914978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<179,182>

-------- No Patch ---------


-------- Similar Code ---------
int result=127;
int size=size();
result=HashUtilities.hashCode(result,size());
if(size>0){
result=HashUtilities.hashCode(result,getPaint(0));
if(size>1){
result=HashUtilities.hashCode(result,getPaint(size-1));
if(size>2){
result=HashUtilities.hashCode(result,getPaint(size/2));
}
}
}
return result;

1.2491911846518216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<116,130>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlierLists.isEmpty()){
return this.outlierLists.add(new OutlierList(outlier));
}else {
boolean updated=false;
for(Iterator iterator=this.outlierLists.iterator();iterator.hasNext();){
OutlierList list=(OutlierList)iterator.next();
if(list.isOverlapped(outlier)){
updated=updateOutlierList(list,outlier);
}
}
if(!updated){
updated=this.outlierLists.add(new OutlierList(outlier));
}
return updated;
}

1.2473629388210314
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<137,154>

-------- No Patch ---------


-------- Similar Code ---------
MeanAndStandardDeviation item=new MeanAndStandardDeviation(mean,standardDeviation);
this.data.addObject(item,rowKey,columnKey);
double m=Double.NaN;
double sd=Double.NaN;
if(mean!=null){
m=mean.doubleValue();
}
if(standardDeviation!=null){
sd=standardDeviation.doubleValue();
}
int r=this.data.getColumnIndex(columnKey);

1.2445060319074996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<351,365>

-------- No Patch ---------


-------- Similar Code ---------
int index=getColumnIndex(columnKey);
if(index<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects rowData=(KeyedObjects)iterator.next();
int i=rowData.getIndex(columnKey);
if(i>=0){
rowData.removeValue(i);
}
}
this.columnKeys.remove(columnKey);

1.243157612749214
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<412,425>

-------- No Patch ---------


-------- Similar Code ---------
if(this.markers.size()>0){
LineMetrics metrics=this.font.getLineMetrics("123g",g2.getFontRenderContext());
result=this.topOuterGap+this.topInnerGap;
}

1.242628780806983
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MarkerAxisBand.java<139,145>

-------- No Patch ---------


-------- Similar Code ---------
g2.clip(dataArea);
drawDomainGridlines(g2,dataArea);
AxisState rangeAxisState=(AxisState)axisStateMap.get(getRangeAxis());
if(rangeAxisState==null){
if(parentState!=null){
rangeAxisState=(AxisState)parentState.getSharedAxisStates().get(getRangeAxis());
}
}
if(rangeAxisState!=null){
drawRangeGridlines(g2,dataArea,rangeAxisState.getTicks());
drawZeroRangeBaseline(g2,dataArea);
}

1.240770822213665
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3666,3680>

-------- No Patch ---------


-------- Similar Code ---------
if(this.minMiddleIndex>=0){
long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long minMiddle=s+(e-s)/2;
if(middle<minMiddle){
this.minMiddleIndex=index;
}
}else {
this.minMiddleIndex=index;
}

1.240320778112178
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

1.240320778112178
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<299,311>

-------- No Patch ---------


-------- Similar Code ---------
if(data instanceof XisSymbolic){
xStr=((XisSymbolic)data).getXSymbolicValue(series,item);
}else if(data instanceof TimeSeriesCollection){
RegularTimePeriod p=((TimeSeriesCollection)data).getSeries(series).getTimePeriod(item);
xStr=p.toString();
}else {
double x=data.getXValue(series,item);
xStr=Double.toString(round(x,2));
}

1.2392442499394036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<91,103>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex==0){
String key=line.substring(start,i);
rowKey=removeStringDelimiters(key);
}else {
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,i)));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));
}
start=i+1;
fieldIndex++;
}
}
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,line.length())));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));

1.2392325635054595
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<155,179>

-------- No Patch ---------


-------- Similar Code ---------
if(obj instanceof PaintList){
PaintList that=(PaintList)obj;
int listSize=size();
for(int i=0;i<listSize;i++){
if(!PaintUtilities.equal(getPaint(i),that.getPaint(i))){
return false;
}
}
}

1.2373302292268222
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<98,106>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,index);
if(!Double.isNaN(v)){
if(v>=0.0){
result[1]+=v;
}else {
result[0]+=v;
}
}
}

1.2372739981798162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<469,479>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<bins;i++){
HistogramBin bin;
if(i==bins-1){
bin=new HistogramBin(lower,maximum);
}else {
upper=minimum+(i+1)*binWidth;
bin=new HistogramBin(lower,upper);
lower=upper;
}
binList.add(bin);
}

1.2372578802763
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<173,187>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis yAxis=getRangeAxisForDataset(index);
if(xAxis==null||yAxis==null){
return foundData;
}
XYItemRenderer renderer=getRenderer(index);
if(renderer==null){
renderer=getRenderer();
if(renderer==null){
return foundData;
}
}
XYItemRendererState state=renderer.initialise(g2,dataArea,this,dataset,info);

1.2334976389998078
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3814,3827>

-------- No Patch ---------


-------- Similar Code ---------
if(map==null){
out.writeBoolean(true);
}else {
out.writeBoolean(false);
Set keys=map.keySet();
int count=keys.size();
out.writeInt(count);
Iterator iterator=keys.iterator();
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
out.writeObject(key);
SerialUtilities.writePaint((Paint)map.get(key),out);
}
}

1.2332057829479839
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1433,1447>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.labels.size();i++){
PieLabelRecord plr=getPieLabelRecord(i);
if(y>plr.getLowerY()){
return true;
}
y=plr.getUpperY();
}

1.2323317667079285
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<99,105>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipText!=null||this.urlText!=null){
ChartEntity entity=new ChartEntity(entityArea,this.toolTipText,this.urlText);
sec.add(entity);
result=new BlockResult();
result.setEntityCollection(sec);
}

1.2321969378971063
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/LabelBlock.java<364,370>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
double total=getTotal(series);
double binWidth=getBinWidth(series);
if(this.type==HistogramType.FREQUENCY){
return new Double(bin.getCount());
}else if(this.type==HistogramType.RELATIVE_FREQUENCY){
return new Double(bin.getCount()/total);
}else if(this.type==HistogramType.SCALE_AREA_TO_1){
return new Double(bin.getCount()/(binWidth*total));
}else {
throw new IllegalStateException();
}

1.2320552509722806
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<376,392>

-------- No Patch ---------


-------- Similar Code ---------
if(visibleRow<0){
return ;
}
int visibleRowCount=state.getVisibleSeriesCount();
PlotOrientation orientation=plot.getOrientation();
MultiValueCategoryDataset d=(MultiValueCategoryDataset)dataset;
List values=d.getValues(row,column);
if(values==null){
return ;
}
int valueCount=values.size();

1.2320218305814639
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<396,408>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getDomainMarkers(index,layer);
CategoryAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
CategoryMarker marker=(CategoryMarker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.2309849920267464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4200,4213>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.2309849920267464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4231,4244>

-------- No Patch ---------


-------- Similar Code ---------
boolean result=false;
result=list.add(outlier);
list.updateAveragedOutlier();
list.setMultiple(true);
return result;

1.2304724585719473
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<179,183>

-------- No Patch ---------


-------- Similar Code ---------
{
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
CategoryDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
CategoryItemRenderer renderer=getRendererForDataset(dataset);
CategoryItemRendererState rs=renderer.initialise(g2,dataArea,this,dataset,null);
int rowCount=dataset.getRowCount();
int columnCount=dataset.getColumnCount();
for(int r=0;r<rowCount;r++){
for(int c=0;c<columnCount;c++){
if(renderer.hitTest(x,y,null,dataArea,this,getDomainAxisForDataset(d),getRangeAxisForDataset(d),dataset,r,c,false,rs)){
state.setSelected(r,c,!state.isSelected(r,c));
}
}
}
}
}

1.2289497798669096
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5310,5340>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}

1.2257649336012655
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1069,1071>

-------- No Patch ---------


-------- Similar Code ---------
if(otherKeys.contains(currentKey)&&otherKeys.size()>=minItems){
otherValue+=dataValue.doubleValue();
}else {
result.setValue(currentKey,dataValue);
}

1.22409108124767
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<334,342>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tip=null;
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,key);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,key,this.pieIndex);
}
PieSectionEntity entity=new PieSectionEntity(arc,this.dataset,this.pieIndex,section,key,tip,url);
entities.add(entity);
}

1.2238611085050515
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<2701,2716>

-------- No Patch ---------


-------- Similar Code ---------
if(info==null){
return ;
}
EntityCollection entities=info.getOwner().getEntityCollection();
if(entities==null){
return ;
}
XYAnnotationEntity entity=new XYAnnotationEntity(hotspot,rendererIndex,toolTipText,urlText);
entities.add(entity);

1.2218340274714976
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractXYAnnotation.java<157,166>

-------- No Patch ---------


-------- Similar Code ---------
if(isSeriesVisible(i)){
double v=0.0;
Number n=dataset.getValue(i,index);
if(n!=null){
v=n.doubleValue();
}
if(!Double.isNaN(v)){
if(v>=0.0){
result[1]+=v;
}else {
result[0]+=v;
}
}
}

1.2214747616875887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedAreaRenderer.java<421,435>

-------- No Patch ---------


-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastX=x;
currentTickValue+=unit;
if(cyclenow){
currentTickValue=calculateLowestVisibleTickValue();
upperValue=cycleBound;
cycled=true;
this.boundMappedToLastCycle=true;
}

1.220477717653746
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<541,560>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
if(index>=getDatasetCount()){
return ;
}
Collection markers=getDomainMarkers(index,layer);
ValueAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.2188833764404767
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4121,4138>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
if(index>=getDatasetCount()){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.2188833764404767
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4154,4171>

-------- No Patch ---------


-------- Similar Code ---------
if(categories==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int categoryIndex=categories.indexOf(category);
int categoryCount=categories.size();
return getCategoryMiddle(categoryIndex,categoryCount,area,edge);

1.2183068858492083
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<686,691>

-------- No Patch ---------


-------- Similar Code ---------
{
int index=itemCount-1;
double x=dataset.getXValue(series,index);
while(index>=0&&(x<xLow||x>xHigh)){
index--;
if(index>=0){
x=dataset.getXValue(series,index);
}
}
return Math.max(index,0);
}

1.2178549584748697
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<228,242>

-------- No Patch ---------


-------- Similar Code ---------
if(this.visibleSeries==null){
return rowIndex;
}
int index=-1;
for(int vRow=0;vRow<this.visibleSeries.length;vRow++){
if(this.visibleSeries[vRow]==rowIndex){
index=vRow;
break;
}
}
return index;

1.2178315721300752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/CategoryItemRendererState.java<180,190>

-------- No Patch ---------


-------- Similar Code ---------
{
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
XYItemRenderer renderer=getRendererForDataset(dataset);
XYItemRendererState rs=renderer.initialise(source.createGraphics2D(),dataArea,this,dataset,null);
int seriesCount=dataset.getSeriesCount();
for(int s=0;s<seriesCount;s++){
int itemCount=dataset.getItemCount(s);
for(int i=0;i<itemCount;i++){
if(renderer.hitTest(xx,yy,g2,dataArea,this,getDomainAxisForDataset(d),getRangeAxisForDataset(d),dataset,s,i,rs,false)){
state.setSelected(s,i,!state.isSelected(s,i));
}
}
}
}
}

1.217559442578469
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5868,5899>

-------- No Patch ---------


-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
double mij=get(i,j)*this.m_scaleFactor;
Number n=new Double(mij/this.m_totalSum);
return n;

1.2138463793517515
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/NormalizedMatrixSeries.java<93,99>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.rangeAxis!=null){
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}

1.2131686133326256
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1570,1573>

-------- No Patch ---------


-------- Similar Code ---------
ImageEncoder imageEncoder=null;
String className=(String)encoders.get(format);
if(className==null){
throw new IllegalArgumentException("Unsupported image format - "+format);
}
try{
Class imageEncoderClass=Class.forName(className);
imageEncoder=(ImageEncoder)imageEncoderClass.newInstance();
}catch (Exception e) {
  throw new IllegalArgumentException(e.toString());
}

return imageEncoder;

1.2130630369005524
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/encoders/ImageEncoderFactory.java<102,115>

-------- No Patch ---------


-------- Similar Code ---------
if(segment.inIncludeSegments()){
int p=binarySearchExceptionSegments(segment);
this.exceptionSegments.add(-(p+1),segment);
}

1.2130224528619074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<887,890>

-------- No Patch ---------


-------- Similar Code ---------
if(unique.add(entry.getValue())){
String label=getMinPaintValue((Integer)entry.getValue()).toString()+" - ";
String description=label;
Shape shape=new Rectangle2D.Double(1.0,1.0,1.0,1.0);
Paint paint=getSeriesPaint(((Integer)entry.getValue()).intValue());
Paint outlinePaint=Color.black;
Stroke outlineStroke=DEFAULT_STROKE;
result.add(new LegendItem(label,description,null,null,shape,paint,outlineStroke,outlinePaint));
}

1.2115419078734289
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<319,335>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double transY1=rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation);
if(!Double.isNaN(transX1)&&!Double.isNaN(transY1)){
ControlPoint p=new ControlPoint(plot.getOrientation()==PlotOrientation.HORIZONTAL?(float)transY1:(float)transX1,plot.getOrientation()==PlotOrientation.HORIZONTAL?(float)transX1:(float)transY1);
if(!this.points.contains(p)){
this.points.add(p);
}
}

1.2086654457964616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<182,201>

-------- No Patch ---------


-------- Similar Code ---------
if(unit==null){
throw new NullPointerException("Null \'unit\' argument.");
}
this.tickUnits.add(unit);
Collections.sort(this.tickUnits);

1.2075282217352634
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<90,94>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
Number explode=(Number)this.explodePercentages.get(key);
if(explode!=null){
result=Math.max(result,explode.doubleValue());
}
}

1.2068334361039463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<1652,1658>

-------- No Patch ---------


-------- Similar Code ---------
if(index<0){
throw new IllegalArgumentException("Requires index >= 0.");
}
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}
this.objects[index]=object;
this.size=Math.max(this.size,index+1);

1.204769166069004
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<123,132>

-------- No Patch ---------


-------- Similar Code ---------
if(properties){
JMenuItem propertiesItem=new JMenuItem(localizationResources.getString("Properties..."));
propertiesItem.setActionCommand(PROPERTIES_COMMAND);
propertiesItem.addActionListener(this);
result.add(propertiesItem);
separator=true;
}

1.2022267331341507
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2736,2743>

-------- No Patch ---------


-------- Similar Code ---------
String tip=null;
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,row,col);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,row,col);
}
Shape area=new Rectangle((int)(point.getX()-headW),(int)(point.getY()-headH),(int)(headW*2),(int)(headH*2));
CategoryItemEntity entity=new CategoryItemEntity(area,tip,url,this.dataset,this.dataset.getRowKey(row),this.dataset.getColumnKey(col));
entities.add(entity);

1.1990816459223086
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1346,1366>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendLabelURLGenerator!=null){
urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
}
Paint paint=lookupSectionPaint(key,false);
Paint outlinePaint=lookupSectionOutlinePaint(key,false);
Stroke outlineStroke=lookupSectionOutlineStroke(key,false);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
item.setDataset(getDataset());
item.setSeriesIndex(this.dataset.getIndex(key));
item.setSeriesKey(key);
result.add(item);

1.1958842117530264
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3050,3066>

-------- No Patch ---------


-------- Similar Code ---------
if(row>=0){
DefaultKeyedValues rowData=(DefaultKeyedValues)this.rows.get(row);
int col=rowData.getIndex(columnKey);
return (col>=0?rowData.getValue(col):null);
}else {
throw new UnknownKeyException("Unrecognised rowKey: "+rowKey);
}

1.1941782809704535
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<279,287>

-------- No Patch ---------


-------- Similar Code ---------
if(!ArrayUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1023,1025>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<666,668>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<972,974>

-------- No Patch ---------


-------- Similar Code ---------
if(!Arrays.equals(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<319,321>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<515,517>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<417,419>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<755,757>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<445,447>

-------- No Patch ---------


-------- Similar Code ---------
if(!ObjectUtilities.equal(this.data,that.data)){
return false;
}

1.1934190461400676
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1165,1167>

-------- No Patch ---------


-------- Similar Code ---------
this.calendar.setTime(date);
int month=this.calendar.get(Calendar.MONTH);
toAppendTo.append(this.months[month]);
if(this.showYear[month]){
toAppendTo.append(this.yearFormatter.format(date));
}
return toAppendTo;

1.1919652906938465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MonthDateFormat.java<201,207>

-------- No Patch ---------


-------- Similar Code ---------
if(obj instanceof DefaultBoxAndWhiskerCategoryDataset){
DefaultBoxAndWhiskerCategoryDataset dataset=(DefaultBoxAndWhiskerCategoryDataset)obj;
return ObjectUtilities.equal(this.data,dataset.data);
}

1.1911903373497208
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<900,904>

-------- No Patch ---------


-------- Similar Code ---------
int rendererCount=this.renderers.size();
for(int i=rendererCount-1;i>=0;i--){
XYItemRenderer r=getRenderer(i);
if(i>=getDatasetCount()){
continue;
}
if(r!=null){
ValueAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,info);
}
}

1.190492492705407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3396,3408>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,state);
}
}
for(int i=0;i<datasetCount;i++){
foundData=render(g2,dataArea,i,state,crosshairState)||foundData;
}

1.1904795316170311
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3714,3728>

-------- No Patch ---------


-------- Similar Code ---------
if(pos>=0){
this.data.remove(pos);
}

1.188312554737832
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<236,238>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
State s=(State)state;
s.seriesPath.reset();
s.setLastPointGood(false);
}

1.188014707711812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<328,332>

-------- No Patch ---------


-------- Similar Code ---------
CategoryToolTipGenerator generator=getToolTipGenerator(row,column,selected);
if(generator!=null){
tip=generator.generateToolTip(dataset,row,column);
}
String url=null;
CategoryURLGenerator urlster=getURLGenerator(row,column,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,row,column);
}
CategoryItemEntity entity=new CategoryItemEntity(s,tip,url,dataset,dataset.getRowKey(row),dataset.getColumnKey(column));
entities.add(entity);

1.187806256391569
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1867,1879>

-------- No Patch ---------


-------- Similar Code ---------
for(int section=0;section<keys.size();section++){
Number n=this.dataset.getValue(section);
if(n!=null){
double value=n.doubleValue();
if(value>0.0){
runningTotal+=value;
boolean selected=false;
if(ss!=null){
selected=ss.isSelected(this.dataset.getKey(section));
}
drawItem(g2,section,selected,explodeArea,state,pass);
}
}
}

1.186569833671313
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<2595,2609>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.1861437025208723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<342,347>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.1861437025208723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<348,353>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.1861437025208723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<382,387>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.1861437025208723
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
XYToolTipGenerator l_tipGenerator=getToolTipGenerator(x_series,x_item,selected);
if(null!=l_tipGenerator){
l_tip=l_tipGenerator.generateToolTip(x_dataset,x_series,x_item);
}
String l_url=null;
XYURLGenerator l_urlGenerator=getURLGenerator(x_series,x_item,selected);
if(null!=l_urlGenerator){
l_url=l_urlGenerator.generateURL(x_dataset,x_series,x_item);
}
XYItemEntity l_entity=new XYItemEntity(l_entityArea,x_dataset,x_series,x_item,l_tip,l_url);
l_entities.add(l_entity);

1.1842507264020123
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<899,914>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tooltip=getCategoryLabelToolTip(tick.getCategory());
entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));
}

1.183543030970493
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1042,1047>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
return sv.isSelected();

1.1815865771248242
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<465,466>

-------- No Patch ---------


-------- Similar Code ---------
if(k<(stemBottom+getBulbRadius())){
mercuryStem.setRoundRect(midX-j,k,i,(stemBottom+getBulbRadius())-k,l,l);
tempArea=new Area(mercuryStem);
mercury.add(tempArea);
}

1.1789793339742847
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1176,1181>

-------- No Patch ---------


-------- Similar Code ---------
if(item==s.getLastItemIndex()){
drawShape1(g2,pass,series,item,selected,s.seriesPath);
}

1.1782822565899225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<969,972>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriod period=(TimePeriod)this.values.getRowKey(item);
return getXValue(period);

1.1777541645691614
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<379,380>

-------- No Patch ---------


-------- Similar Code ---------
if(getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,false);
}

1.1764887647291558
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<366,369>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.unitType.getCalendarField(),this.count);
return calendar.getTime();

1.1755670699670513
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<235,238>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.rollUnitType.getCalendarField(),this.rollCount);
return calendar.getTime();

1.1755670699670513
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<271,274>

-------- No Patch ---------


-------- Similar Code ---------
int rendererCount=this.renderers.size();
for(int i=0;i<rendererCount;i++){
XYItemRenderer r=getRenderer(i);
if(r!=null){
ValueAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,info);
}
}
for(int i=0;i<getDatasetCount();i++){
foundData=render(g2,dataArea,i,info,crosshairState)||foundData;
}

1.175311939172743
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3364,3379>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
sv.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.1746050984468936
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<475,479>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}

1.1745490181194231
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<379,382>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}

1.1745490181194231
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<329,332>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemPaint(series,item);
}

1.1744489553563728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<737,739>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemFillPaint(series,item);
}

1.1744489553563728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<917,919>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemOutlinePaint(series,item);
}

1.1744489553563728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1087,1090>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemShape(series,item);
}

1.1744489553563728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useOutlinePaint){
outlinePaint=getItemOutlinePaint(series,item,selected);
}

1.1744489553563728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<752,754>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundDomainMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1740932642487047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2565,2576>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1740932642487047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2839,2850>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1740932642487047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2554,2565>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1740932642487047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2857,2868>

-------- No Patch ---------


-------- Similar Code ---------
CombinedDomainCategoryPlot result=(CombinedDomainCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
return result;

1.1719809647935844
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<663,670>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Paint paint=getPaint(i);
if(paint!=null){
stream.writeInt(i);
SerialUtilities.writePaint(paint,stream);
}else {
stream.writeInt(-1);
}
}

1.1712979828155394
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<142,154>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Shape shape=getShape(i);
if(shape!=null){
stream.writeInt(i);
SerialUtilities.writeShape(shape,stream);
}else {
stream.writeInt(-1);
}
}

1.1712979828155394
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ShapeList.java<140,152>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Stroke stroke=getStroke(i);
if(stroke!=null){
stream.writeInt(i);
SerialUtilities.writeStroke(stroke,stream);
}else {
stream.writeInt(-1);
}
}

1.1712979828155394
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/StrokeList.java<137,149>

-------- No Patch ---------


-------- Similar Code ---------
if(save){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem saveItem=new JMenuItem(localizationResources.getString("Save_as..."));
saveItem.setActionCommand(SAVE_COMMAND);
saveItem.addActionListener(this);
result.add(saveItem);
separator=true;
}

1.170990074572246
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2758,2769>

-------- No Patch ---------


-------- Similar Code ---------
if(print){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem printItem=new JMenuItem(localizationResources.getString("Print..."));
printItem.setActionCommand(PRINT_COMMAND);
printItem.addActionListener(this);
result.add(printItem);
separator=true;
}

1.170990074572246
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2771,2782>

-------- No Patch ---------


-------- Similar Code ---------
{
Range result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
int count=series.getItemCount();
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}
}
return result;
}

1.1708868848207776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<651,673>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.VERTICAL){
left.moveTo(transX1,transStack1);
left.lineTo(transX1,transY1);
left.lineTo(transXLeft,transStackLeft);
}else {
left.moveTo(transStack1,transX1);
left.lineTo(transY1,transX1);
left.lineTo(transStackLeft,transXLeft);
}
left.clone();

1.1704509010741162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<367,377>

-------- No Patch ---------


-------- Similar Code ---------
int validItems=0;
double[][] data=new double[2][itemCount];
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(!Double.isNaN(x)&&!Double.isNaN(y)){
data[0][validItems]=x;
data[1][validItems]=y;
validItems++;
}
}

1.1703237801330504
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<256,266>

-------- No Patch ---------


-------- Similar Code ---------
int valuesPerColor=(int)Math.ceil((double)uniqueValues.size()/this.paintLimit);
int count=0;
int paint=0;
for(Iterator i=uniqueValues.iterator();i.hasNext();){
this.paintIndex.put(i.next(),new Integer(paint));
if(++count%valuesPerColor==0){
paint++;
}
if(paint>this.paintLimit){
paint=this.paintLimit;
}
}

1.170058398749695
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<244,257>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<384,389>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<414,419>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=getHigh(series,item);
if(n!=null){
result=n.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<215,220>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<249,254>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<283,288>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<317,322>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<351,356>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number high=getHigh(series,item);
if(high!=null){
result=high.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<146,151>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<176,181>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<206,211>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<236,241>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<266,271>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getStartX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<64,69>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getEndX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<82,87>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getStartY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<100,105>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getEndY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<118,123>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<76,81>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number z=getZ(series,item);
if(z!=null){
result=z.doubleValue();
}
return result;

1.1695071846244711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYZDataset.java<60,65>

-------- No Patch ---------


-------- Similar Code ---------
if(object instanceof OHLCDataItem){
OHLCDataItem item=(OHLCDataItem)object;
return this.date.compareTo(item.date);
}else {
throw new ClassCastException("OHLCDataItem.compareTo().");
}

1.1671854874893026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/OHLCDataItem.java<201,207>

-------- No Patch ---------


-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
b.setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
return new Size2D(s.width,s.height);

1.1663937415422365
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<283,287>

-------- No Patch ---------


-------- Similar Code ---------
ValueSequence values=this.valueHistory[series];
return values.getData(translateGet(item));

1.16598611703522
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<754,755>

-------- No Patch ---------


-------- Similar Code ---------
if(visible){
drawShape1(g2,pass,series,item,selected,state.workingLine);
}

1.1657748144917035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<886,888>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.165705697042914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<407,409>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.165705697042914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<516,518>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator toolTipGenerator=getToolTipGenerator();
if(toolTipGenerator!=null){
tip=toolTipGenerator.generateToolTip(dataset,key);
}
String url=null;
PieURLGenerator urlGenerator=getURLGenerator();
if(urlGenerator!=null){
url=urlGenerator.generateURL(dataset,key,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(path,dataset,getPieIndex(),section,key,tip,url);
entities.add(entity);
}

1.164982262803371
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<426,444>

-------- No Patch ---------


-------- Similar Code ---------
if(pass==0&&getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,!getUseYInterval());
}

1.1635857041936772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<310,313>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.1626653384573111
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<343,346>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.1626653384573111
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<323,328>

-------- No Patch ---------


-------- Similar Code ---------
if(stripNullAndNaNItems){
vlist=new ArrayList(values.size());
Iterator iterator=values.listIterator();
while(iterator.hasNext()){
Object obj=iterator.next();
if(obj instanceof Number){
Number n=(Number)obj;
double v=n.doubleValue();
if(!Double.isNaN(v)){
vlist.add(n);
}
}
}
}else {
vlist=values;
}

1.1618109387278028
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<100,116>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Map.Entry entry=(Map.Entry)iterator.next();
Paint p1=(Paint)entry.getValue();
Paint p2=(Paint)map2.get(entry.getKey());
if(!PaintUtilities.equal(p1,p2)){
return false;
}
}

1.1614191306119876
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1465,1472>

-------- No Patch ---------


-------- Similar Code ---------
String result=null;
Object[] items=createItemArray((XYZDataset)dataset,series,item);
result=MessageFormat.format(getFormatString(),items);
return result;

1.1608146018984562
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<180,183>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>this.maximumItemCount){
XYDataItem removed=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}

1.1603143726916623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<545,548>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>this.maximumItemCount){
TimeSeriesDataItem d=(TimeSeriesDataItem)this.data.remove(0);
updateBoundsForRemovedItem(d);
}

1.1603143726916623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<629,632>

-------- No Patch ---------


-------- Similar Code ---------
if(uniqueValues.size()<=this.paintLimit){
int count=0;
for(Iterator i=uniqueValues.iterator();i.hasNext();){
this.paintIndex.put(i.next(),new Integer(count++));
}
}else {
swtich (this.paintIndexMethod){
case POSITION_INDEX :
makePositionIndex(uniqueValues);
break;

case VALUE_INDEX :
makeValueIndex(dataMax,dataMin,uniqueValues);
break;

default :
break;

}
}

1.1594182583474557
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<215,234>

-------- No Patch ---------


-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.1583494449537262
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<497,516>

-------- No Patch ---------


-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.1583494449537262
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<696,715>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.1582284775938798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<439,444>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.1582284775938798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<548,553>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,hotspot,dataset,series,item,selected,transX,transY);
}

1.1577554340368945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<478,481>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,shape,dataset,series,item,selected,transX1,transY1);
}

1.1577554340368945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<521,524>

-------- No Patch ---------


-------- Similar Code ---------
EntityBlockParams ebp=null;
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams){
ebp=(EntityBlockParams)params;
if(ebp.getGenerateEntities()){
sec=new StandardEntityCollection();
}
}
Rectangle2D contentArea=(Rectangle2D)area.clone();
contentArea=trimMargin(contentArea);
drawBorder(g2,contentArea);
contentArea=trimBorder(contentArea);

1.1576809465532545
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BlockContainer.java<205,216>

-------- No Patch ---------


-------- Similar Code ---------
while(low<=high){
int mid=(low+high)/2;
Segment midSegment=(Segment)this.exceptionSegments.get(mid);
if(segment.contains(midSegment)||midSegment.contains(segment)){
return mid;
}
if(midSegment.before(segment)){
low=mid+1;
}else if(midSegment.after(segment)){
high=mid-1;
}else {
throw new IllegalStateException("Invalid condition.");
}
}

1.1576679118656545
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1147,1165>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateDomainAxisSpace(g2,this.subplotArea[i],null);
space.ensureAtLeast(subSpace);
}

1.1565896187840135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<297,318>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateDomainAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1565896187840135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<335,356>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateRangeAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1565896187840135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<389,410>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateRangeAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1565896187840135
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<388,409>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useFillPaint){
g2.setPaint(getItemFillPaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.1561639562031039
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1028,1033>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,null,dataset,series,item,selected,transX1,transY1);
}

1.155794657678566
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<278,281>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&circle.intersects(dataArea)){
addEntity(entities,circle,dataset,series,item,selected,circle.getCenterX(),circle.getCenterY());
}

1.154763240876998
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<259,263>

-------- No Patch ---------


-------- Similar Code ---------
TextBlock label=super.createLabel(category,width,edge,g2);
String s=(String)this.sublabels.get(category);
if(s!=null){
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
TextLine line=new TextLine(s,this.sublabelFont,this.sublabelPaint);
label.addLine(line);
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
TextLine line=label.getLastLine();
if(line!=null){
line.addFragment(new TextFragment("  "+s,this.sublabelFont,this.sublabelPaint));
}
}
}
return label;

1.1545111207901633
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<173,190>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
total=total+v.doubleValue();
}
}

1.153848545861663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<279,284>

-------- No Patch ---------


-------- Similar Code ---------
List values=(List)this.data.getObject(row,column);
if(values!=null){
return Collections.unmodifiableList(values);
}else {
return Collections.EMPTY_LIST;
}

1.1536842228937751
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<172,178>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getMean();
}
return result;

1.1521565932404476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<153,159>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getMean();
}
return result;

1.1521565932404476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<197,203>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.1521565932404476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<215,221>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.1521565932404476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<233,239>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries series=sampleFunction2DToSeries(f,start,end,samples,seriesKey);
XYSeriesCollection collection=new XYSeriesCollection(series);
return collection;

1.152064789302516
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<510,513>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<rowCount;r++){
Number n=data.getValue(r,column);
if(n!=null){
total+=n.doubleValue();
}
}

1.150634824742325
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<129,134>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<columnCount;c++){
Number n=data.getValue(row,c);
if(n!=null){
total+=n.doubleValue();
}
}

1.150634824742325
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<184,189>

-------- No Patch ---------


-------- Similar Code ---------
CombinedRangeCategoryPlot result=(CombinedRangeCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.1494154740594407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<530,545>

-------- No Patch ---------


-------- Similar Code ---------
CombinedRangeXYPlot result=(CombinedRangeXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.1494154740594407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<678,692>

-------- No Patch ---------


-------- Similar Code ---------
CombinedDomainXYPlot result=(CombinedDomainXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis domainAxis=result.getDomainAxis();
if(domainAxis!=null){
domainAxis.configure();
}
return result;

1.1494154740594407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<697,711>

-------- No Patch ---------


-------- Similar Code ---------
String result=null;
Object[] items=createItemArray(dataset,series,item);
result=MessageFormat.format(this.formatString,items);
return result;

1.1490804725957822
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<247,250>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,yyAverage,xx);
}

1.1489984333745953
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<486,489>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,xx,yyAverage);
}

1.1489984333745953
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<700,703>

-------- No Patch ---------


-------- Similar Code ---------
if(item.getY()!=null){
double y=item.getYValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.148815440699889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<251,255>

-------- No Patch ---------


-------- Similar Code ---------
if(item==dataset.getItemCount(series)-1){
if(s.seriesIndex==series){
g2.setStroke(lookupSeriesStroke(series));
g2.setPaint(lookupSeriesPaint(series));
g2.draw(s.seriesPath);
}
}

1.1484872016112646
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<798,805>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
items=createItemArray((XYZDataset)dataset,series,item);
}else {
items=createItemArray(dataset,series,item);
}

1.147670260849811
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<182,187>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<subCategoryCount;i++){
if(RectangleEdge.isTopOrBottom(edge)){
xx=(float)(x0+(i+0.5)*width);
yy=(float)area.getCenterY();
}else {
xx=(float)area.getCenterX();
yy=(float)(y0+(i+0.5)*height);
}
String label=this.subCategories.get(i).toString();
TextUtilities.drawRotatedString(label,g2,xx,yy,TextAnchor.CENTER,0.0,TextAnchor.CENTER);
}

1.1468957186908793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<366,378>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(yN!=null){
double y=yN.doubleValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
findBoundsByIteration();
}
}
}

1.1463041091438964
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1228,1236>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getFirstMillisecond(this.workingCalendar));

1.1459857690163802
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<779,780>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getLastMillisecond(this.workingCalendar));

1.1459857690163802
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<792,793>

-------- No Patch ---------


-------- Similar Code ---------
while(measurer.getStringWidth(text,start,end)>width){
end--;
if(end<=start){
return end;
}
}

1.1454337586175176
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<253,258>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1447581728576617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<240,243>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1447581728576617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<293,296>

-------- No Patch ---------


-------- Similar Code ---------
int hash=5;
hash=HashUtilities.hashCode(hash,this.intervalDelegate);
hash=HashUtilities.hashCode(hash,this.data);
return hash;

1.1444573618653586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<515,518>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.1441066206736552
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<909,912>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.1441066206736552
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1058,1061>

-------- No Patch ---------


-------- Similar Code ---------
if(position.getWidthType()==CategoryLabelWidthType.CATEGORY){
l=(float)calculateCategorySize(categories.size(),dataArea,edge);
}else {
if(RectangleEdge.isLeftOrRight(edge)){
l=(float)dataArea.getWidth();
}else {
l=(float)dataArea.getHeight();
}
}

1.1440295068717712
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1107,1118>

-------- No Patch ---------


-------- Similar Code ---------
RectangleInsets insets=getInsets();
insets.trim(plotArea);
Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();
if(info!=null){
info.setPlotArea(plotArea);
info.setDataArea(plotArea);
}
drawBackground(g2,plotArea);
Shape savedClip=g2.getClip();
g2.clip(plotArea);

1.1439261885860579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<232,244>

-------- No Patch ---------


-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
double width=constraint.getWidth();
Rectangle2D bounds=new Rectangle2D.Double((width-s.width)/2.0,0.0,s.width,s.height);
b.setBounds(bounds);
return new Size2D((width-s.width)/2.0,s.height);

1.1433806944020362
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<147,154>

-------- No Patch ---------


-------- Similar Code ---------
FontMetrics fm=this.g2.getFontMetrics();
Rectangle2D bounds=TextUtilities.getTextBounds(text.substring(start,end),this.g2,fm);
float result=(float)bounds.getWidth();
return result;

1.1424128346992206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/G2TextMeasurer.java<75,79>

-------- No Patch ---------


-------- Similar Code ---------
if(itemsInRow.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width-x),size.height));
x=0.0;
y=y+size.height;
}else {
itemsInRow.clear();
x=0.0;
y=y+maxHeight;
maxHeight=size.height;
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width),size.height));
x=size.width+this.horizontalGap;
itemsInRow.add(block);
}

1.1419035359676748
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<198,221>

-------- No Patch ---------


-------- Similar Code ---------
if(itemsInColumn.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height-y)));
y=0.0;
x=x+size.width;
}else {
itemsInColumn.clear();
x=x+maxWidth;
y=0.0;
maxWidth=size.width;
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height)));
y=size.height+this.verticalGap;
itemsInColumn.add(block);
}

1.1419035359676748
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<221,244>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator tipster=getToolTipGenerator();
if(tipster!=null){
tip=tipster.generateToolTip(dataset,currentKey);
}
String url=null;
if(getURLGenerator()!=null){
url=getURLGenerator().generateURL(dataset,currentKey,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(upperArc,dataset,getPieIndex(),sectionIndex,currentKey,tip,url);
entities.add(entity);
}

1.1413594142882146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<556,572>

-------- No Patch ---------


-------- Similar Code ---------
this.axisOffset.trim(dataArea);
dataArea=integerise(dataArea);
if(dataArea.isEmpty()){
return ;
}
createAndAddEntity((Rectangle2D)dataArea.clone(),info,null,null);
if(info!=null){
info.setDataArea(dataArea);
}
drawBackground(g2,dataArea);
Map axisStateMap=drawAxes(g2,area,dataArea,info);

1.1409415583961553
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3242,3255>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<highLowDataset.getItemCount(series);item++){
double volume=highLowDataset.getVolumeValue(series,item);
if(volume>this.maxVolume){
this.maxVolume=volume;
}
}

1.1409375805702333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<618,625>

-------- No Patch ---------


-------- Similar Code ---------
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}

1.1401245414823764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1034,1039>

-------- No Patch ---------


-------- Similar Code ---------
Date previous=previousStandardDate(date,unit);
Calendar calendar=Calendar.getInstance(this.timeZone,this.locale);
calendar.setTime(previous);
calendar.add(unit.getCalendarField(),unit.getMultiple());
return calendar.getTime();

1.1400388062510958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1093,1097>

-------- No Patch ---------


-------- Similar Code ---------
State state=(State)super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
this.points=new Vector();
setDrawSeriesLineAsPath(true);
return state;

1.1393131528484568
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<151,155>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1392944363988762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<921,925>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1392944363988762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1070,1074>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(item.getValue()!=null){
double y=yN.doubleValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.1385006941381643
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1211,1216>

-------- No Patch ---------


-------- Similar Code ---------
HashSet hs=(HashSet)this.xPoints.clone();
Iterator iterator=hs.iterator();
while(iterator.hasNext()){
Number x=(Number)iterator.next();
if(canPrune(x)){
removeAllValuesForX(x);
}
}

1.1369927039249579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<466,473>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
if(sv==null){
return null;
}else {
return sv.getValue();
}

1.1368819251673772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<120,127>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(rowKey,columnKey);
if(sv!=null){
return sv.getValue();
}else {
return null;
}

1.1368819251673772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<221,228>

-------- No Patch ---------


-------- Similar Code ---------
{
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
GeneralPath path=convertToDataSpace(region,dataArea,dataset);
int seriesCount=dataset.getSeriesCount();
for(int s=0;s<seriesCount;s++){
int itemCount=dataset.getItemCount(s);
for(int i=0;i<itemCount;i++){
double x=dataset.getXValue(s,i);
double y=dataset.getYValue(s,i);
if(path.contains(x,y)){
state.setSelected(s,i,true,false);
}
}
}
state.fireSelectionEvent();
}

1.1360717774794198
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5916,5944>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getStartXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}

1.13518181654224
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1515,1522>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getEndXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}

1.13518181654224
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1572,1579>

-------- No Patch ---------


-------- Similar Code ---------
Number[] result=new Number[data.length];
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}
return result;

1.135094334367924
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<429,433>

-------- No Patch ---------


-------- Similar Code ---------
if(Modifier.isPublic(f.getModifiers())&&Modifier.isFinal(f.getModifiers())){
String name=f.getName();
Object oColor=f.get(null);
if(oColor instanceof Color){
if(c.equals(oColor)){
return name;
}
}
}

1.1347050375502532
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintUtilities.java<116,126>

-------- No Patch ---------


-------- Similar Code ---------
if(start>end){
throw new IllegalArgumentException("Requires start <= end.");
}
this.start=start;
this.end=end;

1.1333389670936393
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/SimpleTimePeriod.java<77,81>

-------- No Patch ---------


-------- Similar Code ---------
this.data.setValue(value,chipx,chipy);
if(isMaxValue(value)){
this.maxValue=(Double)value;
}
if(isMinValue(value)){
this.minValue=(Double)value;
}

1.1321896951254082
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<145,151>

-------- No Patch ---------


-------- Similar Code ---------
long start=Math.max(from,this.segmentStart);
long end=Math.min(to,this.segmentEnd);
if(start<=end){
return new SegmentRange(start,end);
}else {
return null;
}

1.1314232225960927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1672,1683>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,shape,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<578,581>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<988,991>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,block,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<386,389>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,entityArea,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<438,441>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,hotspot,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<868,871>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,hotspot,dataset,series,item,selected,0.0,0.0);
}

1.1308459248094216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<374,377>

-------- No Patch ---------


-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(categoryIndex);
if(arc==null){
continue;
}
Comparable key=getSectionKey(categoryIndex);
paint=lookupSectionPaint(key,false);
outlinePaint=lookupSectionOutlinePaint(key,false);
outlineStroke=lookupSectionOutlineStroke(key,false);
g2.setPaint(paint);
g2.fill(arc);

1.1304291909747706
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<460,469>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.line.setLine(transX0,transY0,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.line.setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.line);
}

1.1302933769466665
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<605,613>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
Comparable k=series.getKey();
if(k!=null&&k.equals(key)){
result=series;
}
}
return result;

1.1285084142043016
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<289,298>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
Number[] result=new Number[data.length];
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}
return result;

1.1282501989922926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<233,240>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
runningTotal=runningTotal+v.doubleValue();
}
result.addValue(data.getKey(i),new Double(runningTotal/total));
}

1.1263999801783406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<286,292>

-------- No Patch ---------


-------- Similar Code ---------
if(x.length==2){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}

1.1258729149123607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<239,243>

-------- No Patch ---------


-------- Similar Code ---------
Iterator iterator=this.bins.iterator();
while(iterator.hasNext()){
SimpleHistogramBin existingBin=(SimpleHistogramBin)iterator.next();
if(bin.overlapsWith(existingBin)){
throw new RuntimeException("Overlapping bin");
}
}
this.bins.add(bin);
Collections.sort(this.bins);

1.1258634602353481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<184,193>

-------- No Patch ---------


-------- Similar Code ---------
if(y0>=0.0){
left.moveTo((float)xx1,transStack1);
left.lineTo((float)xx1,transY1);
left.lineTo((float)xxLeft,transStackLeft);
left.clone();
}else {
double yleft=(y0+y1)/2.0+stackLeft[0];
float transYLeft=(float)rangeAxis.valueToJava2D(yleft,dataArea,edge1);
left.moveTo((float)xx1,transY1);
left.lineTo((float)xx1,transStack1);
left.lineTo((float)xxLeft,transStackLeft);
left.lineTo((float)xxLeft,transYLeft);
left.closePath();
}

1.1257864176882477
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedAreaRenderer.java<309,324>

-------- No Patch ---------


-------- Similar Code ---------
for(int s=0;s<seriesCount;s++){
double value=dataset.getYValue(s,item);
if(!Double.isNaN(value)){
total=total+value;
}
}

1.1257341699694756
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2103,2108>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemLineVisible(series,item)){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}

1.1251759778823134
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<334,338>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
areaState.area=new Polygon();
double zero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)zero);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)zero,(int)transX1);
}
}

1.1246390942306956
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<563,574>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
this.data=new KeyedObjects();
for(int i=0;i<data.getItemCount();i++){
SelectableValue dataItem=new SelectableValue(data.getValue(i));
this.data.addObject(data.getKey(i),dataItem);
}

1.1237656508582066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<102,109>


-------- Patch ---------
this.data=new KeyedObjects();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()-this.barWidth/2.0);
}
return result;

1.1229820441781473
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<219,224>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()+this.barWidth/2.0);
}
return result;

1.1229820441781473
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<251,256>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,value<0.0);
}

1.1228533259310673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
Number startX=null;
Number x=this.dataset.getX(series,item);
if(x!=null){
startX=new Double(x.doubleValue()-(getIntervalPositionFactor()*getIntervalWidth()));
}
return startX;

1.1227728175959792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/IntervalXYDelegate.java<262,268>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.1197921446411787
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<342,352>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.1197921446411787
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<784,794>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable category=(Comparable)iterator.next();
g2.setFont(getTickLabelFont(category));
TextBlock label=createLabel(category,l*r,edge,g2);
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
max=Math.max(max,calculateTextBlockHeight(label,position,g2));
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
max=Math.max(max,calculateTextBlockWidth(label,position,g2));
}
Tick tick=new CategoryTick(category,label,position.getLabelAnchor(),position.getRotationAnchor(),position.getAngle());
ticks.add(tick);
categoryIndex=categoryIndex+1;
}

1.1197085200891803
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1121,1139>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
int l1=data.length;
Number[][] result=new Number[l1][];
for(int i=0;i<l1;i++){
result[i]=createNumberArray(data[i]);
}
return result;

1.1187278339446751
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<252,260>

-------- No Patch ---------


-------- Similar Code ---------
if(getDarkerSides()){
if(paint instanceof Color){
Color c=(Color)paint;
c=c.darker();
paint=c;
}
}
double start=arc.getAngleStart();
double extent=arc.getAngleExtent();
double end=start+extent;
g2.setStroke(outlineStroke);

1.1168862757040232
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<621,633>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotShapes()){
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
g2.draw(shape);
}

1.115531636005036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<591,602>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number y=dataset.getValue(item);
if(y!=null){
double yy=y.doubleValue();
if(yy>0.0){
return false;
}
}
}

1.1145512580111512
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<575,583>

-------- No Patch ---------


-------- Similar Code ---------
if(generator==null){
return ;
}
String label=generator.generateLabel(dataset,series,item);
if(label==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,selected);
g2.setFont(labelFont);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setPaint(paint);

1.112281531017578
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1019,1030>

-------- No Patch ---------


-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.1121434106001062
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Hour.java<154,164>

-------- No Patch ---------


-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((this.maximumRangeValueRow==r&&this.maximumRangeValueColumn==c)||(this.minimumRangeValueRow==r&&this.minimumRangeValueColumn==c)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.1116150139216125
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<207,219>

-------- No Patch ---------


-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((r==this.maximumRangeValueRow&&c==this.maximumRangeValueColumn)||(r==this.maximumRangeValueIncStdDevRow&&c==this.maximumRangeValueIncStdDevColumn)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.1116150139216125
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<433,452>

-------- No Patch ---------


-------- Similar Code ---------
double x1;
if(this.useSeriesOffset){
x1=domainAxis.getCategorySeriesMiddle(column,dataset.getColumnCount(),visibleRow,visibleRowCount,this.itemMargin,dataArea,plot.getDomainAxisEdge());
}else {
x1=domainAxis.getCategoryMiddle(column,getColumnCount(),dataArea,plot.getDomainAxisEdge());
}
Number n=(Number)values.get(i);
double value=n.doubleValue();
double y1=rangeAxis.valueToJava2D(value,dataArea,plot.getRangeAxisEdge());
Shape shape=getItemShape(row,column,selected);

1.1108787010344994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<411,426>

-------- No Patch ---------


-------- Similar Code ---------
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(isShapesFilled()){
g2.fill(shape);
}else {
g2.draw(shape);
}

1.110255842099816
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<447,461>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<getToolTipCount(series);item++){
String t1=getToolTipText(series,item);
String t2=generator.getToolTipText(series,item);
if(t1!=null){
result=result&&t1.equals(t2);
}else {
result=result&&(t2==null);
}
}

1.107406036869025
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<184,193>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D bounds=createHotSpotBounds(g2,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,state,null);
if(bounds==null){
return false;
}
return bounds.contains(xx,yy);

1.1059601046649108
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1087,1095>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}

1.105849893205947
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1036,1046>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double z=Double.NaN;
if(dataset instanceof XYZDataset){
XYZDataset xyzData=(XYZDataset)dataset;
z=xyzData.getZValue(series,item);
}

1.1057591434092475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<176,189>

-------- No Patch ---------


-------- Similar Code ---------
if(item==s.getLastItemIndex()){
PathIterator pi=s.seriesPath.getPathIterator(null);
int count=0;
while(!pi.isDone()){
count++;
pi.next();
}
g2.setStroke(getItemStroke(series,item,selected));
g2.setPaint(getItemPaint(series,item,selected));
g2.draw(s.seriesPath);
g2.draw(s.intervalPath);
}

1.1056933896350647
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
int count=this.rangeAxes.size();
for(int axisIndex=0;axisIndex<count;axisIndex++){
ValueAxis yAxis=getRangeAxis(axisIndex);
if(yAxis!=null){
yAxis.configure();
}
}
if(getParent()!=null){
getParent().datasetChanged(event);
}else {
PlotChangeEvent e=new PlotChangeEvent(this);
e.setType(ChartChangeEventType.DATASET_UPDATED);
notifyListeners(e);
}

1.1054013214867142
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2341,2355>

-------- No Patch ---------


-------- Similar Code ---------
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)transY1,(int)transX1);
}
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(stroke);

1.1050224910784887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<577,588>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int groups=this.seriesToGroupMap.getGroupCount();
int categories=data.getColumnCount();
int columns=groups*categories;
double categoryMargin=0.0;
double itemMargin=0.0;

1.1046414492822834
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java<150,161>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
double z=((XYZDataset)dataset).getZValue(series,item);
p=this.paintScale.getPaint(z);
}else {
if(this.useFillPaint){
p=getItemFillPaint(series,item,selected);
}else {
p=getItemPaint(series,item,selected);
}
}

1.1046102032838798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<500,511>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yyHigh,false);
drawAdditionalItemLabel(g2,orientation,dataset,series,item,xx,yyLow);
}

1.1043601021106824
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<232,237>

-------- No Patch ---------


-------- Similar Code ---------
Number min=item.getMinOutlier();
if(min!=null){
double minv=min.doubleValue();
if(!Double.isNaN(minv)){
if(minv<this.minimumRangeValue||Double.isNaN(this.minimumRangeValue)){
this.minimumRangeValue=minv;
this.minimumRangeValueRow=r;
this.minimumRangeValueColumn=c;
}
}
}
Number max=item.getMaxOutlier();

1.1039720082615208
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<860,872>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value=dataset.getYValue(series,item);
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
maximum=Math.max(maximum,value);
}
}

1.1035232734785712
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1262,1268>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
if(!Double.isNaN(x)){
minimum=Math.min(minimum,x);
maximum=Math.max(maximum,x);
}
}

1.1035232734785712
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1335,1341>

-------- No Patch ---------


-------- Similar Code ---------
case WIDTHMETHOD_INTERVALDATA :
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
double startPos=domainAxis.valueToJava2D(intervalXYData.getStartXValue(series,item),dataArea,plot.getDomainAxisEdge());
double endPos=domainAxis.valueToJava2D(intervalXYData.getEndXValue(series,item),dataArea,plot.getDomainAxisEdge());
xxWidth=Math.abs(endPos-startPos);
break;


1.1030590396785331
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<730,740>

-------- No Patch ---------


-------- Similar Code ---------
for(int pieItem=0;pieItem<getListCount();pieItem++){
if(getURLCount(pieItem)!=generator.getURLCount(pieItem)){
return false;
}
keySet=((HashMap)this.urls.get(pieItem)).keySet();
String key;
for(Iterator i=keySet.iterator();i.hasNext();){
key=(String)i.next();
if(!getURL(key,pieItem).equals(generator.getURL(key,pieItem))){
return false;
}
}
}

1.1027840261571493
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<177,190>

-------- No Patch ---------


-------- Similar Code ---------
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
TableXYDataset tdataset=(TableXYDataset)dataset;
PlotOrientation orientation=plot.getOrientation();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double[] stack1=getStackValues(tdataset,series,item);

1.102303950888064
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<219,232>


-------- Patch ---------
if(Double.isNaN(index)){
y1=0.0;
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(dataArea.isEmpty()){
return ;
}
state.setDataArea(dataArea);
createAndAddEntity((Rectangle2D)dataArea.clone(),state,null,null);
if(getRenderer()!=null){
getRenderer().drawBackground(g2,this,dataArea);
}else {
drawBackground(g2,dataArea);
}
Map axisStateMap=drawAxes(g2,area,dataArea,state);

1.101636842767705
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3613,3628>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.099048967139709
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/ValueHandler.java<140,142>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.099048967139709
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/KeyHandler.java<135,137>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getStartValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
minimum=Math.min(minimum,value.doubleValue());
}
}

1.0990432225347433
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1626,1639>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getEndValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
maximum=Math.max(maximum,value.doubleValue());
}
}

1.0990432225347433
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1744,1757>

-------- No Patch ---------


-------- Similar Code ---------
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}

1.097791283829145
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<693,706>

-------- No Patch ---------


-------- Similar Code ---------
if(intervalDataset!=null){
xs=intervalDataset.getStartXValue(series,item);
xe=intervalDataset.getEndXValue(series,item);
ys=intervalDataset.getStartYValue(series,item);
ye=intervalDataset.getEndYValue(series,item);
}

1.0970866440579745
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<167,172>

-------- No Patch ---------


-------- Similar Code ---------
int rowIndex=this.data.getRowIndex(chipx);
if(rowIndex<0){
return null;
}
int colIndex=this.data.getColumnIndex(chipy);
if(colIndex<0){
return null;
}
return this.data.getValue(rowIndex,colIndex);

1.0969419612524058
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<203,211>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=that.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0962817296479384
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<175,188>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=generator.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0962817296479384
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<165,177>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
PlotOrientation orientation=plot.getOrientation();
RectangleEdge location=plot.getRangeAxisEdge();
Paint itemPaint=getItemPaint(series,item,selected);
Stroke itemStroke=getItemStroke(series,item,selected);
g2.setPaint(itemPaint);
g2.setStroke(itemStroke);

1.0962403852568587
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<330,341>

-------- No Patch ---------


-------- Similar Code ---------
ticks.add(new NumberTick(new Double(t0),"",TextAnchor.CENTER,TextAnchor.CENTER,0.0));
x0=valueToJava2D(t0,dataArea,edge);
if(edge==RectangleEdge.TOP){
inside=new Line2D.Double(x0,y0,x0,y0+insideLength);
outside=new Line2D.Double(x0,y0,x0,y0-outsideLength);
}else if(edge==RectangleEdge.BOTTOM){
inside=new Line2D.Double(x0,y0,x0,y0-insideLength);
outside=new Line2D.Double(x0,y0,x0,y0+outsideLength);
}
if(t0>=firstOnAxis){
g2.setPaint(getTickMarkPaint());
g2.setStroke(getTickMarkStroke());
g2.draw(inside);
g2.draw(outside);
}

1.0959268044500756
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<731,747>

-------- No Patch ---------


-------- Similar Code ---------
years=calendar.get(Calendar.YEAR);
calendar.clear(Calendar.MILLISECOND);
calendar.set(years,value,1,0,0,0);
Month month=new Month(calendar.getTime(),this.timeZone,this.locale);
Date standardDate=calculateDateForPosition(month,this.tickMarkPosition);
long millis=standardDate.getTime();
if(millis>=date.getTime()){
month=(Month)month.previous();
month.peg(Calendar.getInstance(this.timeZone));
standardDate=calculateDateForPosition(month,this.tickMarkPosition);
}

1.0959195285789622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1008,1023>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=this.labels.size()-1;i>0;i--){
PieLabelRecord record0=getPieLabelRecord(i);
PieLabelRecord record1=getPieLabelRecord(i-1);
if(record1.getUpperY()>record0.getLowerY()){
record1.setAllocatedY(Math.max(minY+record1.getLabelHeight()/2.0,record0.getLowerY()-this.minGap));
}
}

1.0956731996861733
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<165,173>

-------- No Patch ---------


-------- Similar Code ---------
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
double value=intervalDataset.getYValue(series,item);
if(Double.isNaN(value)){
return ;
}
double total=0.0;
if(this.renderAsPercentages){
total=DatasetUtilities.calculateStackTotal((TableXYDataset)dataset,item);
value=value/total;
}
double positiveBase=0.0;

1.0954412136005904
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<256,276>

-------- No Patch ---------


-------- Similar Code ---------
if(getUseYInterval()){
y0=intervalDataset.getStartYValue(series,item);
y1=intervalDataset.getEndYValue(series,item);
}else {
y0=getBase();
y1=intervalDataset.getYValue(series,item);
}

1.0953751919003714
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<229,236>

-------- No Patch ---------


-------- Similar Code ---------
Shape entityArea=null;
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)||Double.isNaN(x1)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);

1.0945601787623043
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1000,1012>

-------- No Patch ---------


-------- Similar Code ---------
IntervalXYDataset intervalDataset=null;
if(dataset instanceof IntervalXYDataset){
intervalDataset=(IntervalXYDataset)dataset;
}
Object[] result=new Object[7];
result[0]=dataset.getSeriesKey(series).toString();
double x=dataset.getXValue(series,item);
double xs=x;
double xe=x;
double y=dataset.getYValue(series,item);
double ys=y;

1.094444163084701
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<154,165>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=bx.getXValue(series,item);
if(xRange.contains(x)){
Number lvalue=bx.getMinRegularValue(series,item);
Number uvalue=bx.getMaxRegularValue(series,item);
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}
}

1.093334182627094
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1419,1431>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(xRange.contains(x)){
if(!Double.isNaN(y)){
minimum=Math.min(minimum,y);
maximum=Math.max(maximum,y);
}
}
}

1.0932740438013568
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1464,1473>

-------- No Patch ---------


-------- Similar Code ---------
Paint itemPaint=getItemPaint(series,item,selected);
if(pass==0){
g2.setPaint(itemPaint);
g2.fill(left);
g2.fill(right);
}
if(entities!=null){
GeneralPath gp=new GeneralPath(left);
gp.append(right,false);
entityArea=gp;
addEntity(entities,entityArea,dataset,series,item,selected,transX1,transY1);
}

1.0928445548430463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<435,449>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x)||Double.isNaN(y)){
return ;
}
double transX=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double transY=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());

1.0927752846011054
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<412,427>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
double total=0.0;
int rowCount=data.getRowCount();
for(int v=0;v<validRows.length;v++){
int row=validRows[v];
if(row<rowCount){
Number n=data.getValue(row,column);
if(n!=null){
total+=n.doubleValue();
}
}
}
return total;

1.092758437616294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<152,166>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
double total=0.0;
int colCount=data.getColumnCount();
for(int v=0;v<validCols.length;v++){
int col=validCols[v];
if(col<colCount){
Number n=data.getValue(row,col);
if(n!=null){
total+=n.doubleValue();
}
}
}
return total;

1.092758437616294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<207,221>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
XYAreaRendererState areaState=(XYAreaRendererState)state;
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());

1.0921132646116023
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<494,508>

-------- No Patch ---------


-------- Similar Code ---------
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)||Double.isNaN(x1)){
return ;
}
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
if(Double.isNaN(y0)||Double.isNaN(x0)){
return ;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();

1.0917552132588173
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<851,863>

-------- No Patch ---------


-------- Similar Code ---------
this.displayStart=mapValueToFixedRange(start);
this.displayEnd=mapValueToFixedRange(end);
if(this.displayStart<this.displayEnd){
setRange(this.displayStart,this.displayEnd);
}else {
setRange(this.displayStart,this.fixedRange.getUpperBound()+(this.displayEnd-this.fixedRange.getLowerBound()));
}
notifyListeners(new AxisChangeEvent(this));

1.0911646189874984
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ModuloAxis.java<113,122>

-------- No Patch ---------


-------- Similar Code ---------
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getRowKey(series));
item.setSeriesIndex(series);
item.setDataset(dataset);
item.setDatasetIndex(datasetIndex);
return item;

1.0907989011644466
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/CategoryStepRenderer.java<198,209>

-------- No Patch ---------


-------- Similar Code ---------
if(handler!=this){
handler.characters(ch,start,length);
}

1.0905443223348088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/RootHandler.java<84,86>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
Paint seriesPaint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(seriesPaint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);

1.090290078876277
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<200,213>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.labels.size()-1;i++){
PieLabelRecord record0=getPieLabelRecord(i);
PieLabelRecord record1=getPieLabelRecord(i+1);
if(record1.getLowerY()<record0.getUpperY()){
record1.setAllocatedY(Math.min(minY+height-record1.getLabelHeight()/2.0,record0.getUpperY()+this.minGap));
}
}

1.0900634588535338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<145,154>

-------- No Patch ---------


-------- Similar Code ---------
Shape shape=lookupLegendShape(series);
Paint paint=lookupSeriesPaint(series);
LegendItem item=new LegendItem(label,paint);
item.setToolTipText(toolTipText);
item.setURLText(urlText);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getSeriesKey(series));

1.089727385915025
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1005,1015>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0896772259548848
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3851,3860>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0896772259548848
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3882,3891>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);

1.0895566562648304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<376,388>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);

1.0895566562648304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<516,528>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
OHLCDataset highLowData=(OHLCDataset)dataset;
double x=highLowData.getXValue(series,item);
double yHigh=highLowData.getHighValue(series,item);
double yLow=highLowData.getLowValue(series,item);
double yOpen=highLowData.getOpenValue(series,item);
double yClose=highLowData.getCloseValue(series,item);

1.0895566562648304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<668,679>

-------- No Patch ---------


-------- Similar Code ---------
double translatedValue1=rangeAxis.valueToJava2D(value1,dataArea,plot.getRangeAxisEdge());
double bottom=Math.min(translatedValue0,translatedValue1);
double top=Math.max(translatedValue0,translatedValue1);
double startX=ixyd.getStartXValue(series,item);
if(Double.isNaN(startX)){
return null;
}
double endX=ixyd.getEndXValue(series,item);
if(Double.isNaN(endX)){
return null;
}

1.0894626222775698
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<841,853>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D bar=createBar(g2,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
if(bar==null){
return ;
}
boolean positive=true;
if(this.useYInterval){
positive=dataset.getYValue(series,item)>=0.0;
}else error
boolean inverted=rangeAxis.isInverted();

1.0893159713443112
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<928,942>

-------- No Patch ---------


-------- Similar Code ---------
if(getBaseShapesVisible()){
Shape shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}else if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}
if(shape.intersects(dataArea)){
if(getItemShapeFilled(series,item)){
g2.fill(shape);
}else {
g2.draw(shape);
}
}
entityArea=shape;
}

1.088823394383887
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<864,885>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0880231996991852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1229,1238>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0880231996991852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1246,1255>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartXValue(series,item);
double uvalue=ixyd.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0880231996991852
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1316,1325>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useYInterval){
value0=ixyd.getStartYValue(series,item);
value1=ixyd.getEndYValue(series,item);
}else {
value0=this.base;
value1=ixyd.getYValue(series,item);
}

1.087891982976319
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<817,824>

-------- No Patch ---------


-------- Similar Code ---------
int volume=(int)highLowData.getVolumeValue(series,item);
double volumeHeight=volume/this.maxVolume;
double min,max;
if(horiz){
min=dataArea.getMinX();
max=dataArea.getMaxX();
}else {
min=dataArea.getMinY();
max=dataArea.getMaxY();
}

1.087171204666821
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<760,771>

-------- No Patch ---------


-------- Similar Code ---------
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint,outlineStroke,outlinePaint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getRowKey(series));
item.setSeriesIndex(series);
item.setDataset(dataset);
item.setDatasetIndex(datasetIndex);
return item;

1.087113265010995
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1447,1458>

-------- No Patch ---------


-------- Similar Code ---------
if(!(range.intersects(start,end))){
return ;
}
 final Composite savedComposite=g2.getComposite();
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,marker.getAlpha()));
double start2d=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.0868001629866757
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1236,1252>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
double xx=transX1;
double yy=transY1;
if(orientation==PlotOrientation.HORIZONTAL){
xx=transY1;
yy=transX1;
}
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.0865242354444773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<287,296>

-------- No Patch ---------


-------- Similar Code ---------
double end=im.getEndValue();
Range range=domainAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=domainAxis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double end2d=domainAxis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.0865173055743258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1358,1372>

-------- No Patch ---------


-------- Similar Code ---------
double end=im.getEndValue();
Range range=rangeAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=rangeAxis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=rangeAxis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.0865173055743258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1557,1571>

-------- No Patch ---------


-------- Similar Code ---------
if(pass==0){
drawItemPass0(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}else if(pass==1){
drawItemPass1(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}

1.0864581120549865
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<380,387>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
double x0=dataset.getXValue(series,Math.max(item-1,0));

1.086437787340718
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<283,300>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
double x=intervalDataset.getXValue(series,item);
double yLow=intervalDataset.getStartYValue(series,item);
double yHigh=intervalDataset.getEndYValue(series,item);
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,xAxisLocation);

1.0858557929007489
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<185,199>

-------- No Patch ---------


-------- Similar Code ---------
JPanel panel=new JPanel(new BorderLayout());
JTable table=new JTable(model);
for(int columnIndex=0;columnIndex<model.getColumnCount();columnIndex++){
TableColumn column=table.getColumnModel().getColumn(columnIndex);
Class c=model.getColumnClass(columnIndex);
if(c.equals(Number.class)){
column.setCellRenderer(new NumberCellRenderer());
}
}
panel.add(new JScrollPane(table));
return panel;

1.0855256272648421
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RefineryUtilities.java<243,254>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);

1.085000143136141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<744,757>

-------- No Patch ---------


-------- Similar Code ---------
if(getDrawOpenTicks()){
double yOpen=hld.getOpenValue(series,item);
if(!Double.isNaN(yOpen)){
double yyOpen=rangeAxis.valueToJava2D(yOpen,dataArea,location);
if(this.openTickPaint!=null){
g2.setPaint(this.openTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyOpen,xx+delta,yyOpen,xx));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx-delta,yyOpen,xx,yyOpen));
}
}
}

1.0848211445063027
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<370,390>

-------- No Patch ---------


-------- Similar Code ---------
if(getDrawCloseTicks()){
double yClose=hld.getCloseValue(series,item);
if(!Double.isNaN(yClose)){
double yyClose=rangeAxis.valueToJava2D(yClose,dataArea,location);
if(this.closeTickPaint!=null){
g2.setPaint(this.closeTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyClose,xx,yyClose,xx-delta));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyClose,xx+delta,yyClose));
}
}
}

1.0848211445063027
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<392,412>

-------- No Patch ---------


-------- Similar Code ---------
if(result==null){
result=new Rectangle();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double xx=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double yy=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
result.setRect(xx-2,yy-2,4,4);
return result;

1.0847975137561123
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1039,1049>

-------- No Patch ---------


-------- Similar Code ---------
if(this.dialBackgroundPaint!=null){
fillArc(g2,originalArea,dataMin,dataMax,this.dialBackgroundPaint,true);
}
drawTicks(g2,meterArea,dataMin,dataMax);
drawArcForInterval(g2,meterArea,new MeterInterval("",this.range,this.dialOutlinePaint,new BasicStroke(1.0),null));
Iterator iterator=this.intervals.iterator();
while(iterator.hasNext()){
MeterInterval interval=(MeterInterval)iterator.next();
drawArcForInterval(g2,meterArea,interval);
}
Number n=data.getValue();

1.0847548749623188
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<866,880>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double transY1=rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation);
State s=(State)state;

1.0843198999545385
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<230,242>

-------- No Patch ---------


-------- Similar Code ---------
item.setDataset(dataset);
item.setDatasetIndex(datasetIndex);
if(getTreatLegendShapeAsLine()){
item.setLineVisible(true);
item.setLine(shape);
item.setLinePaint(paint);
item.setShapeVisible(false);
}else {
Paint outlinePaint=lookupSeriesOutlinePaint(series);
Stroke outlineStroke=lookupSeriesOutlineStroke(series);
item.setOutlinePaint(outlinePaint);
item.setOutlineStroke(outlineStroke);
}

1.0825338193655814
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1017,1031>

-------- No Patch ---------


-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double dx=0.0;
double dy=0.0;
if(dataset instanceof VectorXYDataset){
dx=((VectorXYDataset)dataset).getVectorXValue(series,item);
dy=((VectorXYDataset)dataset).getVectorYValue(series,item);
}
double xx0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());

1.0804080071682467
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<224,235>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
areaState.setSeriesArea(new Polygon());
areaState.setLastSeriesPoints(areaState.getCurrentSeriesPoints());
areaState.setCurrentSeriesPoints(new Stack());
double transY2=rangeAxis.valueToJava2D(ph1,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getSeriesArea().addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getSeriesArea().addPoint((int)transY2,(int)transX1);
}
}

1.0802196311656607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<429,449>

-------- No Patch ---------


-------- Similar Code ---------
Line2D line;
PlotOrientation orientation=plot.getOrientation();
if(orientation.equals(PlotOrientation.HORIZONTAL)){
line=new Line2D.Double(yy0,xx0,yy1,xx1);
}else {
line=new Line2D.Double(xx0,yy0,xx1,yy1);
}
g2.setPaint(getItemPaint(series,item,selected));
g2.setStroke(getItemStroke(series,item,selected));
g2.draw(line);
double dxx=(xx1-xx0);

1.0796251325874628
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<240,253>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getXValue(series,item);
uvalue=lvalue;
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}
}

1.0795621528954022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<768,775>

-------- No Patch ---------


-------- Similar Code ---------
if((i-offset)>=0){
TimeSeriesDataItem item=source.getRawDataItem(i-offset);
RegularTimePeriod p=item.getPeriod();
Number v=item.getValue();
long currentIndex=p.getSerialIndex();
if(currentIndex>serialLimit){
if(v!=null){
sum=sum+v.doubleValue();
n=n+1;
}
}else {
finished=true;
}
}

1.0789563066840742
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<146,161>

-------- No Patch ---------


-------- Similar Code ---------
double y1=dataset.getYValue(series,item);
boolean nullPoint=false;
if(Double.isNaN(y1)){
y1=0.0;
nullPoint=true;
}
double ph1=getPreviousHeight(tdataset,series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1+ph1,dataArea,plot.getRangeAxisEdge());
Paint seriesPaint=getItemPaint(series,item,selected);

1.0788555448736976
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<409,423>

-------- No Patch ---------


-------- Similar Code ---------
pointer.closePath();
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,midY-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.078845563769956
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/MiddlePinNeedle.java<94,108>


-------- Patch ---------
copy.closePath();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
item=new Area(clone);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
item.add(new Area(copy));
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ohlc.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.078721532918752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1396,1408>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ixyd.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.078721532918752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1442,1454>

-------- No Patch ---------


-------- Similar Code ---------
boolean itemContributesToXBounds=false;
boolean itemContributesToYBounds=false;
double x=item.getXValue();
if(!Double.isNaN(x)){
if(x<=this.minX||x>=this.maxX){
itemContributesToXBounds=true;
}
}
if(item.getY()!=null){
double y=item.getYValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
itemContributesToYBounds=true;
}
}
}

1.0786139117440658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<267,282>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=intervalXYData.getStartXValue(series,item);
uvalue=intervalXYData.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0784977350987162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<753,762>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drawHorizontalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}else if(orientation==PlotOrientation.VERTICAL){
drawVerticalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}

1.0784713479582613
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<340,347>

-------- No Patch ---------


-------- Similar Code ---------
g2.fill(circle);
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(circle);
if(isItemLabelVisible(series,item,selected)){
if(orientation==PlotOrientation.VERTICAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transX,transY,false);
}else if(orientation==PlotOrientation.HORIZONTAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transY,transX,false);
}
}

1.0764631476559017
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<239,253>

-------- No Patch ---------


-------- Similar Code ---------
if(shape.intersects(dataArea)){
g2.setPaint(getPaint(dataset,series,item,selected));
g2.fill(shape);
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}
}

1.0758603952257975
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<459,475>

-------- No Patch ---------


-------- Similar Code ---------
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(stroke);
g2.fill(hotspot);
if(isOutline()){
g2.setStroke(lookupSeriesOutlineStroke(series));
g2.setPaint(lookupSeriesOutlinePaint(series));
g2.draw(hotspot);
}

1.075766987309229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<351,366>

-------- No Patch ---------


-------- Similar Code ---------
for(;i>=0;--i){
ValueDataset data=this.datasets[i];
if(data!=null&&data.getValue()!=null){
value=(data.getValue().doubleValue())%this.revolutionDistance;
value=value/this.revolutionDistance*360;
current=i%x;
this.seriesNeedle[current].draw(g2,needleArea,value);
}
}

1.0755569857687763
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<682,692>

-------- No Patch ---------


-------- Similar Code ---------
{
shape=getItemShape(series,item,selected);
if(plot.getOrientation()==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(!nullPoint){
if(getShapePaint()!=null){
g2.setPaint(getShapePaint());
}else {
g2.setPaint(seriesPaint);
}
if(getShapeStroke()!=null){
g2.setStroke(getShapeStroke());
}else {
g2.setStroke(seriesStroke);
}
g2.draw(shape);
}
}

1.0749129671191744
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<541,566>

-------- No Patch ---------


-------- Similar Code ---------
Object[] result=new Object[4];
result[0]=dataset.getSeriesKey(series).toString();
Number x=dataset.getX(series,item);
DateFormat xf=getXDateFormat();
if(xf!=null){
result[1]=xf.format(x);
}else {
result[1]=getXFormat().format(x);
}
Number y=dataset.getY(series,item);

1.074182786981965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<199,211>

-------- No Patch ---------


-------- Similar Code ---------
Object[] result=new Object[4];
result[0]=dataset.getSeriesKey(series).toString();
Number x=dataset.getX(series,item);
DateFormat xf=getXDateFormat();
if(xf!=null){
result[1]=xf.format(x);
}else {
result[1]=getXFormat().format(x);
}
Number y=dataset.getY(series,item);

1.074182786981965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<205,217>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number lvalue=bx.getMinRegularValue(series,item);
if(lvalue==null){
lvalue=bx.getValue(series,item);
}
Number uvalue=bx.getMaxRegularValue(series,item);
if(uvalue==null){
uvalue=bx.getValue(series,item);
}
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}

1.074114181060732
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1054,1069>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}
getFrame().draw(g2,target);
getFrame().getInsets().trim(target);
target=trimPadding(target);
double base=this.axis.getLowerBound();

1.0736966923481068
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/PaintScaleLegend.java<537,546>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotImages()){
Image image=getImage(plot,series,item,transX1,transY1);
if(image!=null){
Point hotspot=getImageHotspot(plot,series,item,transX1,transY1,image);
g2.drawImage(image,(int)(transX1-hotspot.getX()),(int)(transY1-hotspot.getY()),null);
entityArea=new Rectangle2D.Double(transX1-hotspot.getX(),transY1-hotspot.getY(),image.getWidth(null),image.getHeight(null));
}
}

1.0734640300031317
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<887,899>

-------- No Patch ---------


-------- Similar Code ---------
pointer.closePath();
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,plotArea.getMaxY()-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.0724546203255976
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/PinNeedle.java<92,106>


-------- Repeated Patch ---------
item=new Area(clone);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
double x1=axis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double x2=axis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(Math.min(x1,x2),dataArea.getMinY(),Math.abs(x2-x1),dataArea.getWidth());
}else {
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(x1,x2),dataArea.getWidth(),Math.abs(x2-x1));
}
Paint paint=plot.getDomainTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.0723353220000231
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1112,1130>

-------- No Patch ---------


-------- Similar Code ---------
double y1=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double y2=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(y1,y2),dataArea.getWidth(),Math.abs(y2-y1));
}else {
band=new Rectangle2D.Double(Math.min(y1,y2),dataArea.getMinY(),Math.abs(y2-y1),dataArea.getHeight());
}
Paint paint=plot.getRangeTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.0723353220000231
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1148,1165>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1291,1294>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1295,1298>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1306,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1310,1313>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1415,1418>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1419,1422>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1430,1433>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1434,1437>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1614,1617>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1618,1621>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1629,1632>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0718526086755893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1633,1636>

-------- No Patch ---------


-------- Similar Code ---------
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double x=x1;
double y=Double.isNaN(y1)?getRangeBase():y1;
double transX1=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());

1.0716657924114252
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<360,372>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemLineVisible(series,item)){
if(this.drawSeriesLineAsPath){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}else {
drawPrimaryLine(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}
}

1.0713378480624467
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<771,781>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double transX=domainAxis.valueToJava2D(x,dataArea,xAxisLocation)-adjx;
double transY=rangeAxis.valueToJava2D(y,dataArea,yAxisLocation)-adjy;
g2.setPaint(getItemPaint(series,item,selected));
PlotOrientation orientation=plot.getOrientation();
if(orientation==PlotOrientation.HORIZONTAL){
g2.fillRect((int)transY,(int)transX,this.dotHeight,this.dotWidth);
}else if(orientation==PlotOrientation.VERTICAL){
g2.fillRect((int)transX,(int)transY,this.dotWidth,this.dotHeight);
}
int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);

1.071217815546677
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDotRenderer.java<240,257>

-------- No Patch ---------


-------- Similar Code ---------
if(this.additionalItemLabelGenerator==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,false);
Paint paint=getItemLabelPaint(series,item,false);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=this.additionalItemLabelGenerator.generateLabel(dataset,series,item);
ItemLabelPosition position=getNegativeItemLabelPosition(series,item,false);
Point2D anchorPoint=calculateLabelAnchorPoint(position.getItemLabelAnchor(),x,y,orientation);
TextUtilities.drawRotatedString(label,g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getTextAnchor(),position.getAngle(),position.getRotationAnchor());

1.0704469040036928
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<264,282>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value<0.0){
total=total+value;
}
}
}
minimum=Math.min(minimum,total);
}

1.0700443451828223
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1970,1985>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
total=total+value;
}
}
}
maximum=Math.max(maximum,total);
}

1.0700443451828223
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2010,2024>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getStartYValue(series,item);
}else if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getLowValue(series,item);
}else {
value=dataset.getYValue(series,item);
}
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
}
}

1.0699568071412382
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1682,1701>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value;
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getEndYValue(series,item);
}else if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getHighValue(series,item);
}else {
value=dataset.getYValue(series,item);
}
if(!Double.isNaN(value)){
maximum=Math.max(maximum,value);
}
}

1.0699568071412382
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1800,1817>

-------- No Patch ---------


-------- Similar Code ---------
if(domainAxis==null){
throw new IllegalArgumentException("Null \'domainAxis\' argument.");
}
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'rangeAxis\' argument.");
}
this.data=data;
this.xDataRange=calculateXDataRange(data);
this.yDataRange=calculateYDataRange(data);
this.domainAxis=domainAxis;
this.domainAxis.setPlot(this);
this.domainAxis.addChangeListener(this);
this.rangeAxis=rangeAxis;

1.069133380790653
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<197,210>


-------- Patch ---------
if(start==null){
throw new IllegalArgumentException("Null \'rangeAxis\' argument.");
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.index=data;
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.item=calculateXDataRange(index);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.clone=calculateYDataRange(index);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data=domainAxis;
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.setPlot(this);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.addChangeListener(this);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.start=rangeAxis;
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(source==null){
throw new IllegalArgumentException("Null \'source\' argument.");
}
double[][] clone=new double[source.length][];
for(int i=0;i<source.length;i++){
if(source[i]!=null){
double[] row=new double[source[i].length];
System.arraycopy(source[i],0,row,0,source[i].length);
clone[i]=row;
}
}
return clone;

1.0690401143534531
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<100,111>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,item);
if(!Double.isNaN(v)){
if(this.renderAsPercentages){
v=v/total;
}
if(v>0){
positiveBase=positiveBase+v;
}else {
negativeBase=negativeBase+v;
}
}
}

1.068748011922445
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<279,292>

-------- No Patch ---------


-------- Similar Code ---------
if(this.barAlignmentFactor>=0.0&&this.barAlignmentFactor<=1.0){
double x=ixyd.getXValue(series,item);
double interval=endX-startX;
startX=x-interval*this.barAlignmentFactor;
endX=startX+interval;
}

1.0684484632683677
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<866,871>

-------- No Patch ---------


-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);
g2.draw(new Line2D.Double(yyMax,xx,yyQ3Median,xx));

1.0681130611074776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<417,436>

-------- No Patch ---------


-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);
g2.draw(new Line2D.Double(xx,yyMax,xx,yyQ3Median));

1.0681130611074776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<560,579>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotArea()&&item>0&&this.pArea!=null&&(item==(itemCount-1)||Double.isNaN(y1))){
double transY2=rangeAxis.valueToJava2D(getRangeBase(),dataArea,plot.getRangeAxisEdge());
transY2=restrictValueToDataArea(transY2,plot,dataArea);
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY2,(int)transX1);
}
g2.fill(this.pArea);
if(isOutline()){
g2.setStroke(plot.getOutlineStroke());
g2.setPaint(plot.getOutlinePaint());
g2.draw(this.pArea);
}
this.pArea=null;
}

1.0662969738814605
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<478,508>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' array.");
}
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
double avg=calculateMean(data);
double sum=0.0;
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}
return Math.sqrt(sum/(data.length-1));

1.0659782212426354
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<310,323>


-------- Patch ---------
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' array.");
}
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
double avg=calculateMean(data);
double sum=0.0;
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}
return Math.sqrt(sum/(data.length-1));

1.0659782212426354
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<310,323>


-------- Repeated Patch ---------
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if((!getPlotLines())||((!(domainAxis instanceof CyclicNumberAxis))&&(!(rangeAxis instanceof CyclicNumberAxis)))){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double xn=dataset.getXValue(series,item-1);
double yn=dataset.getYValue(series,item-1);
if(Double.isNaN(yn)){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double[] x=new double[2];

1.0657207731655192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<145,161>

-------- No Patch ---------


-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double z=0.0;
if(dataset instanceof XYZDataset){
z=((XYZDataset)dataset).getZValue(series,item);
}
Paint p=this.paintScale.getPaint(z);
double xx0=domainAxis.valueToJava2D(x+this.xOffset,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y+this.yOffset,dataArea,plot.getRangeAxisEdge());
double xx1=domainAxis.valueToJava2D(x+this.blockWidth,dataArea,plot.getDomainAxisEdge());

1.065293417398771
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<353,365>

-------- No Patch ---------


-------- Similar Code ---------
if(info!=null){
info.setPlotArea(area);
}
RectangleInsets insets=getInsets();
insets.trim(area);
drawBackground(g2,area);
Rectangle2D interior=(Rectangle2D)area.clone();
this.padding.trim(interior);
int midX=(int)(interior.getX()+(interior.getWidth()/2));
int midY=(int)(interior.getY()+(interior.getHeight()/2));
int stemTop=(int)(interior.getMinY()+getBulbRadius());

1.0635058775071253
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1116,1130>

-------- No Patch ---------


-------- Similar Code ---------
if(data!=null){
PlotOrientation orientation=plot.getOrientation();
double space=0.0;
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int columns=data.getColumnCount();
double categoryMargin=0.0;
if(columns>1){
categoryMargin=xAxis.getCategoryMargin();
}
double used=space*(1-xAxis.getLowerMargin());
if(columns>0){
state.setBarWidth(Math.min(used/columns,maxWidth));
}else {
state.setBarWidth(Math.min(used,maxWidth));
}
}

1.0629328170546302
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer.java<242,267>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double ph0=getPreviousHeight(tdataset,series,item-1);
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0+ph0,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getLine().setLine(transX0,transY0,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getLine().setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.getLine());
}

1.0627646073320607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<464,483>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesKey!=null){
result+=firstParameter?"?":"&amp;";
String s=null;
try{
s=URLEncoder.encode(seriesKey.toString(),"UTF-8");
}catch (UnsupportedEncodingException e) {
  s=seriesKey.toString();
}

result+=this.seriesParameterName+"=";
firstParameter=false;
}
long x=(long)dataset.getXValue(series,item);
String xValue=this.dateFormat.format(new Date(x));

1.0623982653012867
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/TimeSeriesURLGenerator.java<182,196>


-------- Patch ---------
if(this.data.size()>0){
result+=this.end+"=";
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
firstParameter=false;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
result+=this.end+"=";
firstParameter=false;

for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(Double.isNaN(y0)||Double.isNaN(y1)){
return ;
}
double yy0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double yy1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
double x0=intervalDataset.getStartXValue(series,item);
double xx0=domainAxis.valueToJava2D(x0,dataArea,xAxisLocation);
double x1=intervalDataset.getEndXValue(series,item);
double xx1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double intervalW=xx1-xx0;

1.0611758173174666
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<237,253>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x0)||Double.isNaN(y0)){
return ;
}
double xx0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y0,dataArea,location);
double yy=rangeAxis.valueToJava2D(y,dataArea,location);
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yy0,xx0,yy,xx));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx0,yy0,xx,yy));
}
}

1.0608274022296058
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<418,435>

-------- No Patch ---------


-------- Similar Code ---------
if(yyQ1Median<yyQ3Median){
box=new Rectangle2D.Double(yyQ1Median,xx-width/2,yyQ3Median-yyQ1Median,width);
}else {
box=new Rectangle2D.Double(yyQ3Median,xx-width/2,yyQ1Median-yyQ3Median,width);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);

1.0598779001376317
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<447,461>

-------- No Patch ---------


-------- Similar Code ---------
if(yyQ1Median>yyQ3Median){
box=new Rectangle2D.Double(xx-width/2,yyQ3Median,width,yyQ1Median-yyQ3Median);
}else {
box=new Rectangle2D.Double(xx-width/2,yyQ1Median,width,yyQ3Median-yyQ1Median);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);

1.0598779001376317
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<590,604>

-------- No Patch ---------


-------- Similar Code ---------
if(yf!=null){
result[2]=yf.format(y);
}else {
result[2]=getYFormat().format(y);
}
Number z=dataset.getZ(series,item);
if(this.zDateFormat!=null){
result[3]=this.zDateFormat.format(z);
}else {
result[3]=this.zFormat.format(z);
}

1.0571425323717942
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<213,226>

-------- No Patch ---------


-------- Similar Code ---------
if(yf!=null){
result[2]=yf.format(y);
}else {
result[2]=getYFormat().format(y);
}
Number z=dataset.getZ(series,item);
if(this.zDateFormat!=null){
result[3]=this.zDateFormat.format(z);
}else {
result[3]=this.zFormat.format(z);
}

1.0571425323717942
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<219,232>

-------- No Patch ---------


-------- Similar Code ---------
if(value>0.0){
translatedBase=rangeAxis.valueToJava2D(positiveBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(positiveBase+value,dataArea,edgeR);
}else {
translatedBase=rangeAxis.valueToJava2D(negativeBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(negativeBase+value,dataArea,edgeR);
}
RectangleEdge edgeD=plot.getDomainAxisEdge();
double startX=intervalDataset.getStartXValue(series,item);
if(Double.isNaN(startX)){
return ;
}
double translatedStartX=domainAxis.valueToJava2D(startX,dataArea,edgeD);

1.0569365849664139
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<297,316>

-------- No Patch ---------


-------- Similar Code ---------
{
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
if(generator!=null){
Font labelFont=getItemLabelFont(series,item,selected);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=generator.generateLabel(dataset,series,item);
ItemLabelPosition position=null;
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}
Point2D anchorPoint=calculateLabelAnchorPoint(position.getItemLabelAnchor(),x,y,orientation);
TextUtilities.drawRotatedString(label,g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getTextAnchor(),position.getAngle(),position.getRotationAnchor());
}
}

1.0558506619141212
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1892,1923>

-------- No Patch ---------


-------- Similar Code ---------
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
int itemCount=dataset.getItemCount(series);
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double transX2=domainAxis.valueToJava2D(x2,dataArea,plot.getDomainAxisEdge());
double transY2=rangeAxis.valueToJava2D(y2,dataArea,plot.getRangeAxisEdge());
double transZero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());

1.0538853354013558
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<305,324>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(y0)){
y0=0.0;
}
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double transX2=domainAxis.valueToJava2D(x2,dataArea,plot.getDomainAxisEdge());
double transY2=rangeAxis.valueToJava2D(y2,dataArea,plot.getRangeAxisEdge());
double transZero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());

1.0536374965712254
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<515,536>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double positive=base;
double negative=base;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
double value=number.doubleValue();
if(value>0.0){
positive=positive+value;
}
if(value<0.0){
negative=negative+value;
}
}
}
minimum=Math.min(minimum,negative);
maximum=Math.max(maximum,positive);
}

1.051855939956911
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1860,1879>

-------- No Patch ---------


-------- Similar Code ---------
double yHigh=hld.getHighValue(series,item);
double yLow=hld.getLowValue(series,item);
if(!Double.isNaN(yHigh)&&!Double.isNaN(yLow)){
double yyHigh=rangeAxis.valueToJava2D(yHigh,dataArea,location);
double yyLow=rangeAxis.valueToJava2D(yLow,dataArea,location);
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyLow,xx,yyHigh,xx));
entityArea=new Rectangle2D.Double(Math.min(yyLow,yyHigh),xx-1.0,Math.abs(yyHigh-yyLow),2.0);
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyLow,xx,yyHigh));
entityArea=new Rectangle2D.Double(xx-1.0,Math.min(yyLow,yyHigh),2.0,Math.abs(yyHigh-yyLow));
}
}

1.0515386219239957
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<346,364>

-------- No Patch ---------


-------- Similar Code ---------
this.barPainter.paintBar(g2,this,series,item,selected,bar,barBase);
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,!positive);
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);

1.0505265539531434
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<964,981>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorXValue(series,item);
if(delta<0.0){
uvalue=vdataset.getXValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getXValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0503941456259525
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<115,127>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorYValue(series,item);
if(delta<0.0){
uvalue=vdataset.getYValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getYValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0503941456259525
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<171,183>

-------- No Patch ---------


-------- Similar Code ---------
{
int lower=0;
int upper=this.labels.size()-1;
while(upper>lower){
if(lower<upper-1){
PieLabelRecord r0=getPieLabelRecord(lower);
PieLabelRecord r1=getPieLabelRecord(lower+1);
if(r1.getLowerY()<r0.getUpperY()){
double adjust=r0.getUpperY()-r1.getLowerY()+this.minGap;
r1.setAllocatedY(r1.getAllocatedY()+adjust);
}
}
PieLabelRecord r2=getPieLabelRecord(upper-1);
PieLabelRecord r3=getPieLabelRecord(upper);
if(r2.getUpperY()>r3.getLowerY()){
double adjust=(r2.getUpperY()-r3.getLowerY())+this.minGap;
r3.setAllocatedY(r3.getAllocatedY()+adjust);
}
lower++;
upper--;
}
}

1.0484521610667388
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<113,135>

-------- No Patch ---------


-------- Similar Code ---------
if(properties||copy){
this.popup=createPopupMenu(properties,copy,save,print,zoom);
}

1.046704343690729
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<763,765>

-------- No Patch ---------


-------- Similar Code ---------
if(getShadowsVisible()){
this.barPainter.paintBarShadow(g2,this,series,item,selected,bar,barBase,!this.useYInterval);
}
this.barPainter.paintBar(g2,this,series,item,selected,bar,barBase);
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,!positive);
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());

1.0460723050315914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<960,980>

-------- No Patch ---------


-------- Similar Code ---------
if(data!=null){
float lowest=Float.POSITIVE_INFINITY;
float highest=Float.NEGATIVE_INFINITY;
for(int i=0;i<data[0].length;i++){
float v=data[0][i];
if(v<lowest){
lowest=v;
}
if(v>highest){
highest=v;
}
}
if(lowest<=highest){
result=new Range(lowest,highest);
}
}

1.0452559243183321
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<720,735>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
if(Float.POSITIVE_INFINITY<=Float.NEGATIVE_INFINITY){
result=new Range(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(data!=null){
float lowest=Float.POSITIVE_INFINITY;
float highest=Float.NEGATIVE_INFINITY;
for(int i=0;i<data[0].length;i++){
float v=data[1][i];
if(v<lowest){
lowest=v;
}
if(v>highest){
highest=v;
}
}
if(lowest<=highest){
result=new Range(lowest,highest);
}
}

1.0452559243183321
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<752,767>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<=data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(this.data.size()>0){
if(Float.POSITIVE_INFINITY<=Float.NEGATIVE_INFINITY){
result=new Range(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY);
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
if(Float.POSITIVE_INFINITY<=Float.NEGATIVE_INFINITY){
result=new Range(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY);
}
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
if(Float.POSITIVE_INFINITY<=Float.NEGATIVE_INFINITY){
result=new Range(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY);
}
for(int index=start;index<=data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
if(Float.POSITIVE_INFINITY<=Float.NEGATIVE_INFINITY){
result=new Range(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY);
}
for(int index=start;index<data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Map m2=it2.getAttributes();
if(!m1.equals(m2)){
return false;
}
for(int i=start;i<limit1;i++){
if(c1!=c2){
return false;
}
c1=it1.next();
c2=it2.next();
}
start=limit1;

1.0419945107128328
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AttributedStringUtilities.java<90,102>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerXYDataset){
BoxAndWhiskerXYDataset d=(BoxAndWhiskerXYDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.0415525177702072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGenerator.java<138,146>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerCategoryDataset){
BoxAndWhiskerCategoryDataset d=(BoxAndWhiskerCategoryDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.0415525177702072
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerToolTipGenerator.java<118,127>

-------- No Patch ---------


-------- Similar Code ---------
if(!isNull){
String plainStr=(String)stream.readObject();
result=new AttributedString(plainStr);
char c=stream.readChar();
int start=0;
while(c!=CharacterIterator.DONE){
int limit=stream.readInt();
Map atts=(Map)stream.readObject();
result.addAttributes(atts,start,limit);
start=limit;
c=stream.readChar();
}
}

1.0402454214174512
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/SerialUtilities.java<504,517>

-------- No Patch ---------


-------- Similar Code ---------
 final int s1=d1.toSerial();
 final int s2=d2.toSerial();
 final int start=Math.min(s1,s2);
 final int end=Math.max(s1,s2);
 final int s=toSerial();
if(include==SerialDate.INCLUDE_BOTH){
return (s>=start&&s<=end);
}else if(include==SerialDate.INCLUDE_FIRST){
return (s>=start&&s<end);
}else if(include==SerialDate.INCLUDE_SECOND){
return (s>start&&s<=end);
}else {
return (s>start&&s<end);
}

1.0389836306505642
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/SpreadsheetDate.java<417,434>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
x0=dataset.getXValue(series,item-1);
y0=Double.isNaN(y1)?y1:dataset.getYValue(series,item-1);
x=x0;
y=Double.isNaN(y0)?getRangeBase():y0;
transX0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
transY0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
transY0=restrictValueToDataArea(transY0,plot,dataArea);
if(Double.isNaN(y1)){
transX1=transX0;
transY0=transY1;
}
if(transY0!=transY1){
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY0);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY0,(int)transX1);
}
}
}

1.0384743635124738
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<404,434>

-------- No Patch ---------


-------- Similar Code ---------
{
Object[] result=new Object[3];
result[0]=dataset.getSeriesKey(series).toString();
double x=dataset.getXValue(series,item);
if(this.xDateFormat!=null){
result[1]=this.xDateFormat.format(new Date((long)x));
}else {
result[1]=this.xFormat.format(x);
}
double y=dataset.getYValue(series,item);
if(Double.isNaN(y)&&dataset.getY(series,item)==null){
result[2]=this.nullYString;
}else {
if(this.yDateFormat!=null){
result[2]=this.yDateFormat.format(new Date((long)y));
}else {
result[2]=this.yFormat.format(y);
}
}
return result;
}

1.0354944827238952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<276,301>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=xAxis.getUpperBound();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,end);
}

1.034615214316672
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3650,3664>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=axis.getUpperBound();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,end);
}

1.034615214316672
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3685,3699>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data!=null){
for(int i=0;i<this.data[0].length;i++){
float x=this.data[0][i];
float y=this.data[1][i];
int transX=(int)this.domainAxis.valueToJava2D(x,dataArea,RectangleEdge.BOTTOM);
int transY=(int)this.rangeAxis.valueToJava2D(y,dataArea,RectangleEdge.LEFT);
g2.fillRect(transX,transY,1,1);
}
}

1.0336370876082002
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<616,629>


-------- Repeated Patch ---------
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=this.data[0].end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
item.fillRect(index,clone,1,1);
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(Double.isNaN(y0)){
y0=0.0;
}
double[] stack0=getStackValues(tdataset,series,Math.max(item-1,0));
int itemCount=dataset.getItemCount(series);
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double[] stack2=getStackValues(tdataset,series,Math.min(item+1,itemCount-1));

1.0311577441972923
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<238,253>

-------- No Patch ---------


-------- Similar Code ---------
{
Range range=getRange();
double start=range.getLowerBound();
double end=range.getUpperBound();
double log1=calculateLog(start);
double log2=calculateLog(end);
double length=log2-log1;
Range adjusted=null;
if(isInverted()){
double logA=log1+length*(1-upperPercent);
double logB=log1+length*(1-lowerPercent);
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}else {
double logA=log1+length*lowerPercent;
double logB=log1+length*upperPercent;
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}
setRange(adjusted);
}

1.0245912865420144
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<800,819>

-------- No Patch ---------


-------- Similar Code ---------
if(s1==null){
return (s2==null);
}
if(s2==null){
return false;
}
AttributedCharacterIterator it1=s1.getIterator();
AttributedCharacterIterator it2=s2.getIterator();
char c1=it1.first();
char c2=it2.first();
int start=0;

1.0169521005372004
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AttributedStringUtilities.java<71,81>

-------- No Patch ---------


-------- Similar Code ---------
int categoryCount=dataset.getColumnCount();
int seriesIndex=dataset.getRowIndex(seriesKey);
int seriesCount=dataset.getRowCount();
double start=getCategoryStart(categoryIndex,categoryCount,area,edge);
double end=getCategoryEnd(categoryIndex,categoryCount,area,edge);
double width=end-start;
if(seriesCount==1){
return start+width/2.0;
}else {
double gap=(width*itemMargin)/(seriesCount-1);
double ww=(width*(1-itemMargin))/seriesCount;
return start+(seriesIndex*(ww+gap));
}

1.0053457231574923
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<714,728>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double[] positive=new double[groupCount];
double[] negative=new double[groupCount];
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
positive[groupIndex[series]]=positive[groupIndex[series]]+value;
}
if(value<0.0){
negative[groupIndex[series]]=negative[groupIndex[series]]+value;
}
}
}
for(int g=0;g<groupCount;g++){
minimum[g]=Math.min(minimum[g],negative[g]);
maximum[g]=Math.max(maximum[g],positive[g]);
}
}

1.0041388648018295
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1918,1942>

-------- No Patch ---------


-------- Similar Code ---------
double size=range.getUpperBound()-range.getLowerBound();
if(size>this.period){
this.period=size;
}
super.setRange(range,turnOffAutoRange,notify);

0.9818612622747293
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<896,900>

-------- No Patch ---------


-------- Similar Code ---------
if(this.chart==null){
return ;
}
Graphics2D g2=(Graphics2D)g.create();
Dimension size=getSize();
Insets insets=getInsets();
Rectangle2D available=new Rectangle2D.Double(insets.left,insets.top,size.getWidth()-insets.left,size.getHeight()-insets.top);
boolean scale=false;
double drawWidth=available.getWidth();
double drawHeight=available.getHeight();
this.scaleX=1.0;

0.9811651899615095
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<1608,1624>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
double xx=valueToJava2D(currentTickValue,dataArea,edge);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=valueToString(currentTickValue);
}
Rectangle2D bounds=TextUtilities.getTextBounds(tickLabel,g2,g2.getFontMetrics());

0.9807942929081889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<585,598>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
double yy=valueToJava2D(currentTickValue,dataArea,edge);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=valueToString(currentTickValue);
}
Rectangle2D bounds=TextUtilities.getTextBounds(tickLabel,g2,g2.getFontMetrics());

0.9807942929081889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<679,692>

-------- No Patch ---------


-------- Similar Code ---------
if(toolTip!=null||url!=null){
addEntity(info,new Rectangle2D.Float(xx,yy,(float)size.width,(float)size.height),rendererIndex,toolTip,url);
}

0.979239475051053
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/XYTitleAnnotation.java<325,329>

-------- No Patch ---------


-------- Similar Code ---------
Size2D result=new Size2D();
fetchLegendItems();
if(this.items.isEmpty()){
return result;
}
BlockContainer container=this.wrapper;
if(container==null){
container=this.items;
}
RectangleConstraint c=toContentConstraint(constraint);
Size2D size=container.arrange(g2,c);
result.height=calculateTotalHeight(size.height);
result.width=calculateTotalWidth(size.width);
return result;

0.9780752372211721
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<492,505>

-------- No Patch ---------


-------- Similar Code ---------
if(position==RectangleEdge.RIGHT){
Size2D size=t.arrange(g2,constraint);
titleArea=createAlignedRectangle2D(size,area,HorizontalAlignment.RIGHT,t.getVerticalAlignment());
retValue=t.draw(g2,titleArea,p);
area.setRect(area.getX(),area.getY(),area.getWidth()-size.width,area.getHeight());
}else if(position==RectangleEdge.LEFT){
Size2D size=t.arrange(g2,constraint);
titleArea=createAlignedRectangle2D(size,area,HorizontalAlignment.LEFT,t.getVerticalAlignment());
retValue=t.draw(g2,titleArea,p);
area.setRect(area.getX()+size.width,area.getY(),area.getWidth()-size.width,area.getHeight());
}else {
throw new RuntimeException("Unrecognised title position.");
}

0.9772802385113211
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1338,1357>

-------- No Patch ---------


-------- Similar Code ---------
if(this.coordinateType==XYCoordinateType.DATA){
maxW=this.maxWidth;
maxH=this.maxHeight;
}
RectangleConstraint rc=new RectangleConstraint(new Range(0,maxW),new Range(0,maxH));
Size2D size=this.title.arrange(g2,rc);
Rectangle2D titleRect=new Rectangle2D.Double(0,0,size.width,size.height);
Point2D anchorPoint=RectangleAnchor.coordinates(titleRect,this.anchor);
xx=xx-(float)anchorPoint.getX();
yy=yy-(float)anchorPoint.getY();

0.9710877146877965
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/XYTitleAnnotation.java<295,308>

-------- No Patch ---------


-------- Similar Code ---------
if(size>this.period){
this.period=size;
}
super.setAutoRangeMinimumSize(size,notify);

0.967409338912719
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<865,868>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=getTickUnit().valueToString(currentTickValue);
}
TextAnchor anchor=null;
TextAnchor rotationAnchor=null;

0.9661521462582381
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1201,1211>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=getTickUnit().valueToString(currentTickValue);
}
TextAnchor anchor=null;
TextAnchor rotationAnchor=null;

0.9661521462582381
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1298,1309>

-------- No Patch ---------


-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
Number n=new Double(get(i,j));
return n;

0.9597543343315927
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<103,108>

-------- No Patch ---------


-------- Similar Code ---------
int result=HashUtilities.hashCode(193,this.fillPaint);
result=HashUtilities.hashCode(result,this.highlightPaint);
result=HashUtilities.hashCode(result,this.outlinePaint);
result=HashUtilities.hashCode(result,this.outlineStroke);
result=HashUtilities.hashCode(result,this.rotateX);
result=HashUtilities.hashCode(result,this.rotateY);
result=HashUtilities.hashCode(result,this.size);
return result;

0.9585280322092
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/MeterNeedle.java<394,401>

-------- No Patch ---------


-------- Similar Code ---------
if(this.topBlock!=null){
RectangleConstraint c1=new RectangleConstraint(widthRange,heightRange);
Size2D size=this.topBlock.arrange(g2,c1);
w[0]=size.width;
h[0]=size.height;
}

0.9533565603494981
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<342,348>

-------- No Patch ---------


-------- Similar Code ---------
if(this.leftBlock!=null){
RectangleConstraint c3=new RectangleConstraint(widthRange,heightRange3);
Size2D size=this.leftBlock.arrange(g2,c3);
w[2]=size.width;
h[2]=size.height;
}

0.9533565603494981
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<358,364>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rightBlock!=null){
RectangleConstraint c4=new RectangleConstraint(widthRange2,heightRange3);
Size2D size=this.rightBlock.arrange(g2,c4);
w[3]=size.width;
h[3]=size.height;
}

0.9533565603494981
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<366,372>

-------- No Patch ---------


-------- Similar Code ---------
if(this.centerBlock!=null){
RectangleConstraint c5=new RectangleConstraint(widthRange3,heightRange3);
Size2D size=this.centerBlock.arrange(g2,c5);
w[4]=size.width;
h[4]=size.height;
}

0.9533565603494981
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<377,386>

-------- No Patch ---------


-------- Similar Code ---------
double log=Math.log(size)/LOG_10_VALUE;
double higher=Math.ceil(log);
return new NumberTickUnit(Math.pow(10,higher),new DecimalFormat("0.0E0"));

0.9454251136117638
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/StandardTickUnitSource.java<101,104>

-------- No Patch ---------


-------- Similar Code ---------
if(this.bottomBlock!=null){
Range heightRange2=Range.shift(heightRange,-h[0],false);
RectangleConstraint c2=new RectangleConstraint(widthRange,heightRange2);
Size2D size=this.bottomBlock.arrange(g2,c2);
w[1]=size.width;
h[1]=size.height;
}

0.9454079739927493
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<349,356>

-------- No Patch ---------


-------- Similar Code ---------
String[] result=new String[this.symbols.size()];
result=(String[])this.symbols.toArray(result);
return result;

0.9449632652670803
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<173,175>

-------- No Patch ---------


-------- Similar Code ---------
RectangleInsets insets=getTickLabelInsets();
Size2D size=block.calculateDimensions(g2);
Rectangle2D box=new Rectangle2D.Double(0.0,0.0,size.getWidth(),size.getHeight());
Shape rotatedBox=ShapeUtilities.rotateShape(box,position.getAngle(),0.0,0.0);
double w=rotatedBox.getBounds2D().getWidth()+insets.getLeft();
return w;

0.9289068947716815
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1245,1253>

-------- No Patch ---------


-------- Similar Code ---------
RectangleInsets insets=getTickLabelInsets();
Size2D size=block.calculateDimensions(g2);
Rectangle2D box=new Rectangle2D.Double(0.0,0.0,size.getWidth(),size.getHeight());
Shape rotatedBox=ShapeUtilities.rotateShape(box,position.getAngle(),0.0,0.0);
double h=rotatedBox.getBounds2D().getHeight()+insets.getTop();
return h;

0.9289068947716815
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1270,1278>

-------- No Patch ---------


-------- Similar Code ---------
if(this.topBlock!=null){
Size2D size=this.topBlock.arrange(g2,c1);
w[0]=size.width;
h[0]=size.height;
}

0.9274771524796361
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<282,286>

-------- No Patch ---------


-------- Similar Code ---------
if(this.bottomBlock!=null){
Size2D size=this.bottomBlock.arrange(g2,c1);
w[1]=size.width;
h[1]=size.height;
}

0.9274771524796361
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<287,291>

-------- No Patch ---------


-------- Similar Code ---------
if(this.leftBlock!=null){
Size2D size=this.leftBlock.arrange(g2,c2);
w[2]=size.width;
h[2]=size.height;
}

0.9274771524796361
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<295,299>

-------- No Patch ---------


-------- Similar Code ---------
List result=new java.util.ArrayList();
Font tickLabelFont=getTickLabelFont();
g2.setFont(tickLabelFont);
if(isAutoTickUnitSelection()){
selectAutoTickUnit(g2,dataArea,edge);
}
TickUnit tu=getTickUnit();
double size=tu.getSize();
int count=calculateVisibleTickCount();
double lowestTickValue=calculateLowestVisibleTickValue();

0.9241116279351514
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1172,1184>

-------- No Patch ---------


-------- Similar Code ---------
result.clear();
Font tickLabelFont=getTickLabelFont();
g2.setFont(tickLabelFont);
if(isAutoTickUnitSelection()){
selectAutoTickUnit(g2,dataArea,edge);
}
TickUnit tu=getTickUnit();
double size=tu.getSize();
int count=calculateVisibleTickCount();
double lowestTickValue=calculateLowestVisibleTickValue();

0.9241116279351514
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1269,1280>

-------- No Patch ---------


-------- Similar Code ---------
super(size,minorTickCount);
if(formatter==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}
this.formatter=formatter;

0.9230284476623407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberTickUnit.java<101,105>

-------- No Patch ---------

-------- Original Code ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYSeries copy=(XYSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
XYDataItem item=(XYDataItem)this.data.get(index);
XYDataItem clone=(XYDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Unable to add cloned data item.");
}

}
}
return copy;

3.299358120396766
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<926,940>

-------- No Patch ---------


-------- Similar Code ---------
{
CompassPlot clone=(CompassPlot)super.clone();
if(this.circle1!=null){
clone.circle1=(Ellipse2D)this.circle1.clone();
}
if(this.circle2!=null){
clone.circle2=(Ellipse2D)this.circle2.clone();
}
if(this.a1!=null){
clone.a1=(Area)this.a1.clone();
}
if(this.a2!=null){
clone.a2=(Area)this.a2.clone();
}
if(this.rect1!=null){
clone.rect1=(Rectangle2D)this.rect1.clone();
}
clone.datasets=(ValueDataset[])this.datasets.clone();
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
for(int i=0;i<this.datasets.length;++i){
if(clone.datasets[i]!=null){
clone.datasets[i].addChangeListener(clone);
}
}
return clone;
}

3.193043168019889
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<803,832>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues copy=(TimePeriodValues)super.clone();
copy.data=new ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimePeriodValue item=(TimePeriodValue)this.data.get(index);
TimePeriodValue clone=(TimePeriodValue)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  System.err.println("Failed to add cloned item.");
}

}
}
return copy;

3.1326914537301
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<498,513>

-------- No Patch ---------


-------- Similar Code ---------
AbstractXYItemRenderer clone=(AbstractXYItemRenderer)super.clone();
clone.itemLabelGeneratorList=(ObjectList)this.itemLabelGeneratorList.clone();
if(this.baseItemLabelGenerator!=null&&this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(XYItemLabelGenerator)pc.clone();
}
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
if(this.baseToolTipGenerator!=null&&this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(XYToolTipGenerator)pc.clone();
}
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

3.089443541584501
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1701,1723>


-------- Patch ---------
clone.itemLabelGeneratorList=(ObjectList)this.itemLabelGeneratorList.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
AbstractRenderer clone=(AbstractRenderer)super.clone();
if(this.seriesVisibleList!=null){
clone.seriesVisibleList=(BooleanList)this.seriesVisibleList.clone();
}
if(this.seriesVisibleInLegendList!=null){
clone.seriesVisibleInLegendList=(BooleanList)this.seriesVisibleInLegendList.clone();
}
if(this.paintList!=null){
clone.paintList=(PaintList)this.paintList.clone();
}
if(this.fillPaintList!=null){
clone.fillPaintList=(PaintList)this.fillPaintList.clone();
}
if(this.outlinePaintList!=null){
clone.outlinePaintList=(PaintList)this.outlinePaintList.clone();
}

3.0816515061841043
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3162,3186>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
if(this.item!=null){
clone.seriesVisibleList=(BooleanList)this.seriesVisibleList.clone();
}
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.copy!=null){
clone.fillPaintList=(PaintList)this.fillPaintList.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.end!=null){
clone.outlinePaintList=(PaintList)this.outlinePaintList.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

3.0671763344144773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1058,1070>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

3.0671763344144773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1058,1070>

-------- No Patch ---------


-------- Similar Code ---------
clone.foregroundDomainMarkers=(Map)ObjectUtilities.clone(this.foregroundDomainMarkers);
clone.backgroundDomainMarkers=(Map)ObjectUtilities.clone(this.backgroundDomainMarkers);
clone.foregroundRangeMarkers=(Map)ObjectUtilities.clone(this.foregroundRangeMarkers);
clone.backgroundRangeMarkers=(Map)ObjectUtilities.clone(this.backgroundRangeMarkers);
clone.annotations=(List)ObjectUtilities.deepClone(this.annotations);
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}
if(this.fixedLegendItems!=null){
clone.fixedLegendItems=(LegendItemCollection)this.fixedLegendItems.clone();
}

2.9742419556698194
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5698,5718>

-------- No Patch ---------


-------- Similar Code ---------
XYLineAndShapeRenderer clone=(XYLineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.9487721580744837
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1153,1163>


-------- Patch ---------
if(this.clone!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
SpiderWebPlot clone=(SpiderWebPlot)super.clone();
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
clone.seriesOutlineStrokeList=(StrokeList)this.seriesOutlineStrokeList.clone();
return clone;

2.9447036856340203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1610,1617>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.seriesPaintList=(PaintList)this.seriesPaintList.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.seriesOutlinePaintList=(PaintList)this.seriesOutlinePaintList.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultIntervalCategoryDataset clone=(DefaultIntervalCategoryDataset)super.clone();
clone.categoryKeys=(Comparable[])this.categoryKeys.clone();
clone.seriesKeys=(Comparable[])this.seriesKeys.clone();
clone.startData=clone(this.startData);
clone.endData=clone(this.endData);
return clone;

2.942117328819053
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java<753,759>


-------- Patch ---------
clone.categoryKeys=(Comparable[])this.categoryKeys.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.seriesKeys=(Comparable[])this.seriesKeys.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.startData=clone(this.startData);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.endData=clone(this.endData);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
PiePlot clone=(PiePlot)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
if(this.urlGenerator instanceof PublicCloneable){
clone.urlGenerator=(PieURLGenerator)ObjectUtilities.clone(this.urlGenerator);
}
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
if(this.legendLabelGenerator!=null){
clone.legendLabelGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelGenerator);
}
if(this.legendLabelToolTipGenerator!=null){
clone.legendLabelToolTipGenerator=(PieSectionLabelGenerator)ObjectUtilities.clone(this.legendLabelToolTipGenerator);
}
if(this.legendLabelURLGenerator instanceof PublicCloneable){
clone.legendLabelURLGenerator=(PieURLGenerator)ObjectUtilities.clone(this.legendLabelURLGenerator);
}
return clone;

2.9409763693779407
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3636,3657>


-------- Patch ---------
if(clone.dataset!=null){
clone.dataset.addChangeListener(index);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
LegendItem clone=(LegendItem)super.clone();
if(this.seriesKey instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.seriesKey;
clone.seriesKey=(Comparable)pc.clone();
}
clone.shape=ShapeUtilities.clone(this.shape);
if(this.fillPaintTransformer instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.fillPaintTransformer;
clone.fillPaintTransformer=(GradientPaintTransformer)pc.clone();
}
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.924973905892651
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItem.java<1124,1137>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable data=(PublicCloneable)this.seriesKey;
clone.seriesKey=(Comparable)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.shape=ShapeUtilities.clone(this.shape);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.end instanceof PublicCloneable){
PublicCloneable data=(PublicCloneable)this.fillPaintTransformer;
clone.fillPaintTransformer=(GradientPaintTransformer)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.line=ShapeUtilities.clone(this.line);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
AbstractXYItemLabelGenerator clone=(AbstractXYItemLabelGenerator)super.clone();
if(this.xFormat!=null){
clone.xFormat=(NumberFormat)this.xFormat.clone();
}
if(this.yFormat!=null){
clone.yFormat=(NumberFormat)this.yFormat.clone();
}
if(this.xDateFormat!=null){
clone.xDateFormat=(DateFormat)this.xDateFormat.clone();
}
if(this.yDateFormat!=null){
clone.yDateFormat=(DateFormat)this.yDateFormat.clone();
}
return clone;

2.913600725164401
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<362,376>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
if(this.end!=null){
clone.xFormat=(NumberFormat)this.xFormat.clone();
}
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.item!=null){
clone.xDateFormat=(DateFormat)this.xDateFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.copy!=null){
clone.yDateFormat=(DateFormat)this.yDateFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
PlotRenderingInfo clone=(PlotRenderingInfo)super.clone();
if(this.plotArea!=null){
clone.plotArea=(Rectangle2D)this.plotArea.clone();
}
if(this.dataArea!=null){
clone.dataArea=(Rectangle2D)this.dataArea.clone();
}
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
for(int i=0;i<this.subplotInfo.size();i++){
PlotRenderingInfo info=(PlotRenderingInfo)this.subplotInfo.get(i);
clone.subplotInfo.add(info.clone());
}
return clone;

2.8267606099950124
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PlotRenderingInfo.java<246,259>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
if(this.copy!=null){
clone.plotArea=(Rectangle2D)this.plotArea.clone();
}
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.negativeItemLabelPositionList!=null){
clone.negativeItemLabelPositionList=(ObjectList)this.negativeItemLabelPositionList.clone();
}
if(this.createEntitiesList!=null){
clone.createEntitiesList=(BooleanList)this.createEntitiesList.clone();
}
if(this.legendShapeList!=null){
clone.legendShapeList=(ShapeList)this.legendShapeList.clone();
}
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}
clone.listenerList=new EventListenerList();
return clone;

2.7442234486350827
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3238,3260>


-------- Patch ---------
if(this.end!=null){
clone.createEntitiesList=(BooleanList)this.createEntitiesList.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.copy!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.item!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
LineAndShapeRenderer clone=(LineAndShapeRenderer)super.clone();
clone.seriesLinesVisible=(BooleanList)this.seriesLinesVisible.clone();
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.7389726156558574
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java<918,925>


-------- Repeated Patch ---------
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.seriesShapesVisible=(BooleanList)this.seriesShapesVisible.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultKeyedValues clone=(DefaultKeyedValues)super.clone();
clone.keys=(ArrayList)this.keys.clone();
clone.values=(ArrayList)this.values.clone();
clone.indexMap=(HashMap)this.indexMap.clone();
return clone;

2.7389726156558574
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<462,466>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.keys=(ArrayList)this.keys.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.values=(ArrayList)this.values.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYDataItem item=(XYDataItem)this.data.get(index);
return (XYDataItem)item.clone();

2.6532865479204517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<619,620>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
return (TimeSeriesDataItem)item.clone();

2.6532865479204517
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<389,390>

-------- No Patch ---------


-------- Similar Code ---------
KeyToGroupMap result=(KeyToGroupMap)super.clone();
result.defaultGroup=(Comparable)KeyToGroupMap.clone(this.defaultGroup);
result.groups=(List)KeyToGroupMap.clone(this.groups);
result.keyToGroupMap=(Map)KeyToGroupMap.clone(this.keyToGroupMap);
return result;

2.5709882767139405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<259,264>


-------- Patch ---------
result.defaultGroup=(Comparable)KeyToGroupMap.clone(this.defaultGroup);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
result.groups=(List)KeyToGroupMap.clone(this.groups);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
result.keyToGroupMap=(Map)KeyToGroupMap.clone(this.keyToGroupMap);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}
clone.foregroundAnnotations=(List)ObjectUtilities.deepClone(this.foregroundAnnotations);
clone.backgroundAnnotations=(List)ObjectUtilities.deepClone(this.backgroundAnnotations);
if(clone.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}
if(clone.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

2.5092273960999463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1724,1749>

-------- No Patch ---------


-------- Similar Code ---------
LegendGraphic clone=(LegendGraphic)super.clone();
clone.shape=ShapeUtilities.clone(this.shape);
clone.line=ShapeUtilities.clone(this.line);
return clone;

2.4955198806857024
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendGraphic.java<719,722>


-------- Repeated Patch ---------
clone.shape=ShapeUtilities.clone(this.shape);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.line=ShapeUtilities.clone(this.line);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.shape=ShapeUtilities.clone(this.shape);
clone.line=ShapeUtilities.clone(this.line);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
StandardXYItemRenderer clone=(StandardXYItemRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

2.493646632908262
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<987,991>


-------- Repeated Patch ---------
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.legendLine=ShapeUtilities.clone(this.legendLine);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
RelativeDateFormat clone=(RelativeDateFormat)super.clone();
clone.dayFormatter=(NumberFormat)this.dayFormatter.clone();
clone.secondFormatter=(NumberFormat)this.secondFormatter.clone();
return clone;

2.489707300157447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RelativeDateFormat.java<589,592>


-------- Patch ---------
clone.dayFormatter=(NumberFormat)this.dayFormatter.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.secondFormatter=(NumberFormat)this.secondFormatter.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TimeTableXYDataset clone=(TimeTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

2.489707300157447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<598,601>


-------- Patch ---------
clone.values=(DefaultKeyedValues2D)this.values.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultPieDataset clone=(DefaultPieDataset)super.clone();
clone.data=(KeyedObjects)this.data.clone();
return clone;

2.489077597504789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<390,392>

-------- No Patch ---------


-------- Similar Code ---------
DefaultCategoryDataset clone=(DefaultCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.489077597504789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<459,461>

-------- No Patch ---------


-------- Similar Code ---------
DefaultMultiValueCategoryDataset clone=(DefaultMultiValueCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.489077597504789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<401,404>

-------- No Patch ---------


-------- Similar Code ---------
DefaultBoxAndWhiskerCategoryDataset clone=(DefaultBoxAndWhiskerCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.489077597504789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<916,919>

-------- No Patch ---------


-------- Similar Code ---------
DefaultStatisticalCategoryDataset clone=(DefaultStatisticalCategoryDataset)super.clone();
clone.data=(KeyedObjects2D)this.data.clone();
return clone;

2.489077597504789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<728,731>

-------- No Patch ---------


-------- Similar Code ---------
AbstractBlock clone=(AbstractBlock)super.clone();
clone.bounds=(Rectangle2D)ShapeUtilities.clone(this.bounds);
if(this.frame instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.frame;
clone.frame=(BlockFrame)pc.clone();
}
return clone;

2.4797047660246574
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/AbstractBlock.java<596,602>


-------- Patch ---------
clone.bounds=(Rectangle2D)ShapeUtilities.clone(this.bounds);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.frame;
clone.frame=(BlockFrame)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}

2.4745238681641886
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<521,526>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}

2.4745238681641886
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<233,238>

-------- No Patch ---------


-------- Similar Code ---------
AbstractPieItemLabelGenerator clone=(AbstractPieItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.percentFormat!=null){
clone.percentFormat=(NumberFormat)this.percentFormat.clone();
}
return clone;

2.4726064416804716
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java<236,244>


-------- Patch ---------
if(this.copy!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.item!=null){
clone.percentFormat=(NumberFormat)this.percentFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
AbstractCategoryItemLabelGenerator clone=(AbstractCategoryItemLabelGenerator)super.clone();
if(this.numberFormat!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
if(this.dateFormat!=null){
clone.dateFormat=(DateFormat)this.dateFormat.clone();
}
return clone;

2.4726064416804716
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractCategoryItemLabelGenerator.java<323,331>


-------- Patch ---------
if(this.item!=null){
clone.numberFormat=(NumberFormat)this.numberFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.copy!=null){
clone.dateFormat=(DateFormat)this.dateFormat.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
HighLowItemLabelGenerator clone=(HighLowItemLabelGenerator)super.clone();
if(this.dateFormatter!=null){
clone.dateFormatter=(DateFormat)this.dateFormatter.clone();
}
if(this.numberFormatter!=null){
clone.numberFormatter=(NumberFormat)this.numberFormatter.clone();
}
return clone;

2.4726064416804716
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/HighLowItemLabelGenerator.java<185,195>


-------- Patch ---------
if(this.item!=null){
clone.dateFormatter=(DateFormat)this.dateFormatter.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.copy!=null){
clone.numberFormatter=(NumberFormat)this.numberFormatter.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ChartRenderingInfo clone=(ChartRenderingInfo)super.clone();
if(this.chartArea!=null){
clone.chartArea=(Rectangle2D)this.chartArea.clone();
}
if(this.entities instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.entities;
clone.entities=(EntityCollection)pc.clone();
}
return clone;

2.470126542076141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartRenderingInfo.java<259,267>


-------- Patch ---------
if(this.copy!=null){
clone.chartArea=(Rectangle2D)this.chartArea.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.entities;
clone.entities=(EntityCollection)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
StandardEntityCollection clone=(StandardEntityCollection)super.clone();
clone.entities=new java.util.ArrayList(this.entities.size());
for(int i=0;i<this.entities.size();i++){
ChartEntity entity=(ChartEntity)this.entities.get(i);
clone.entities.add(entity.clone());
}
return clone;

2.4682328532267523
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<196,203>

-------- No Patch ---------


-------- Similar Code ---------
CategoryPlot clone=(CategoryPlot)super.clone();
clone.domainAxes=new ObjectList();
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
CategoryAxis clonedAxis=(CategoryAxis)xAxis.clone();
clone.setDomainAxis(i,clonedAxis);
}
}
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
clone.rangeAxes=new ObjectList();
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
ValueAxis clonedAxis=(ValueAxis)yAxis.clone();
clone.setRangeAxis(i,clonedAxis);
}
}

2.41846622901512
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5098,5118>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.domainAxes=new ObjectList();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.domainAxisLocations=(ObjectList)this.domainAxisLocations.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Plot clone=(Plot)super.clone();
if(this.datasetGroup!=null){
clone.datasetGroup=(DatasetGroup)ObjectUtilities.clone(this.datasetGroup);
}
clone.drawingSupplier=(DrawingSupplier)ObjectUtilities.clone(this.drawingSupplier);
clone.listenerList=new EventListenerList();
return clone;

2.352911614786845
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1378,1388>


-------- Patch ---------
if(this.index!=null){
clone.datasetGroup=(DatasetGroup)ObjectUtilities.clone(this.datasetGroup);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.drawingSupplier=(DrawingSupplier)ObjectUtilities.clone(this.drawingSupplier);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ThermometerPlot clone=(ThermometerPlot)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
clone.rangeAxis=(ValueAxis)ObjectUtilities.clone(this.rangeAxis);
if(clone.rangeAxis!=null){
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}
clone.valueFormat=(NumberFormat)this.valueFormat.clone();
clone.subrangePaint=(Paint[])this.subrangePaint.clone();
return clone;

2.349516903551952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1564,1577>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.valueFormat=(NumberFormat)this.valueFormat.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.subrangePaint=(Paint[])this.subrangePaint.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
MultiplePiePlot clone=(MultiplePiePlot)super.clone();
clone.pieChart=(JFreeChart)this.pieChart.clone();
clone.sectionPaints=new HashMap(this.sectionPaints);
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
return clone;

2.3420491254051696
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<658,662>


-------- Patch ---------
clone.pieChart=(JFreeChart)this.pieChart.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.sectionPaints=new HashMap(this.sectionPaints);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.legendItemShape=ShapeUtilities.clone(this.legendItemShape);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYSeriesCollection clone=(XYSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.intervalDelegate=(IntervalXYDelegate)this.intervalDelegate.clone();
return clone;

2.334916474178103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<502,506>


-------- Patch ---------
clone.intervalDelegate=(IntervalXYDelegate)this.intervalDelegate.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TimeSeriesCollection clone=(TimeSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
return clone;

2.334916474178103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<784,787>


-------- Repeated Patch ---------
clone.workingCalendar=(Calendar)this.workingCalendar.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYBarRenderer result=(XYBarRenderer)super.clone();
if(this.gradientPaintTransformer!=null){
result.gradientPaintTransformer=(GradientPaintTransformer)ObjectUtilities.clone(this.gradientPaintTransformer);
}
result.legendBar=ShapeUtilities.clone(this.legendBar);
return result;

2.3146455480083192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1265,1271>


-------- Patch ---------
if(this.index!=null){
result.gradientPaintTransformer=(GradientPaintTransformer)ObjectUtilities.clone(this.gradientPaintTransformer);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
result.legendBar=ShapeUtilities.clone(this.legendBar);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
KeyedObjects clone=(KeyedObjects)super.clone();
clone.data=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
clone.data.add(ko.clone());
}
return clone;

2.2905894099376036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<325,332>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeriesCollection clone=(XYIntervalSeriesCollection)super.clone();
int seriesCount=getSeriesCount();
clone.data=new java.util.ArrayList(seriesCount);
for(int i=0;i<this.data.size();i++){
clone.data.set(i,getSeries(i).clone());
}
return clone;

2.2830224768264946
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<378,385>

-------- No Patch ---------


-------- Similar Code ---------
{
item=(XYDataItem)item.clone();
if(this.autoSort){
this.data.add(-index-1,item);
}else {
this.data.add(item);
}
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
XYDataItem removed=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}
}

2.230778198671759
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<828,847>

-------- No Patch ---------


-------- Similar Code ---------
JFreeChart chart=(JFreeChart)super.clone();
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
if(this.title!=null){
chart.title=(TextTitle)this.title.clone();
chart.title.addChangeListener(chart);
}
chart.subtitles=new ArrayList();
for(int i=0;i<getSubtitleCount();i++){
Title subtitle=(Title)getSubtitle(i).clone();
chart.subtitles.add(subtitle);
subtitle.addChangeListener(chart);
}
if(this.plot!=null){
chart.plot=(Plot)this.plot.clone();
chart.plot.addChangeListener(chart);
}

2.2183484554419945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1713,1735>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
chart.subtitles=new ArrayList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
{
item=(TimeSeriesDataItem)item.clone();
this.data.add(-index-1,item);
updateBoundsForAddedItem(item);
if(getItemCount()>this.maximumItemCount){
TimeSeriesDataItem d=(TimeSeriesDataItem)this.data.remove(0);
updateBoundsForRemovedItem(d);
}
}

2.180305584137313
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<847,857>

-------- No Patch ---------


-------- Similar Code ---------
XYDifferenceRenderer clone=(XYDifferenceRenderer)super.clone();
clone.legendLine=ShapeUtilities.clone(this.legendLine);
return clone;

2.1799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<1191,1193>


-------- Repeated Patch ---------
clone.legendLine=ShapeUtilities.clone(this.legendLine);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYAreaRenderer clone=(XYAreaRenderer)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

2.1799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<695,697>


-------- Patch ---------
clone.legendArea=ShapeUtilities.clone(this.legendArea);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYAreaRenderer2 clone=(XYAreaRenderer2)super.clone();
clone.legendArea=ShapeUtilities.clone(this.legendArea);
return clone;

2.1799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<413,415>


-------- Repeated Patch ---------
clone.legendArea=ShapeUtilities.clone(this.legendArea);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultHeatMapDataset clone=(DefaultHeatMapDataset)super.clone();
clone.zValues=DataUtilities.clone(this.zValues);
return clone;

2.1799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DefaultHeatMapDataset.java<319,321>


-------- Patch ---------
clone.zValues=DataUtilities.clone(this.zValues);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
SamplingXYLineRenderer clone=(SamplingXYLineRenderer)super.clone();
if(this.legendLine!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
return clone;

2.1763206289141643
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<308,312>


-------- Repeated Patch ---------
if(this.clone!=null){
clone.legendLine=ShapeUtilities.clone(this.legendLine);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
KeyedObjects2D clone=(KeyedObjects2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=new java.util.ArrayList(this.rows.size());
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects row=(KeyedObjects)iterator.next();
clone.rows.add(row.clone());
}
return clone;

2.1736700629678376
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<510,519>


-------- Patch ---------
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.rows=new java.util.ArrayList(this.rows.size());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ScatterRenderer clone=(ScatterRenderer)super.clone();
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
return clone;

2.173288123820579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<562,565>


-------- Repeated Patch ---------
clone.seriesShapesFilled=(BooleanList)this.seriesShapesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultPolarItemRenderer clone=(DefaultPolarItemRenderer)super.clone();
clone.seriesFilled=(BooleanList)this.seriesFilled.clone();
return clone;

2.173288123820579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/DefaultPolarItemRenderer.java<335,338>


-------- Patch ---------
clone.seriesFilled=(BooleanList)this.seriesFilled.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
LogFormat clone=(LogFormat)super.clone();
clone.formatter=(NumberFormat)this.formatter.clone();
return clone;

2.173288123820579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/LogFormat.java<258,260>


-------- Patch ---------
clone.formatter=(NumberFormat)this.formatter.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYTaskDataset clone=(XYTaskDataset)super.clone();
clone.underlying=(TaskSeriesCollection)this.underlying.clone();
return clone;

2.173288123820579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<460,462>


-------- Patch ---------
clone.underlying=(TaskSeriesCollection)this.underlying.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DateAxis clone=(DateAxis)super.clone();
if(this.dateFormatOverride!=null){
clone.dateFormatOverride=(DateFormat)this.dateFormatOverride.clone();
}
return clone;

2.1709322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1941,1948>


-------- Patch ---------
if(this.item!=null){
clone.dateFormatOverride=(DateFormat)this.dateFormatOverride.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
NumberAxis clone=(NumberAxis)super.clone();
if(this.numberFormatOverride!=null){
clone.numberFormatOverride=(NumberFormat)this.numberFormatOverride.clone();
}
return clone;

2.1709322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberAxis.java<1365,1370>


-------- Patch ---------
if(this.item!=null){
clone.numberFormatOverride=(NumberFormat)this.numberFormatOverride.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYShapeRenderer clone=(XYShapeRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<570,575>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYBlockRenderer clone=(XYBlockRenderer)super.clone();
if(this.paintScale instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<439,444>


-------- Repeated Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.paintScale;
clone.paintScale=(PaintScale)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
SlidingGanttCategoryDataset clone=(SlidingGanttCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(GanttCategoryDataset)pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<604,610>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.underlying;
clone.underlying=(GanttCategoryDataset)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
SlidingCategoryDataset clone=(SlidingCategoryDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(CategoryDataset)pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<345,350>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.underlying;
clone.underlying=(CategoryDataset)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
KeyedObject clone=(KeyedObject)super.clone();
if(this.object instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.object;
clone.object=pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObject.java<114,119>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.object;
clone.object=pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYBarDataset clone=(XYBarDataset)super.clone();
if(this.underlying instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.underlying;
clone.underlying=(XYDataset)pc.clone();
}
return clone;

2.1599851569452486
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<376,381>


-------- Patch ---------
if(this.start instanceof PublicCloneable){
PublicCloneable item=(PublicCloneable)this.underlying;
clone.underlying=(XYDataset)pc.clone();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
MeterPlot clone=(MeterPlot)super.clone();
clone.tickLabelFormat=(NumberFormat)this.tickLabelFormat.clone();
clone.intervals=new java.util.ArrayList(this.intervals);
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}
return clone;

2.1541165316276905
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<1329,1336>


-------- Patch ---------
clone.tickLabelFormat=(NumberFormat)this.tickLabelFormat.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervals=new java.util.ArrayList(this.intervals);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(clone.dataset!=null){
clone.dataset.addChangeListener(index);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TaskSeriesCollection clone=(TaskSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
clone.keys=new java.util.ArrayList(this.keys);
return clone;

2.112694251955881
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<681,684>


-------- Patch ---------
clone.keys=new java.util.ArrayList(this.keys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(position<=this.data.size()){
this.data.add(position,item);
}else {
this.data.add(item);
}

2.110887504527825
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<240,245>

-------- No Patch ---------


-------- Similar Code ---------
PeriodAxis clone=(PeriodAxis)super.clone();
clone.timeZone=(TimeZone)this.timeZone.clone();
clone.labelInfo=new PeriodAxisLabelInfo[this.labelInfo.length];
for(int i=0;i<this.labelInfo.length;i++){
clone.labelInfo[i]=this.labelInfo[i];
}
return clone;

2.09467132845352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<1161,1168>


-------- Patch ---------
clone.timeZone=(TimeZone)this.timeZone.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.labelInfo=new PeriodAxisLabelInfo[this.labelInfo.end];
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(emptyRange){
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
return copy;
}else {
return createCopy(startIndex,endIndex);
}

2.0939013320691306
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1117,1124>

-------- No Patch ---------


-------- Similar Code ---------
clone.datasetToRangeAxesMap=new TreeMap();
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
clone.renderers=(ObjectList)this.renderers.clone();
for(int i=0;i<this.renderers.size();i++){
CategoryItemRenderer renderer2=(CategoryItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
CategoryItemRenderer rc=(CategoryItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}
if(this.fixedDomainAxisSpace!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}

2.0915349865780315
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5130,5148>


-------- Patch ---------
clone.datasetToRangeAxesMap=new TreeMap();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.renderers=(ObjectList)this.renderers.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(this.end!=null){
clone.fixedDomainAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedDomainAxisSpace);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.rangeAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}
clone.rangeAxisLocations=(ObjectList)ObjectUtilities.clone(this.rangeAxisLocations);
clone.datasets=(ObjectList)ObjectUtilities.clone(this.datasets);
for(int i=0;i<clone.datasets.size();++i){
XYDataset d=getDataset(i);
if(d!=null){
d.addChangeListener(clone);
}
}
clone.datasetToDomainAxesMap=new TreeMap();

2.084382050504093
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5661,5682>


-------- Patch ---------
clone.rangeAxisLocations=(ObjectList)ObjectUtilities.clone(this.rangeAxisLocations);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.datasets=(ObjectList)ObjectUtilities.clone(this.datasets);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.datasetToDomainAxesMap=new TreeMap();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultTableXYDataset clone=(DefaultTableXYDataset)super.clone();
int seriesCount=this.data.size();
clone.data=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
XYSeries series=(XYSeries)this.data.get(i);
clone.data.add(series.clone());
}
clone.intervalDelegate=new IntervalXYDelegate(clone);
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
clone.updateXPoints();
return clone;

2.064159470075713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<545,560>


-------- Patch ---------
clone.intervalDelegate=new IntervalXYDelegate(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setAutoWidth(isAutoWidth());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.updateXPoints();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultXYDataset clone=(DefaultXYDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
clone.seriesList.add(i,new double[][]{xx,yy});
}
return clone;

2.0581288065280217
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<363,376>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultBoxAndWhiskerXYDataset clone=(DefaultBoxAndWhiskerXYDataset)super.clone();
clone.dates=new java.util.ArrayList(this.dates);
clone.items=new java.util.ArrayList(this.items);
return clone;

2.045262855713003
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<551,555>


-------- Patch ---------
clone.dates=new java.util.ArrayList(this.dates);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.items=new java.util.ArrayList(this.items);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Comparable result=null;
KeyedObject item=(KeyedObject)this.data.get(index);
if(item!=null){
result=item.getKey();
}
return result;

1.9979098195692837
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<115,120>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries clone=(XYSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<908,910>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeriesCollection clone=(VectorSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<328,331>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeriesCollection clone=(YIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<353,356>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeriesCollection clone=(XIntervalSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<355,358>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries clone=(TimeSeries)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1031,1033>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeriesCollection clone=(OHLCSeriesCollection)super.clone();
clone.data=(List)ObjectUtilities.deepClone(this.data);
return clone;

1.9957505879558446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<485,488>

-------- No Patch ---------


-------- Similar Code ---------
{
if(!this.allowDuplicateXValues){
int index=indexOf(item.getX());
if(index>=0){
throw new SeriesException("X-value already exists.");
}
}
this.data.add(item);
}

1.97939611582099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<533,543>

-------- No Patch ---------


-------- Similar Code ---------
{
if(!this.allowDuplicateXValues){
int index=indexOf(item.getComparable());
if(index>=0){
throw new SeriesException("X-value already exists.");
}
}
this.data.add(item);
}

1.97939611582099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<245,255>

-------- No Patch ---------


-------- Similar Code ---------
{
DefaultXYZDataset clone=(DefaultXYZDataset)super.clone();
clone.seriesKeys=new java.util.ArrayList(this.seriesKeys);
clone.seriesList=new ArrayList(this.seriesList.size());
for(int i=0;i<this.seriesList.size();i++){
double[][] data=(double[][])this.seriesList.get(i);
double[] x=data[0];
double[] y=data[1];
double[] z=data[2];
double[] xx=new double[x.length];
double[] yy=new double[y.length];
double[] zz=new double[z.length];
System.arraycopy(x,0,xx,0,x.length);
System.arraycopy(y,0,yy,0,y.length);
System.arraycopy(z,0,zz,0,z.length);
clone.seriesList.add(i,new double[][]{xx,yy,zz});
}
return clone;
}

1.9632495865218167
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<412,430>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries series=(TaskSeries)this.data.get(index);
return series.getKey();

1.942760232130978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<240,241>

-------- No Patch ---------


-------- Similar Code ---------
DefaultKeyedValues2D clone=(DefaultKeyedValues2D)super.clone();
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
clone.rows=(List)ObjectUtilities.deepClone(this.rows);
return clone;

1.9420491254051697
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<571,579>


-------- Repeated Patch ---------
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.rows=(List)ObjectUtilities.deepClone(this.rows);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.columnKeys=new java.util.ArrayList(this.columnKeys);
clone.rowKeys=new java.util.ArrayList(this.rowKeys);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TickUnits clone=(TickUnits)super.clone();
clone.tickUnits=new java.util.ArrayList(this.tickUnits);
return clone;

1.9232881238205788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<187,189>


-------- Patch ---------
clone.tickUnits=new java.util.ArrayList(this.tickUnits);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CustomXYURLGenerator clone=(CustomXYURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.9232881238205788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<203,205>


-------- Patch ---------
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CustomCategoryURLGenerator clone=(CustomCategoryURLGenerator)super.clone();
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
return clone;

1.9232881238205788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<191,194>


-------- Repeated Patch ---------
clone.urlSeries=new java.util.ArrayList(this.urlSeries);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
LookupPaintScale clone=(LookupPaintScale)super.clone();
clone.lookupTable=new java.util.ArrayList(this.lookupTable);
return clone;

1.9232881238205788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<352,354>


-------- Patch ---------
clone.lookupTable=new java.util.ArrayList(this.lookupTable);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CustomXYToolTipGenerator clone=(CustomXYToolTipGenerator)super.clone();
if(this.toolTipSeries!=null){
clone.toolTipSeries=new java.util.ArrayList(this.toolTipSeries);
}
return clone;

1.9209322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<159,164>


-------- Patch ---------
if(this.clone!=null){
clone.toolTipSeries=new java.util.ArrayList(this.toolTipSeries);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.9181529033663993
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<367,368>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getY(index);

1.9181529033663993
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
Integer key=new Integer(index);
List result=new ArrayList();
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(key.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(key)){
result.add(this.datasets.get(i));
}
}
}
return result;

1.917190531943866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4444,4460>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(index);
if(xAxis!=null){
axisCollection.add(xAxis,getDomainAxisEdge(index));
}
}

1.8979134177565786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3885,3890>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

1.8979134177565786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3893,3898>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.domainAxes.size();index++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(index);
if(axis!=null){
axisCollection.add(axis,getDomainAxisEdge(index));
}
}

1.8979134177565786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3722,3727>

-------- No Patch ---------


-------- Similar Code ---------
for(int index=0;index<this.rangeAxes.size();index++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(index);
if(yAxis!=null){
axisCollection.add(yAxis,getRangeAxisEdge(index));
}
}

1.8979134177565786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3730,3735>

-------- No Patch ---------


-------- Similar Code ---------
if(collection==null){
throw new IllegalArgumentException("Null \'collection\' argument.");
}
 final Collection result=(Collection)ObjectUtilities.clone(collection);
result.clear();
 final Iterator iterator=collection.iterator();
while(iterator.hasNext()){
 final Object item=iterator.next();
if(item!=null){
result.add(clone(item));
}else {
result.add(null);
}
}
return result;

1.8952748416757772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ObjectUtilities.java<203,222>


-------- Patch ---------
if(end==null){
throw new IllegalArgumentException("Null \'collection\' argument.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
item.clear();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DefaultOHLCDataset clone=(DefaultOHLCDataset)super.clone();
clone.data=new OHLCDataItem[this.data.length];
System.arraycopy(this.data,0,clone.data,0,this.data.length);
return clone;

1.8903052896907422
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<333,336>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(CategoryAxis)this.domainAxes.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<760,762>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<881,883>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1041,1043>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1164,1166>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(CategoryDataset)this.datasets.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1321,1323>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(CategoryItemRenderer)this.renderers.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxes.size()){
result=(ValueAxis)this.domainAxes.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<819,821>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.domainAxisLocations.size()){
result=(AxisLocation)this.domainAxisLocations.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1007,1009>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxes.size()){
result=(ValueAxis)this.rangeAxes.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1183,1185>

-------- No Patch ---------


-------- Similar Code ---------
if(index<this.rangeAxisLocations.size()){
result=(AxisLocation)this.rangeAxisLocations.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1307,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(XYDataset)this.datasets.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1400,1402>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderers.size()>index){
result=(XYItemRenderer)this.renderers.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1613,1615>

-------- No Patch ---------


-------- Similar Code ---------
if(this.datasets.size()>index){
result=(ValueDataset)this.datasets.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<471,473>

-------- No Patch ---------


-------- Similar Code ---------
if(this.scales.size()>index){
result=(DialScale)this.scales.get(index);
}

1.8781669751270669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<674,676>

-------- No Patch ---------


-------- Similar Code ---------
HistogramDataset clone=(HistogramDataset)super.clone();
int seriesCount=getSeriesCount();
clone.list=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
clone.list.add(new HashMap((Map)this.list.get(i)));
}
return clone;

1.8692458592561643
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<499,505>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.855734656695237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2457,2474>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.855734656695237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2729,2746>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundDomainMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundDomainMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.855734656695237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2612,2629>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(Collection)this.foregroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.foregroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}else if(layer==Layer.BACKGROUND){
markers=(Collection)this.backgroundRangeMarkers.get(new Integer(index));
if(markers==null){
markers=new java.util.ArrayList();
this.backgroundRangeMarkers.put(new Integer(index),markers);
}
markers.add(marker);
}

1.855734656695237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2813,2830>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.829199705613495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<426,433>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.829199705613495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<269,276>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesIndex==-1){
this.seriesKeys.add(seriesKey);
this.seriesList.add(data);
}else {
this.seriesList.remove(seriesIndex);
this.seriesList.add(seriesIndex,data);
}

1.829199705613495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<314,321>

-------- No Patch ---------


-------- Similar Code ---------
if(rowIndex>=0){
row=(DefaultKeyedValues)this.rows.get(rowIndex);
}else {
row=new DefaultKeyedValues();
if(this.sortRowKeys){
rowIndex=-rowIndex-1;
this.rowKeys.add(rowIndex,rowKey);
this.rows.add(rowIndex,row);
}else {
this.rowKeys.add(rowKey);
this.rows.add(row);
}
}

1.8153736196593218
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<323,337>

-------- No Patch ---------


-------- Similar Code ---------
for(int itemNo=0;itemNo<series.getItemCount();itemNo++){
Number xValue=series.getX(itemNo);
seriesXPoints.add(xValue);
if(!this.xPoints.contains(xValue)){
this.xPoints.add(xValue);
int seriesCount=this.data.size();
for(int seriesNo=0;seriesNo<seriesCount;seriesNo++){
XYSeries dataSeries=(XYSeries)this.data.get(seriesNo);
if(!dataSeries.equals(series)){
dataSeries.add(xValue,null);
}
}
}
}

1.8050916596374784
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<175,188>

-------- No Patch ---------


-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
return (TickUnit)this.tickUnits.get(index);
}else {
index=-(index+1);
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));
}

1.8037626037692773
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<153,161>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

1.7914947930936242
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<867,872>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.data.size();i++){
ComparableObjectItem item=(ComparableObjectItem)this.data.get(i);
if(item.getComparable().equals(x)){
return i;
}
}

1.7914947930936242
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<280,286>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drState.lowerCoordinates.add(new double[]{yyLow,xx});
drState.upperCoordinates.add(new double[]{yyHigh,xx});
}else if(orientation==PlotOrientation.VERTICAL){
drState.lowerCoordinates.add(new double[]{xx,yyLow});
drState.upperCoordinates.add(new double[]{xx,yyHigh});
}

1.791391518451284
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<286,293>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
ValueAxis clonedAxis=(ValueAxis)axis.clone();
clone.domainAxes.set(i,clonedAxis);
clonedAxis.setPlot(clone);
clonedAxis.addChangeListener(clone);
}
}

1.788159158696816
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5648,5656>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.7881173598087776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4427,4440>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToRangeAxesMap.get(new Integer(i));
if(mappedAxes==null){
if(axisIndex.equals(ZERO)){
result.add(this.datasets.get(i));
}
}else {
if(mappedAxes.contains(axisIndex)){
result.add(this.datasets.get(i));
}
}
}

1.7881173598087776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4457,4470>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.renderers.size();i++){
XYItemRenderer renderer2=(XYItemRenderer)this.renderers.get(i);
if(renderer2 instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)renderer2;
XYItemRenderer rc=(XYItemRenderer)pc.clone();
clone.renderers.set(i,rc);
rc.setPlot(clone);
rc.addChangeListener(clone);
}
}

1.7800094695133533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5688,5697>

-------- No Patch ---------


-------- Similar Code ---------
XYDataItem existing=(XYDataItem)this.data.get(index);
overwritten=(XYDataItem)existing.clone();
boolean iterate=false;
double oldY=existing.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setY(item.getY());
if(iterate){
findBoundsByIteration();
}else if(item.getY()!=null){
double yy=item.getY().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}

1.765439169455166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<809,826>


-------- Patch ---------
copy=(XYDataItem)data.clone();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
MultipleXYSeriesLabelGenerator clone=(MultipleXYSeriesLabelGenerator)super.clone();
clone.seriesLabelLists=new HashMap();
Set keys=this.seriesLabelLists.keySet();
Iterator iterator=keys.iterator();
while(iterator.hasNext()){
Object key=iterator.next();
Object entry=this.seriesLabelLists.get(key);
Object toAdd=entry;
if(entry instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)entry;
toAdd=pc.clone();
}
clone.seriesLabelLists.put(key,toAdd);
}
return clone;

1.7620327229546662
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<181,196>


-------- Patch ---------
clone.seriesLabelLists=new HashMap();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
interior.add(this.backgroundPaintSample);
interior.add(button);
if(this.plotOrientation!=null){
boolean isVertical=this.plotOrientation.equals(PlotOrientation.VERTICAL);
int index=isVertical?ORIENTATION_VERTICAL:ORIENTATION_HORIZONTAL;
interior.add(new JLabel(localizationResources.getString("Orientation")));
this.orientationCombo=new JComboBox(orientationNames);
this.orientationCombo.setSelectedIndex(index);
this.orientationCombo.setActionCommand("Orientation");
this.orientationCombo.addActionListener(this);
interior.add(new JPanel());
interior.add(this.orientationCombo);
}

1.7580606673131105
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<254,270>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.7282176863311103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2645,2652>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.7282176863311103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2930,2937>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundDomainMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundDomainMarkers.get(new Integer(index));
}

1.7282176863311103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2701,2708>

-------- No Patch ---------


-------- Similar Code ---------
if(layer==Layer.FOREGROUND){
markers=(ArrayList)this.foregroundRangeMarkers.get(new Integer(index));
}else {
markers=(ArrayList)this.backgroundRangeMarkers.get(new Integer(index));
}

1.7282176863311103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2940,2947>

-------- No Patch ---------


-------- Similar Code ---------
if((v>0.0)||(!this.ignoreZeroValues&&v>=0.0)){
if(baseIndex<0){
result.add(new Object[]{null,new Double(base)});
baseIndex=0;
}
posBase=posBase+v;
result.add(new Object[]{new Integer(r),new Double(posBase)});
}else if(v<0.0){
if(baseIndex<0){
result.add(new Object[]{null,new Double(base)});
baseIndex=0;
}
negBase=negBase+v;
result.add(0,new Object[]{new Integer(-r-1),new Double(negBase)});
baseIndex++;
}

1.7280816040284734
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<353,370>

-------- No Patch ---------


-------- Similar Code ---------
if(edge==RectangleEdge.TOP){
this.axesAtTop.add(axis);
}else if(edge==RectangleEdge.BOTTOM){
this.axesAtBottom.add(axis);
}else if(edge==RectangleEdge.LEFT){
this.axesAtLeft.add(axis);
}else if(edge==RectangleEdge.RIGHT){
this.axesAtRight.add(axis);
}

1.7271992456283547
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/AxisCollection.java<130,141>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem existing=(TimeSeriesDataItem)this.data.get(index);
overwritten=(TimeSeriesDataItem)existing.clone();
boolean iterate=false;
Number oldYN=existing.getValue();
double oldY=oldYN!=null?oldYN.doubleValue():Double.NaN;
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
existing.setValue(item.getValue());
if(iterate){
findBoundsByIteration();
}else if(item.getValue()!=null){
double yy=item.getValue().doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=minIgnoreNaN(this.maxY,yy);
}

1.718754565775828
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<826,845>

-------- No Patch ---------


-------- Similar Code ---------
int index=getIndex(period);
if(index>=0){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.remove(index);
updateBoundsForRemovedItem(item);
if(this.data.isEmpty()){
this.timePeriodClass=null;
}
fireSeriesChanged();
}

1.718648772515281
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<968,977>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getX(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<215,216>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalSeries s=(XYIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeriesCollection.java<229,230>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getX(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<159,160>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<173,174>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYLowValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<187,188>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return s.getYHighValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<201,202>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXLowValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<172,173>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getXHighValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<186,187>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
return s.getYValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<200,201>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<330,331>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=(XYSeries)this.data.get(series);
return s.getX(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<283,284>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return ts.getValue(item);

1.7181529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<476,477>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYValue(item));

1.704792075258663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<214,215>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYLowValue(item));

1.704792075258663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<253,254>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalSeries s=(YIntervalSeries)this.data.get(series);
return new Double(s.getYHighValue(item));

1.704792075258663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeriesCollection.java<266,267>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
xAxis.setPlot(this);
xAxis.addChangeListener(this);
}
}
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
yAxis.setPlot(this);
yAxis.addChangeListener(this);
}
}
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}

1.6937689611683888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5242,5262>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);
if(xAxis!=null){
xAxis.setPlot(this);
xAxis.addChangeListener(this);
}
}
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis yAxis=(ValueAxis)this.rangeAxes.get(i);
if(yAxis!=null){
yAxis.setPlot(this);
yAxis.addChangeListener(this);
}
}
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}

1.6937689611683888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5242,5262>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem result=(VectorDataItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.692760232130978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<106,108>


-------- Patch ---------
fireSeriesChanged();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ComparableObjectItem result=(ComparableObjectItem)this.data.remove(index);
fireSeriesChanged();
return result;

1.692760232130978
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<371,374>


-------- Repeated Patch ---------
fireSeriesChanged();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
List mappedAxes=(List)this.datasetToDomainAxesMap.get(new Integer(i));
CategoryDataset dataset=(CategoryDataset)this.datasets.get(i);
if(mappedAxes==null){
if(key.equals(ZERO)){
if(dataset!=null){
result.add(dataset);
}
}
}else {
if(mappedAxes.contains(key)){
if(dataset!=null){
result.add(dataset);
}
}
}
}

1.692383433856933
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4413,4431>

-------- No Patch ---------


-------- Similar Code ---------
LegendItemCollection clone=(LegendItemCollection)super.clone();
clone.items=(List)ObjectUtilities.deepClone(this.items);
return clone;

1.6799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/LegendItemCollection.java<149,151>


-------- Patch ---------
clone.items=(List)ObjectUtilities.deepClone(this.items);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TaskSeries clone=(TaskSeries)super.clone();
clone.tasks=(List)ObjectUtilities.deepClone(this.tasks);
return clone;

1.6799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<194,196>


-------- Patch ---------
clone.tasks=(List)ObjectUtilities.deepClone(this.tasks);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
SimpleHistogramDataset clone=(SimpleHistogramDataset)super.clone();
clone.bins=(List)ObjectUtilities.deepClone(this.bins);
return clone;

1.6799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<558,560>


-------- Patch ---------
clone.bins=(List)ObjectUtilities.deepClone(this.bins);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
MatrixSeriesCollection clone=(MatrixSeriesCollection)super.clone();
clone.seriesList=(List)ObjectUtilities.deepClone(this.seriesList);
return clone;

1.6799611142716344
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<271,273>


-------- Patch ---------
clone.seriesList=(List)ObjectUtilities.deepClone(this.seriesList);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.6781669751270667
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<114,116>

-------- No Patch ---------


-------- Similar Code ---------
if(item<urls.size()){
result=(String)urls.get(item);
}

1.6781669751270667
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<105,107>

-------- No Patch ---------


-------- Similar Code ---------
if(item<tooltips.size()){
result=(String)tooltips.get(item);
}

1.6781669751270667
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<117,119>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getFirstMillisecond(this.workingCalendar));

1.6762702301561658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<448,450>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
return new Long(ts.getTimePeriod(item).getLastMillisecond(this.workingCalendar));

1.6762702301561658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<462,464>

-------- No Patch ---------


-------- Similar Code ---------
ExtendedCategoryAxis clone=(ExtendedCategoryAxis)super.clone();
clone.sublabels=new HashMap(this.sublabels);
return clone;

1.6732881238205788
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<228,230>


-------- Patch ---------
clone.sublabels=new HashMap(this.sublabels);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<getSeriesCount();i++){
TaskSeries series=(TaskSeries)this.data.get(i);
Iterator iterator=series.getTasks().iterator();
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}
}

1.6712156484601304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<635,647>

-------- No Patch ---------


-------- Similar Code ---------
if(copyAndSort){
int itemCount=values.size();
List copy=new ArrayList(itemCount);
for(int i=0;i<itemCount;i++){
copy.add(i,values.get(i));
}
Collections.sort(copy);
values=copy;
}

1.670122003693926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<203,211>

-------- No Patch ---------


-------- Similar Code ---------
AbstractAnnotation clone=(AbstractAnnotation)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.6684509668761258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractAnnotation.java<192,194>


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
AbstractDialLayer clone=(AbstractDialLayer)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.6684509668761258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/AbstractDialLayer.java<141,144>


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
AbstractDataset clone=(AbstractDataset)super.clone();
clone.listenerList=new EventListenerList();
return clone;

1.6684509668761258
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/AbstractDataset.java<209,211>


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CategoryTableXYDataset clone=(CategoryTableXYDataset)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
clone.intervalDelegate=new IntervalXYDelegate(clone);
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
return clone;

1.6610593967649327
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/CategoryTableXYDataset.java<398,406>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
clone.values=(DefaultKeyedValues2D)this.values.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.intervalDelegate.setAutoWidth(isAutoWidth());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.intervalDelegate.setFixedIntervalWidth(getIntervalWidth());
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.data.size()==0){
return ;
}
for(int i=0;i<this.data.size();i++){
OHLCSeries series=(OHLCSeries)this.data.get(i);
series.removeChangeListener(this);
}
this.data.clear();
fireDatasetChanged(new DatasetChangeInfo());

1.6600255555242938
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<424,437>


-------- Patch ---------
this.data.clear();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYDataItem removed=(XYDataItem)this.data.remove(index);
updateBoundsForRemovedItem(removed);
fireSeriesChanged();
return removed;

1.654792075258663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<576,579>


-------- Patch ---------
updateBoundsForRemovedItem(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
fireSeriesChanged();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(this.datasets.get(i)==dataset){
result=(CategoryItemRenderer)this.renderers.get(i);
break;
}
}

1.6547302160391153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1709,1714>

-------- No Patch ---------


-------- Similar Code ---------
int index=Collections.binarySearch(this.tickUnits,unit);
if(index>=0){
index=index+1;
}else {
index=-index;
}
return (TickUnit)this.tickUnits.get(Math.min(index,this.tickUnits.size()-1));

1.6543317391103947
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<130,139>

-------- No Patch ---------


-------- Similar Code ---------
Axis clone=(Axis)super.clone();
clone.plot=null;
clone.listenerList=new EventListenerList();
return clone;

1.653850166506756
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1441,1445>


-------- Patch ---------
clone.plot=null;
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
clone.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getXValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getYValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVector();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<269,271>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorX();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<283,285>

-------- No Patch ---------


-------- Similar Code ---------
VectorSeries s=(VectorSeries)this.data.get(series);
VectorDataItem di=(VectorDataItem)s.getDataItem(item);
return di.getVectorY();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeriesCollection.java<297,299>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return di.getX();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<157,159>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=(TimeSeries)this.data.get(series);
RegularTimePeriod period=s.getTimePeriod(item);
return getX(period);

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<399,401>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
return dp.getValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<309,311>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getOpenValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<256,258>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getCloseValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<282,284>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getHighValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<308,310>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return di.getLowValue();

1.6522830069167318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<334,336>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<rangeAxisCount;i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}
int rendererCount=this.renderers.size();
for(int i=0;i<rendererCount;i++){
XYItemRenderer renderer=(XYItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.6517165005537098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5807,5827>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<rangeAxisCount;i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
Dataset dataset=(Dataset)this.datasets.get(i);
if(dataset!=null){
dataset.addChangeListener(this);
}
}
int rendererCount=this.renderers.size();
for(int i=0;i<rendererCount;i++){
XYItemRenderer renderer=(XYItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.6517165005537098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5807,5827>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=0){
last=(TextLine)this.lines.get(index);
}

1.6501071740706872
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextBlock.java<139,141>

-------- No Patch ---------


-------- Similar Code ---------
Object result=null;
KeyedObject kobj=(KeyedObject)this.data.get(item);
if(kobj!=null){
result=kobj.getObject();
}
return result;

1.650083732612762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<95,100>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getYValue());

1.6416707570269162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<213,215>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXLowValue());

1.6416707570269162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<227,229>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalSeries s=(XIntervalSeries)this.data.get(series);
XIntervalDataItem di=(XIntervalDataItem)s.getDataItem(item);
return new Double(di.getXHighValue());

1.6416707570269162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeriesCollection.java<241,243>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries ts=(TimeSeries)this.data.get(series);
RegularTimePeriod period=ts.getTimePeriod(item);
return new Long(getX(period));

1.6416707570269162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<413,415>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
return new Double(di.getYValue());

1.6416707570269162
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<242,244>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
DefaultKeyedValues rowData=(DefaultKeyedValues)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getValue(index);
}
}
return result;

1.637934051865046
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<144,155>

-------- No Patch ---------


-------- Similar Code ---------
AbstractObjectList clone=(AbstractObjectList)super.clone();
if(this.objects!=null){
clone.objects=new Object[this.objects.length];
System.arraycopy(this.objects,0,clone.objects,0,this.objects.length);
}
return clone;

1.6317532227342948
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<235,241>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.6264316967163899
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2530,2541>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.6264316967163899
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2804,2815>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundDomainMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundDomainMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.6264316967163899
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4212,4223>

-------- No Patch ---------


-------- Similar Code ---------
Collection result=null;
Integer key=new Integer(index);
if(layer==Layer.FOREGROUND){
result=(Collection)this.foregroundRangeMarkers.get(key);
}else if(layer==Layer.BACKGROUND){
result=(Collection)this.backgroundRangeMarkers.get(key);
}
if(result!=null){
result=Collections.unmodifiableCollection(result);
}
return result;

1.6264316967163899
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4238,4249>

-------- No Patch ---------


-------- Similar Code ---------
if(keyIndex>=0){
KeyedObject ko=(KeyedObject)this.data.get(keyIndex);
ko.setObject(object);
}else {
KeyedObject ko=new KeyedObject(key,object);
this.data.add(ko);
}

1.6245324111404922
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<206,213>

-------- No Patch ---------


-------- Similar Code ---------
if(this.domainAxis!=null){
clone.domainAxis=(ValueAxis)this.domainAxis.clone();
clone.domainAxis.setPlot(clone);
clone.domainAxis.addChangeListener(clone);
}

1.6185297907780298
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1074,1078>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rangeAxis!=null){
clone.rangeAxis=(ValueAxis)this.rangeAxis.clone();
clone.rangeAxis.setPlot(clone);
clone.rangeAxis.addChangeListener(clone);
}

1.6185297907780298
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<1079,1083>

-------- No Patch ---------


-------- Similar Code ---------
Object result=null;
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
if(rowData!=null){
Comparable columnKey=(Comparable)this.columnKeys.get(column);
if(columnKey!=null){
int index=rowData.getIndex(columnKey);
if(index>=0){
result=rowData.getObject(columnKey);
}
}
}
return result;

1.6176120241585907
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<112,123>

-------- No Patch ---------


-------- Similar Code ---------
if(this.axis!=null){
clone.axis=(ValueAxis)ObjectUtilities.clone(this.axis);
clone.axis.setPlot(clone);
clone.axis.addChangeListener(clone);
}

1.6171343367606827
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1063,1067>

-------- No Patch ---------


-------- Similar Code ---------
for(int s=0;s<this.data.size();s++){
XYSeries series=(XYSeries)this.data.get(s);
if(series.getY(series.indexOf(x))!=null){
return false;
}
}

1.6096001224072571
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<453,458>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
Rectangle2D hotspot=(Rectangle2D)area.clone();
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams&&((EntityBlockParams)params).getGenerateEntities()){
sec=new StandardEntityCollection();
sec.add(new TitleEntity(hotspot,this));
}
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}
BlockFrame border=getFrame();

1.6076084263719816
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<530,543>


-------- Patch ---------
if(end instanceof EntityBlockParams&&((EntityBlockParams)params).getGenerateEntities()){
item=new StandardEntityCollection();
sec.add(new TitleEntity(clone,this));
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
PaintItem item=new PaintItem(value,paint);
int index=Collections.binarySearch(this.lookupTable,item);
if(index>=0){
this.lookupTable.set(index,item);
}else {
this.lookupTable.add(-(index+1),item);
}

1.60729666366556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<250,257>

-------- No Patch ---------


-------- Similar Code ---------
CrosshairOverlay clone=(CrosshairOverlay)super.clone();
clone.xCrosshairs=(List)ObjectUtilities.deepClone(this.xCrosshairs);
clone.yCrosshairs=(List)ObjectUtilities.deepClone(this.yCrosshairs);
return clone;

1.6066309917968136
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/panel/CrosshairOverlay.java<589,592>


-------- Patch ---------
clone.xCrosshairs=(List)ObjectUtilities.deepClone(this.xCrosshairs);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.yCrosshairs=(List)ObjectUtilities.deepClone(this.yCrosshairs);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Series clone=(Series)super.clone();
clone.listeners=new EventListenerList();
clone.propertyChangeSupport=new PropertyChangeSupport(clone);
return clone;

1.6030068865351024
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/Series.java<243,246>


-------- Patch ---------
clone.listeners=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.propertyChangeSupport=new PropertyChangeSupport(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(item.getPeriod().compareTo(last)>0){
this.data.add(item);
added=true;
}else {
int index=Collections.binarySearch(this.data,item);
if(index<0){
this.data.add(-index-1,item);
added=true;
}else {
StringBuffer b=new StringBuffer();
b.append("You are attempting to add an observation for ");
b.append("the time period ");
b.append(item.getPeriod().toString());
b.append(" but the series already contains an observation");
b.append(" for that time period. Duplicates are not ");
b.append("permitted.  Try using the addOrUpdate() method.");
throw new SeriesException(b.toString());
}
}

1.6020026962093197
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<604,624>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getX();

1.6017779564116812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<222,224>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindDirection();

1.6017779564116812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<251,253>

-------- No Patch ---------


-------- Similar Code ---------
List oneSeriesData=(List)this.allSeriesData.get(series);
WindDataItem windItem=(WindDataItem)oneSeriesData.get(item);
return windItem.getWindForce();

1.6017779564116812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<266,268>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries s=(OHLCSeries)this.data.get(series);
OHLCItem di=(OHLCItem)s.getDataItem(item);
RegularTimePeriod period=di.getPeriod();
return getX(period);

1.5948336417937337
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<215,218>

-------- No Patch ---------


-------- Similar Code ---------
if(list!=null){
try{
List clone=(List)list.getClass().newInstance();
Iterator iterator=list.iterator();
while(iterator.hasNext()){
clone.add(KeyToGroupMap.clone(iterator.next()));
}
result=clone;
}catch (Exception e) {
  throw new CloneNotSupportedException("Exception.");
}

}

1.5931722096576286
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<309,321>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.optionalLibraries.size();i++){
OptionalLibraryHolder holder=(OptionalLibraryHolder)this.optionalLibraries.get(i);
Library l=holder.getLibrary();
if(l!=null){
libraries.add(l);
}
}

1.5917477300518252
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ui/BasicProjectInfo.java<266,273>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalDataItem item=(YIntervalDataItem)getDataItem(index);
return item.getX();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeries.java<102,103>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalDataItem item=(YIntervalDataItem)getDataItem(index);
return item.getYValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeries.java<114,115>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalDataItem item=(YIntervalDataItem)getDataItem(index);
return item.getYLowValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeries.java<129,130>

-------- No Patch ---------


-------- Similar Code ---------
YIntervalDataItem item=(YIntervalDataItem)getDataItem(index);
return item.getYHighValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/YIntervalSeries.java<144,145>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalDataItem item=(XIntervalDataItem)getDataItem(index);
return item.getX();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeries.java<102,103>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalDataItem item=(XIntervalDataItem)getDataItem(index);
return item.getXLowValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeries.java<116,117>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalDataItem item=(XIntervalDataItem)getDataItem(index);
return item.getXHighValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeries.java<130,131>

-------- No Patch ---------


-------- Similar Code ---------
XIntervalDataItem item=(XIntervalDataItem)getDataItem(index);
return item.getYValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XIntervalSeries.java<142,143>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem item=(VectorDataItem)this.getDataItem(index);
return item.getXValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<119,120>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem item=(VectorDataItem)getDataItem(index);
return item.getYValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<131,132>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem item=(VectorDataItem)getDataItem(index);
return item.getVectorX();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<143,144>

-------- No Patch ---------


-------- Similar Code ---------
VectorDataItem item=(VectorDataItem)getDataItem(index);
return item.getVectorY();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/VectorSeries.java<155,156>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getX();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<105,106>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getXLowValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<120,121>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getXHighValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<135,136>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getYValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<147,148>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getYLowValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<162,163>

-------- No Patch ---------


-------- Similar Code ---------
XYIntervalDataItem item=(XYIntervalDataItem)getDataItem(index);
return item.getYHighValue();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYIntervalSeries.java<177,178>

-------- No Patch ---------


-------- Similar Code ---------
OHLCItem item=(OHLCItem)getDataItem(index);
return item.getPeriod();

1.590947579838996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeries.java<76,77>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<this.rows;r++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
b.setBounds(new Rectangle2D.Double(c*width,r*height,width,height));
}
}

1.5879088829907677
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<190,200>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues ts=(TimePeriodValues)this.data.get(series);
TimePeriodValue dp=ts.getDataItem(item);
TimePeriod period=dp.getPeriod();
return new Long(getX(period));

1.5862253754585294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<241,244>

-------- No Patch ---------


-------- Similar Code ---------
if(rowIndex>=0){
row=(KeyedObjects)this.rows.get(rowIndex);
}else {
this.rowKeys.add(rowKey);
row=new KeyedObjects();
this.rows.add(row);
}

1.5834433111422914
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<278,285>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(this.datasets.get(i)==dataset){
result=(XYItemRenderer)this.renderers.get(i);
if(result==null){
result=getRenderer();
}
break;
}
}

1.5773175029953825
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1768,1776>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
result=(XYItemRenderer)this.item.get(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
break;
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
result=(XYItemRenderer)this.item.get(index);
break;

for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int rowNum=0;rowNum<this.rows.size();++rowNum){
row=(ArrayList)this.rows.get(rowNum);
for(int column=1;column<numberOfColumns;column++){
Object testValue=row.get(column);
if(testValue!=null){
double test=((Number)testValue).doubleValue();
if(test<this.minValue){
this.minValue=test;
}
if(test>this.maxValue){
this.maxValue=test;
}
}
}
}

1.573117463288661
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<373,388>

-------- No Patch ---------


-------- Similar Code ---------
if(scale==null){
throw new IllegalArgumentException("Null \'scale\' argument.");
}
DialScale existing=(DialScale)this.scales.get(index);
if(existing!=null){
removeLayer(existing);
}
this.layers.add(scale);
this.scales.set(index,scale);
scale.addChangeListener(this);
fireChangeEvent();

1.5682211764091165
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<652,662>


-------- Patch ---------
if(index!=null){
removeLayer(existing);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
fireChangeEvent();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getPercentComplete();
}
return result;

1.5674564717168296
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<456,463>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
result=task.getSubtaskCount();
}
return result;

1.5674564717168296
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<489,496>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxH=Math.max(maxH,s.getHeight());
}
}

1.564416878889065
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<370,380>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<this.columns;c++){
int index=r*this.columns+c;
if(index>=blocks.size()){
break;
}
Block b=(Block)blocks.get(index);
if(b!=null){
Size2D s=b.arrange(g2,bc);
maxW=Math.max(maxW,s.getWidth());
}
}

1.564416878889065
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/GridArrangement.java<403,413>

-------- No Patch ---------


-------- Similar Code ---------
if(l!=null&&l.size()>0){
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}
if(count>0){
average=average/count;
}
}

1.5518774466876153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<207,216>

-------- No Patch ---------


-------- Similar Code ---------
if(l!=null&&l.size()>0){
for(int i=0;i<l.size();i++){
Number n=(Number)l.get(i);
average+=n.doubleValue();
count+=1;
}
if(count>0){
average=average/count;
}
}

1.5518774466876153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<235,244>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
boolean iterate=false;
Number oldYN=item.getValue();
if(oldYN!=null){
double oldY=oldYN.doubleValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
}
item.setValue(value);
if(iterate){
findBoundsByIteration();
}else if(value!=null){
double yy=value.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=maxIgnoreNaN(this.maxY,yy);
}

1.5513749789636986
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<721,738>


-------- Patch ---------
data.setValue(end);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(false){
findBoundsByIteration();
}else if(end!=null){
double end.doubleValue()=value.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.clone=maxIgnoreNaN(this.maxY,yy);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TimeSeriesDataItem temp=new TimeSeriesDataItem(period,value);
int index=Collections.binarySearch(this.data,temp);
if(index<0){
throw new SeriesException("There is no existing value for the "+"specified \'period\'.");
}
update(index,value);

1.5475519180970205
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<705,711>

-------- No Patch ---------


-------- Similar Code ---------
DialLayer layer=(DialLayer)this.layers.get(index);
if(layer!=null){
layer.removeChangeListener(this);
}
this.layers.remove(index);
fireChangeEvent();

1.5422028351963113
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<359,364>


-------- Patch ---------
if(item!=null){
layer.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.remove(index);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
fireChangeEvent();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DialPointer pointer=(DialPointer)this.pointers.get(index);
if(pointer!=null){
pointer.removeChangeListener(this);
}
this.pointers.remove(index);
fireChangeEvent();

1.5422028351963113
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<414,419>


-------- Patch ---------
if(item!=null){
pointer.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
this.data.remove(index);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
fireChangeEvent();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.remove(index);
fireChangeEvent();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Integer key=new Integer(series);
List labelList=(List)this.seriesLabelLists.get(key);
if(labelList==null){
labelList=new java.util.ArrayList();
this.seriesLabelLists.put(key,labelList);
}
labelList.add(label);

1.5402173952536642
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<109,115>


-------- Patch ---------
if(item==null){
labelList=new java.util.ArrayList();
this.data.put(index,labelList);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
item.add(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CategoryAxis clone=(CategoryAxis)super.clone();
clone.tickLabelFontMap=new HashMap(this.tickLabelFontMap);
clone.tickLabelPaintMap=new HashMap(this.tickLabelPaintMap);
clone.categoryLabelToolTips=new HashMap(this.categoryLabelToolTips);
return clone;

1.5389726156558576
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1291,1295>


-------- Patch ---------
clone.tickLabelFontMap=new HashMap(this.tickLabelFontMap);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.tickLabelPaintMap=new HashMap(this.tickLabelPaintMap);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
clone.categoryLabelToolTips=new HashMap(this.categoryLabelToolTips);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(clone.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(XYSeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.5374630383924197
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1728,1731>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemLabelGenerator instanceof PublicCloneable){
clone.legendItemLabelGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemLabelGenerator);
}

1.5347256932669722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1736,1739>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemToolTipGenerator instanceof PublicCloneable){
clone.legendItemToolTipGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemToolTipGenerator);
}

1.5347256932669722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1740,1743>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemURLGenerator instanceof PublicCloneable){
clone.legendItemURLGenerator=(CategorySeriesLabelGenerator)ObjectUtilities.clone(this.legendItemURLGenerator);
}

1.5347256932669722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1744,1747>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawingSupplier instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.drawingSupplier;
try{
result=(DrawingSupplier)pc.clone();
}catch (CloneNotSupportedException e) {
  e.printStackTrace();
}

}

1.5347256932669722
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/StandardChartTheme.java<1102,1110>

-------- No Patch ---------


-------- Similar Code ---------
List result=new java.util.ArrayList();
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
result.add(ko.getKey());
}
return result;

1.5344105466330165
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<154,160>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseShape!=null){
clone.baseShape=ShapeUtilities.clone(this.baseShape);
}

1.5290580736714228
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3205,3207>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedRangeAxisSpace!=null){
clone.fixedRangeAxisSpace=(AxisSpace)ObjectUtilities.clone(this.fixedRangeAxisSpace);
}

1.5290580736714228
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5149,5152>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderer!=null){
clone.renderer=(PolarItemRenderer)ObjectUtilities.clone(this.renderer);
}

1.5290580736714228
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1073,1076>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5272751554098996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<118,121>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5272751554098996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<186,189>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.data.add(series);
series.addChangeListener(this);
}

1.5272751554098996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<104,107>

-------- No Patch ---------


-------- Similar Code ---------
{
List oneSeriesData=new java.util.ArrayList();
int maxItemCount=data[seriesIndex].length;
for(int itemIndex=0;itemIndex<maxItemCount;itemIndex++){
Object xObject=data[seriesIndex][itemIndex][0];
if(xObject!=null){
Number xNumber;
if(xObject instanceof Number){
xNumber=(Number)xObject;
}else {
if(xObject instanceof Date){
Date xDate=(Date)xObject;
xNumber=new Long(xDate.getTime());
}else {
xNumber=new Integer(0);
}
}
Number windDir=(Number)data[seriesIndex][itemIndex][1];
Number windForce=(Number)data[seriesIndex][itemIndex][2];
oneSeriesData.add(new WindDataItem(xNumber,windDir,windForce));
}
}
Collections.sort(oneSeriesData);
this.allSeriesData.add(seriesIndex,oneSeriesData);
}

1.5263749907555653
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<140,167>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0){
row.removeValue(columnIndex);
}
}

1.5262368626944607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<392,399>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0){
row.removeValue(colIndex);
}
}

1.5262368626944607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<348,355>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries ts=(TaskSeries)this.data.get(series);
return ts.getKey();

1.5217076005520307
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<147,148>

-------- No Patch ---------


-------- Similar Code ---------
months=calendar.get(Calendar.MONTH);
days=calendar.get(Calendar.DATE);
hours=calendar.get(Calendar.HOUR_OF_DAY);
minutes=calendar.get(Calendar.MINUTE);
seconds=calendar.get(Calendar.SECOND);
calendar.set(years,months,days,hours,minutes,seconds);
calendar.set(Calendar.MILLISECOND,value);
Date mm=calendar.getTime();
if(mm.getTime()>=date.getTime()){
calendar.set(Calendar.MILLISECOND,value-1);
mm=calendar.getTime();
}

1.516790535502103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<892,903>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipGeneratorList!=null){
clone.toolTipGeneratorList=(ObjectList)this.toolTipGeneratorList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1703,1706>

-------- No Patch ---------


-------- Similar Code ---------
if(this.urlGeneratorList!=null){
clone.urlGeneratorList=(ObjectList)this.urlGeneratorList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1721,1723>

-------- No Patch ---------


-------- Similar Code ---------
if(this.strokeList!=null){
clone.strokeList=(StrokeList)this.strokeList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3190,3192>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlineStrokeList!=null){
clone.outlineStrokeList=(StrokeList)this.outlineStrokeList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3196,3199>

-------- No Patch ---------


-------- Similar Code ---------
if(this.shapeList!=null){
clone.shapeList=(ShapeList)this.shapeList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3202,3204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelsVisibleList!=null){
clone.itemLabelsVisibleList=(BooleanList)this.itemLabelsVisibleList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3210,3213>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelFontList!=null){
clone.itemLabelFontList=(ObjectList)this.itemLabelFontList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3217,3220>

-------- No Patch ---------


-------- Similar Code ---------
if(this.itemLabelPaintList!=null){
clone.itemLabelPaintList=(PaintList)this.itemLabelPaintList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3224,3227>

-------- No Patch ---------


-------- Similar Code ---------
if(this.positiveItemLabelPositionList!=null){
clone.positiveItemLabelPositionList=(ObjectList)this.positiveItemLabelPositionList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3231,3234>

-------- No Patch ---------


-------- Similar Code ---------
if(this.createEntitiesList!=null){
clone.createEntitiesList=(BooleanList)this.createEntitiesList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3244,3247>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendShapeList!=null){
clone.legendShapeList=(ShapeList)this.legendShapeList.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3249,3251>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextFont!=null){
clone.legendTextFont=(ObjectList)this.legendTextFont.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3252,3254>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendTextPaint!=null){
clone.legendTextPaint=(PaintList)this.legendTextPaint.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<3255,3257>

-------- No Patch ---------


-------- Similar Code ---------
if(this.fixedLegendItems!=null){
clone.fixedLegendItems=(LegendItemCollection)this.fixedLegendItems.clone();
}

1.5147688282060257
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5163,5166>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getStart().getTime());
}
}
return result;

1.509865951937607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<369,379>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
TimePeriod duration=task.getDuration();
if(duration!=null){
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.509865951937607
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<406,416>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
result=sub.getPercentComplete();
}
}
return result;

1.5090783906374141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<605,615>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.isEmpty()){
return ;
}
long index=Long.MAX_VALUE;
try{
Method m=RegularTimePeriod.class.getDeclaredMethod("createInstance",new Class[]{Class.class,Date.class,TimeZone.class});
RegularTimePeriod newest=(RegularTimePeriod)m.invoke(this.timePeriodClass,new Object[]{this.timePeriodClass,new Date(latest),TimeZone.getDefault()});
index=newest.getSerialIndex();
}catch (NoSuchMethodException e) {
  e.printStackTrace();
}
catch (IllegalAccessException e) {
  e.printStackTrace();
}
catch (InvocationTargetException e) {
  e.printStackTrace();
}


1.5084206140366037
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<905,927>


-------- Patch ---------
if(this.data.isEmpty()){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
result.add(zoomIn,zoomInIndex);
if(zoomOutIndex!=-1){
result.remove(zoomOutIndex);
}else {
zoomOutIndex=zoomInIndex+1;
}
result.add(zoomOut,zoomOutIndex);
if(autoIndex!=-1){
result.remove(autoIndex);
}else {
autoIndex=zoomOutIndex+1;
}
result.add(auto,autoIndex);

1.507196635756174
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<168,182>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(DefaultKeyedValues)this.rows.get(item);
int columnIndex=row.getIndex(columnKey);
if(columnIndex>=0&&row.getValue(columnIndex)!=null){
allNull=false;
break;
}
}

1.5010586458032797
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<381,389>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0,itemCount=this.rows.size();item<itemCount;item++){
row=(KeyedObjects)this.rows.get(item);
int colIndex=row.getIndex(columnKey);
if(colIndex>=0&&row.getObject(colIndex)!=null){
allNull=false;
break;
}
}

1.5010586458032797
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<337,345>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rows.size()==0){
ArrayList newRow=new ArrayList();
for(int column=0;column<numberOfColumns;column++){
if(columnTypes[column]!=Types.NULL){
newRow.add(new Integer(0));
}
}
this.rows.add(newRow);
}

1.495904888720893
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<354,362>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=numberOfColumns;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
this.data.add(clone);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];
if(!Arrays.equals(d1y,d2y)){
return false;
}
}

1.4921902001087912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYDataset.java<324,337>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
RegularTimePeriod period=series.getTimePeriod(i);
int index=getIndex(period);
if(index<0){
result.add(period);
}
}

1.4880440263481216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<500,506>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
return item.isSelected();

1.4822339163415044
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<396,397>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.timePeriodClass=null;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.4784712883856996
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<950,956>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Task task=(Task)iterator.next();
String key=task.getDescription();
int index=this.keys.indexOf(key);
if(index<0){
this.keys.add(key);
}
}

1.4778141807140142
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<260,267>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.4776470099945338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1457,1467>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Object item=indices.get(i);
if(!(item instanceof Integer)){
throw new IllegalArgumentException("Indices must be Integer instances.");
}
if(set.contains(item)){
throw new IllegalArgumentException("Indices must be unique.");
}
set.add(item);
}

1.4776470099945338
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1567,1577>

-------- No Patch ---------


-------- Similar Code ---------
if(edge==RectangleEdge.BOTTOM){
x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);
x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);
y0=state.getCursor()+this.categoryLabelPositionOffset;
y1=y0+state.getMax();
}else if(edge==RectangleEdge.LEFT){
y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);
y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);
x1=state.getCursor()-this.categoryLabelPositionOffset;
x0=x1-state.getMax();
}else if(edge==RectangleEdge.RIGHT){
y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);
y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);
x0=state.getCursor()+this.categoryLabelPositionOffset;
x1=x0-state.getMax();
}

1.4763695190141424
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1002,1025>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(dataset==this.datasets.get(i)){
result=i;
break;
}
}

1.4757507500078768
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1392,1397>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.datasets.size();i++){
if(dataset==this.datasets.get(i)){
result=i;
break;
}
}

1.4757507500078768
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1463,1468>

-------- No Patch ---------


-------- Similar Code ---------
int index=indexOf(x);
if(index<0){
throw new SeriesException("No observation for x = "+x);
}else {
ComparableObjectItem item=getDataItem(index);
item.setObject(y);
fireSeriesChanged();
}

1.4756734848190711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/ComparableObjectSeries.java<301,309>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_minuendAtIntersect){
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.4731140855368159
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<578,581>

-------- No Patch ---------


-------- Similar Code ---------
if(!b_subtrahendAtIntersect){
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.4731140855368159
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<600,603>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getStart().getTime());
}
}
return result;

1.4720654498775234
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<525,536>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
int row=getRowIndex(rowKey);
TaskSeries series=(TaskSeries)this.data.get(row);
Task task=series.get(columnKey.toString());
if(task!=null){
Task sub=task.getSubtask(subinterval);
if(sub!=null){
TimePeriod duration=sub.getDuration();
result=new Long(duration.getEnd().getTime());
}
}
return result;

1.4720654498775234
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<565,576>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseItemLabelGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseItemLabelGenerator;
clone.baseItemLabelGenerator=(CategoryItemLabelGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("ItemLabelGenerator not cloneable.");
}

1.4709322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1691,1700>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseToolTipGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseToolTipGenerator;
clone.baseToolTipGenerator=(CategoryToolTipGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base tool tip generator not cloneable.");
}

1.4709322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1709,1718>

-------- No Patch ---------


-------- Similar Code ---------
if(this.baseURLGenerator instanceof PublicCloneable){
PublicCloneable pc=(PublicCloneable)this.baseURLGenerator;
clone.baseURLGenerator=(CategoryURLGenerator)pc.clone();
}else {
throw new CloneNotSupportedException("Base item URL generator not cloneable.");
}

1.4709322771931796
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1726,1733>

-------- No Patch ---------


-------- Similar Code ---------
if(this.data.size()>0){
this.data.clear();
this.minX=Double.NaN;
this.maxX=Double.NaN;
this.minY=Double.NaN;
this.maxY=Double.NaN;
fireSeriesChanged();
}

1.470729125824351
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<601,608>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.data.getIndex(key);
PieDatasetChangeType ct=PieDatasetChangeType.ADD;
if(index>=0){
ct=PieDatasetChangeType.UPDATE;
}
this.data.setObject(key,new SelectableValue(value));
PieDatasetChangeInfo info=new PieDatasetChangeInfo(ct,index,index);
fireDatasetChanged(info);

1.4683100656790953
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<205,213>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.4653011239171099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
Map urlMap=(Map)this.urls.get(list);
if(urlMap!=null){
result=urlMap.size();
}
return result;

1.4653011239171099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<116,121>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List urls=(List)this.urlSeries.get(list);
if(urls!=null){
result=urls.size();
}
return result;

1.4653011239171099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<84,89>

-------- No Patch ---------


-------- Similar Code ---------
int result=0;
List tooltips=(List)this.toolTipSeries.get(list);
if(tooltips!=null){
result=tooltips.size();
}
return result;

1.4653011239171099
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<94,99>

-------- No Patch ---------


-------- Similar Code ---------
if(get(r,c)!=that.get(r,c)){
return false;
}

1.4632322511610762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<229,231>

-------- No Patch ---------


-------- Similar Code ---------
if(n>0){
result.add(period,sum/n);
}else {
result.add(period,null);
}

1.4599107101332764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<164,169>

-------- No Patch ---------


-------- Similar Code ---------
if(n>0){
result.add(x,sum/n);
}else {
result.add(x,null);
}

1.4599107101332764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<346,351>

-------- No Patch ---------


-------- Similar Code ---------
int upper=Math.max(getDatasetCount(),getRendererCount());
if(index<0||index>=upper){
throw new IllegalArgumentException("Index "+index);
}
ValueAxis valueAxis=null;
List axisIndices=(List)this.datasetToDomainAxesMap.get(new Integer(index));
if(axisIndices!=null){
Integer axisIndex=(Integer)axisIndices.get(0);
valueAxis=getDomainAxis(axisIndex.intValue());
}else {
valueAxis=getDomainAxis(0);
}
return valueAxis;

1.4597955088659866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3909,3925>

-------- No Patch ---------


-------- Similar Code ---------
int upper=Math.max(getDatasetCount(),getRendererCount());
if(index<0||index>=upper){
throw new IllegalArgumentException("Index "+index);
}
ValueAxis valueAxis=null;
List axisIndices=(List)this.datasetToRangeAxesMap.get(new Integer(index));
if(axisIndices!=null){
Integer axisIndex=(Integer)axisIndices.get(0);
valueAxis=getRangeAxis(axisIndex.intValue());
}else {
valueAxis=getRangeAxis(0);
}
return valueAxis;

1.4597955088659866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3936,3952>

-------- No Patch ---------


-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.4584570905080159
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<142,146>

-------- No Patch ---------


-------- Similar Code ---------
List listToAdd=null;
if(urls!=null){
listToAdd=new java.util.ArrayList(urls);
}
this.urlSeries.add(listToAdd);

1.4584570905080159
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<132,136>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>item){
SelectableValue dataItem=(SelectableValue)this.data.getObject(item);
result=dataItem.getValue();
}

1.457889006509066
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<170,173>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue item=(SelectableValue)this.data.getObject(key);
item.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.4535079791858587
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<405,409>


-------- Patch ---------
item.setSelected(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(value<item.value){
item=(PaintItem)this.lookupTable.get(low);
}

1.4517487526781339
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/LookupPaintScale.java<305,307>

-------- No Patch ---------


-------- Similar Code ---------
if(this.plot==null){
return new LegendItemCollection();
}
LegendItemCollection result=new LegendItemCollection();
int index=this.plot.getIndexOf(this);
CategoryDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getRowCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}
return result;

1.449143708164779
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1790,1808>


-------- Patch ---------
if(copy!=null){
int end=dataset.getRowCount();
for(int index=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem clone=getLegendItem(this.data.getIndexOf(this),i);
if(item!=null){
item.add(item);
}
}
}
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.plot==null){
return new LegendItemCollection();
}
LegendItemCollection result=new LegendItemCollection();
int index=this.plot.getIndexOf(this);
XYDataset dataset=this.plot.getDataset(index);
if(dataset!=null){
int seriesCount=dataset.getSeriesCount();
for(int i=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem item=getLegendItem(index,i);
if(item!=null){
result.add(item);
}
}
}
}
return result;

1.449143708164779
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<953,971>


-------- Patch ---------
if(copy!=null){
int end=dataset.getSeriesCount();
for(int index=0;i<seriesCount;i++){
if(isSeriesVisibleInLegend(i)){
LegendItem clone=getLegendItem(this.data.getIndexOf(this),i);
if(item!=null){
item.add(item);
}
}
}
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(seriesIndex+1);

1.4475992571543461
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<443,444>

-------- No Patch ---------


-------- Similar Code ---------
int seriesCount=data.length;
List seriesNameList=new java.util.ArrayList(seriesCount);
for(int i=0;i<seriesCount;i++){
seriesNameList.add("Series "+(i+1));
}
return seriesNameList;

1.4467977896919644
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultWindDataset.java<282,287>

-------- No Patch ---------


-------- Similar Code ---------
Title duplicate=(Title)super.clone();
duplicate.listenerList=new EventListenerList();
return duplicate;

1.4462287446539035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/Title.java<362,365>


-------- Patch ---------
duplicate.listenerList=new EventListenerList();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ArrayList row=(ArrayList)this.rows.get(itemIndex);
return (Number)row.get(0);

1.4462287446539035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/jdbc/JDBCXYDataset.java<428,429>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (List)map.get("bins");

1.4462287446539035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<272,273>

-------- No Patch ---------


-------- Similar Code ---------
Map map=(Map)this.list.get(series);
return (Comparable)map.get("key");

1.4462287446539035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<321,322>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
TaskSeries s=(TaskSeries)this.data.get(i);
if(s.getKey().equals(rowKey)){
result=i;
break;
}
}

1.442803023063806
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeriesCollection.java<222,228>

-------- No Patch ---------


-------- Similar Code ---------
this.availableMouseHandlers=new java.util.ArrayList();
this.zoomHandler=new ZoomHandler();
this.availableMouseHandlers.add(zoomHandler);
PanHandler panHandler=new PanHandler();
int panMask=InputEvent.CTRL_MASK;
String osName=System.getProperty("os.name").toLowerCase();
if(osName.startsWith("mac os x")){
panMask=InputEvent.ALT_MASK;
}
panHandler.setModifier(panMask);
this.availableMouseHandlers.add(panHandler);
this.auxiliaryMouseHandlers=new java.util.ArrayList();

1.4413122668680114
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<789,804>


-------- Patch ---------
this.clone=new ZoomHandler();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.add(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(item.startsWith("mac os x")){
index=InputEvent.ALT_MASK;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
copy.setModifier(index);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.add(copy);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int c=0;c<this.data.getColumnCount();c++){
Number value=this.data.getValue(r,c);
if(value!=null){
unique.add(value);
}
}

1.4383702970259813
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<172,177>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,item);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(item,this.index);
}

1.4376295022428516
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<178,183>

-------- No Patch ---------


-------- Similar Code ---------
CategoryDataset existing=(CategoryDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.432937265516416
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1352,1365>


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
datasetChanged(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ValueDataset existing=(ValueDataset)this.datasets.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.432937265516416
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<496,509>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
datasetChanged(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
datasetChanged(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.seriesList.size();i++){
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1y=d1[1];
double[] d2y=d2[1];
if(!Arrays.equals(d1y,d2y)){
return false;
}
double[] d1z=d1[2];
double[] d2z=d2[2];
if(!Arrays.equals(d1z,d2z)){
return false;
}
}

1.432738136596883
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultXYZDataset.java<369,387>

-------- No Patch ---------


-------- Similar Code ---------
if(plot instanceof CategoryPlot){
rangeAxis=((CategoryPlot)plot).getRangeAxis();
}else if(plot instanceof XYPlot){
rangeAxis=((XYPlot)plot).getRangeAxis();
}
this.rangeAxisPropertyPanel=DefaultAxisEditor.getInstance(rangeAxis);
if(this.rangeAxisPropertyPanel!=null){
this.rangeAxisPropertyPanel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
tabs.add(localizationResources.getString("Range_Axis"),this.rangeAxisPropertyPanel);
}
tabs.add(localizationResources.getString("Appearance"),appearance);
panel.add(tabs);
add(panel);

1.431289823526585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/editor/DefaultPlotEditor.java<320,338>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.4298232884789726
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4854,4859>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
domainAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.4298232884789726
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5239,5244>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
rangeAxis.zoomRange(lowerPercent,upperPercent);
}
}

1.4298232884789726
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5312,5317>

-------- No Patch ---------


-------- Similar Code ---------
if(count>1){
Number value=(Number)values.get(start+(count-1)/2);
result=value.doubleValue();
}else {
Number value=(Number)values.get(start);
result=value.doubleValue();
}

1.4258963378608815
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<279,287>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<999,1004>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
CategoryAxis axis=(CategoryAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1013,1018>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1277,1282>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1291,1296>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<972,977>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis axis=(ValueAxis)this.domainAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<986,991>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.removeChangeListener(this);
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1270,1275>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis axis=(ValueAxis)this.rangeAxes.get(i);
if(axis!=null){
axis.configure();
}
}

1.425180576345261
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1286,1291>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<4;i++){
this.quadrantPaint[i]=SerialUtilities.readPaint(stream);
}
this.domainZeroBaselineStroke=SerialUtilities.readStroke(stream);
this.domainZeroBaselinePaint=SerialUtilities.readPaint(stream);
int domainAxisCount=this.domainAxes.size();
for(int i=0;i<domainAxisCount;i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
axis.setPlot(this);
axis.addChangeListener(this);
}
}
int rangeAxisCount=this.rangeAxes.size();

1.4207352025429703
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5789,5806>

-------- No Patch ---------


-------- Similar Code ---------
if(mapIndex<getListCount()){
Map urlMap=(Map)this.urls.get(mapIndex);
if(urlMap!=null){
result=(String)urlMap.get(key);
}
}

1.418757286477034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<134,139>

-------- No Patch ---------


-------- Similar Code ---------
if(maximum<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
this.maximumItemCount=maximum;
int count=this.data.size();
if(count>maximum){
delete(0,count-maximum);
}

1.4174769463609032
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<292,299>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getLowerBound();

1.4164444426572937
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<365,366>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.getUpperBound();

1.4164444426572937
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<391,392>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
return bin.isSelected();

1.4164444426572937
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<455,456>

-------- No Patch ---------


-------- Similar Code ---------
List keys=new java.util.ArrayList();
int fieldIndex=0;
int start=0;
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex>0){
String key=line.substring(start,i);
keys.add(removeStringDelimiters(key));
}
start=i+1;
fieldIndex++;
}
}
String key=line.substring(start,line.length());
keys.add(removeStringDelimiters(key));
return keys;

1.4144336727346791
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<123,139>

-------- No Patch ---------


-------- Similar Code ---------
this.maximumItemCount=maximum;
int remove=this.data.size()-maximum;
if(remove>0){
this.data.subList(0,remove).clear();
findBoundsByIteration();
fireSeriesChanged();
}

1.4024744594222192
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<384,390>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
Date end=duration.getEnd();
return (start.getTime()+end.getTime())/2.0;

1.401092685908166
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<389,394>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

1.3959615325424692
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1665,1683>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
configureDomainAxes();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
configureRangeAxes();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Size2D[] sizes=new Size2D[blocks.size()];
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
width=width+sizes[i].getWidth();
maxHeight=Math.max(sizes[i].height,maxHeight);
block.setBounds(new Rectangle2D.Double(x,0.0,sizes[i].width,sizes[i].height));
x=x+sizes[i].width;
}
if(blockCount>1){
width=width+this.horizontalGap*(blockCount-1);
}
if(this.verticalAlignment!=VerticalAlignment.TOP){
for(int i=0;i<blocks.size();i++){
if(this.verticalAlignment==VerticalAlignment.CENTER){
}else if(this.verticalAlignment==VerticalAlignment.BOTTOM){
}
}
}

1.3939639509256352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<363,390>

-------- No Patch ---------


-------- Similar Code ---------
Size2D[] sizes=new Size2D[blocks.size()];
for(int i=0;i<blocks.size();i++){
Block block=(Block)blocks.get(i);
sizes[i]=block.arrange(g2,RectangleConstraint.NONE);
height=height+sizes[i].getHeight();
maxWidth=Math.max(sizes[i].width,maxWidth);
block.setBounds(new Rectangle2D.Double(0.0,y,sizes[i].width,sizes[i].height));
y=y+sizes[i].height;
}
if(blockCount>1){
height=height+this.verticalGap*(blockCount-1);
}
if(this.horizontalAlignment!=HorizontalAlignment.LEFT){
for(int i=0;i<blocks.size();i++){
if(this.horizontalAlignment==HorizontalAlignment.CENTER){
}else if(this.horizontalAlignment==HorizontalAlignment.RIGHT){
}
}
}

1.3939639509256352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<318,346>

-------- No Patch ---------


-------- Similar Code ---------
CategoryAxis existing=(CategoryAxis)this.domainAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.domainAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.3924700308427762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<807,821>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.rangeAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.3924700308427762
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1084,1098>


-------- Repeated Patch ---------
if(item!=null){
existing.removeChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date start=duration.getStart();
return start.getTime();

1.3919089488858605
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<398,402>

-------- No Patch ---------


-------- Similar Code ---------
TaskSeries s=this.underlying.getSeries(series);
Task t=s.get(item);
TimePeriod duration=t.getDuration();
Date end=duration.getEnd();
return end.getTime();

1.3919089488858605
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/XYTaskDataset.java<406,410>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis xAxis=(Axis)this.domainAxes.get(i);
if(xAxis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=xAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.3918718847506155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3479,3485>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis yAxis=(Axis)this.rangeAxes.get(i);
if(yAxis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=yAxis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.3918718847506155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3526,3532>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
Axis axis=(Axis)this.domainAxes.get(i);
if(axis!=null){
RectangleEdge edge=getDomainAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.3918718847506155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3135,3141>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
Axis axis=(Axis)this.rangeAxes.get(i);
if(axis!=null){
RectangleEdge edge=getRangeAxisEdge(i);
space=axis.reserveSpace(g2,this,plotArea,edge,space);
}
}

1.3918718847506155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3182,3188>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
bin.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.3900159156937952
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<483,487>


-------- Repeated Patch ---------
item.setSelected(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.minEndIndex>=0){
long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
if(end<minEnd){
this.minEndIndex=index;
}
}else {
this.minEndIndex=index;
}

1.3893997258093789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<313,322>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxEndIndex>=0){
long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
if(end>maxEnd){
this.maxEndIndex=index;
}
}else {
this.maxEndIndex=index;
}

1.3893997258093789
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<324,333>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMean();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<327,332>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMedian();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<344,349>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ1();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<361,366>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getQ3();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<378,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinRegularValue();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<395,400>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxRegularValue();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<412,417>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMinOutlier();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<428,433>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getMaxOutlier();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<446,451>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem stats=(BoxAndWhiskerItem)this.items.get(item);
if(stats!=null){
result=stats.getOutliers();
}
return result;

1.3892141673953708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<463,468>

-------- No Patch ---------


-------- Similar Code ---------
lg.setShapeLocation(getLegendItemGraphicLocation());
legendItem.add(lg,this.legendItemGraphicEdge);
Font textFont=item.getLabelFont();
if(textFont==null){
textFont=this.itemFont;
}
Paint textPaint=item.getLabelPaint();
if(textPaint==null){
textPaint=this.itemPaint;
}
LabelBlock labelBlock=new LabelBlock(item.getLabel(),textFont,textPaint);
labelBlock.setPadding(this.itemLabelPadding);
legendItem.add(labelBlock);

1.388590875589586
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<450,463>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMean();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<357,363>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMean();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<377,383>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMedian();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<397,403>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMedian();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<417,423>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ1();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<437,443>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ1();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<457,463>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getQ3();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<477,483>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getQ3();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<497,503>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<654,660>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinRegularValue();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<674,680>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<694,700>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxRegularValue();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<714,720>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<734,740>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMinOutlier();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<754,760>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<774,780>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getMaxOutlier();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<794,800>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(row,column);
if(item!=null){
result=item.getOutliers();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<814,820>

-------- No Patch ---------


-------- Similar Code ---------
List result=null;
BoxAndWhiskerItem item=(BoxAndWhiskerItem)this.data.getObject(rowKey,columnKey);
if(item!=null){
result=item.getOutliers();
}
return result;

1.3849228798196171
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<834,840>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;(index==-1)&&(i<menu.getComponentCount());i++){
Component comp=menu.getComponent(i);
if(comp instanceof JMenuItem){
JMenuItem item=(JMenuItem)comp;
if(text.equals(item.getText())){
index=i;
}
}
}

1.3845066342006098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/PolarChartPanel.java<242,250>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.3825383133046365
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<352,355>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriodValues series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.3825383133046365
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<213,216>

-------- No Patch ---------


-------- Similar Code ---------
OHLCSeries series=getSeries(index);
if(series!=null){
removeSeries(series);
}

1.3825383133046365
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/ohlc/OHLCSeriesCollection.java<386,389>

-------- No Patch ---------


-------- Similar Code ---------
if(result==null){
result=new LegendItemCollection();
int count=this.datasets.size();
for(int datasetIndex=0;datasetIndex<count;datasetIndex++){
CategoryDataset dataset=getDataset(datasetIndex);
if(dataset!=null){
CategoryItemRenderer renderer=getRenderer(datasetIndex);
if(renderer!=null){
int seriesCount=dataset.getRowCount();
for(int i=0;i<seriesCount;i++){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}
}
}
}
}

1.379156586000995
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2237,2257>


-------- Repeated Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=copy.getRowCount();index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=seriesCount;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
DialScale result=(DialScale)this.scales.get(0);
Integer scaleIndex=(Integer)this.datasetToScaleMap.get(datasetIndex);
if(scaleIndex!=null){
result=getScale(scaleIndex.intValue());
}
return result;

1.3787490441908532
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/dial/DialPlot.java<699,704>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
space.add(maxdim,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
space.add(maxdim,edge);
}

1.378676304489947
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<201,206>

-------- No Patch ---------


-------- Similar Code ---------
this.crosshairDatasetIndex=index;
if(notify){
fireChangeEvent();
}

1.3762261003400549
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3092,3095>

-------- No Patch ---------


-------- Similar Code ---------
if(data instanceof YisSymbolic){
yStr=((YisSymbolic)data).getYSymbolicValue(series,item);
}else {
double y=data.getYValue(series,item);
yStr=Double.toString(round(y,2));
}

1.37478932224508
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<84,90>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<yOutliers.size();i++){
double outlier=((Number)yOutliers.get(i)).doubleValue();
if(outlier>boxAndWhiskerData.getMaxOutlier(series,item).doubleValue()){
outlierListCollection.setHighFarOut(true);
}else if(outlier<boxAndWhiskerData.getMinOutlier(series,item).doubleValue()){
outlierListCollection.setLowFarOut(true);
}else if(outlier>boxAndWhiskerData.getMaxRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}else if(outlier<boxAndWhiskerData.getMinRegularValue(series,item).doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx,yyOutlier,oRadius));
}
Collections.sort(outliers);
}

1.371826521064213
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<637,660>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x3<l_x1)&&(l_x1<l_x4)){
double l_slope=(l_y4-l_y3)/(l_x4-l_x3);
l_subtrahendCurX=l_minuendCurX;
l_subtrahendCurY=new Double((l_slope*l_x1)+(l_y3-(l_slope*l_x3)));
l_subtrahendXs.add(l_subtrahendCurX);
l_subtrahendYs.add(l_subtrahendCurY);
}

1.3667292694358146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<540,549>

-------- No Patch ---------


-------- Similar Code ---------
if((l_x1<l_x3)&&(l_x3<l_x2)){
double l_slope=(l_y2-l_y1)/(l_x2-l_x1);
l_minuendCurX=l_subtrahendCurX;
l_minuendCurY=new Double((l_slope*l_x3)+(l_y1-(l_slope*l_x1)));
l_minuendXs.add(l_minuendCurX);
l_minuendYs.add(l_minuendCurY);
}

1.3667292694358146
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<551,560>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=0){
xAxis=plot.getDomainAxisForDataset(index);
}

1.3643928883564014
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<927,929>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getStartBoundary());

1.3627781666641026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<408,410>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
return new Double(bin.getEndBoundary());

1.3627781666641026
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<426,428>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=0){
x=dataset.getXValue(series,index);
}

1.3576295022428515
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<237,239>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.3564206395474745
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<407,416>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
plot.draw(g2,this.subplotAreas[i],anchor,parentState,subplotInfo);
}

1.3564206395474745
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<460,469>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset instanceof SelectableCategoryDataset){
SelectableCategoryDataset scd=(SelectableCategoryDataset)dataset;
if(scd.getSelectionState()!=null){
CategoryDatasetSelectionState selState=scd.getSelectionState();
selState.clearSelection();
}
}
}

1.355318268839549
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5365,5379>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset instanceof AbstractXYDataset){
AbstractXYDataset axyd=(AbstractXYDataset)dataset;
if(axyd.getSelectionState()!=null){
XYDatasetSelectionState selState=axyd.getSelectionState();
selState.clearSelection();
}
}
}

1.355318268839549
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<6013,6025>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelBandsDimension,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelBandsDimension,edge);
}
double tickMarkSpace=0.0;
if(isTickMarksVisible()){
tickMarkSpace=getTickMarkOutsideLength();
}
if(this.minorTickMarksVisible){
tickMarkSpace=Math.max(tickMarkSpace,this.minorTickMarkOutsideLength);
}
space.add(tickMarkSpace,edge);
return space;

1.3547697462771175
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<626,645>

-------- No Patch ---------


-------- Similar Code ---------
if(b_subtrahendDone&&(l_x1<l_x4)){
double l_slope=(l_y2-l_y1)/(l_x2-l_x1);
l_minuendNextX=l_subtrahendNextX;
l_minuendNextY=new Double((l_slope*l_x4)+(l_y1-(l_slope*l_x1)));
}
l_minuendMaxY=Math.max(l_minuendMaxY,l_minuendNextY.doubleValue());
l_subtrahendMaxY=Math.max(l_subtrahendMaxY,l_subtrahendNextY.doubleValue());
l_minuendMinY=Math.min(l_minuendMinY,l_minuendNextY.doubleValue());
l_subtrahendMinY=Math.min(l_subtrahendMinY,l_subtrahendNextY.doubleValue());
l_minuendXs.add(l_minuendNextX);
l_minuendYs.add(l_minuendNextY);
l_subtrahendXs.add(l_subtrahendNextX);
l_subtrahendYs.add(l_subtrahendNextY);
l_polygonXs.addAll(l_minuendXs);
l_polygonYs.addAll(l_minuendYs);

1.3504361924877224
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<786,814>


-------- Patch ---------
index=Math.max(l_minuendMaxY,data.doubleValue());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
copy.add(start);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(row<0){
throw new UnknownKeyException("Row key ("+rowKey);
}
int column=this.columnKeys.indexOf(columnKey);
if(column<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
int index=rowData.getIndex(columnKey);
if(index>=0){
return rowData.getObject(index);
}else {
return null;
}

1.3496733628360351
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<229,245>


-------- Patch ---------
if(index>=0){
return data.getObject(index);
}else {
return null;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(index<itemCount){
x=dataset.getXValue(series,index);
}

1.346986847916229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RendererUtilities.java<143,145>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getDomainAxis(index);
}

1.346986847916229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<765,768>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof CategoryPlot){
CategoryPlot cp=(CategoryPlot)parent;
result=cp.getRangeAxis(index);
}

1.346986847916229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1046,1049>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getDomainAxis(index);
}

1.346986847916229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<824,827>

-------- No Patch ---------


-------- Similar Code ---------
if(parent instanceof XYPlot){
XYPlot xy=(XYPlot)parent;
result=xy.getRangeAxis(index);
}

1.346986847916229
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1188,1191>

-------- No Patch ---------


-------- Similar Code ---------
if(value>upperOutlierThreshold){
outliers.add(number);
if(value>maxOutlier&&value<=upperFaroutThreshold){
maxOutlier=value;
}
}else if(value<lowerOutlierThreshold){
outliers.add(number);
if(value<minOutlier&&value>=lowerFaroutThreshold){
minOutlier=value;
}
}else {
minRegularValue=Math.min(minRegularValue,value);
maxRegularValue=Math.max(maxRegularValue,value);
}

1.3434280052783443
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<142,157>

-------- No Patch ---------


-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
int d=calendar.get(Calendar.DAY_OF_MONTH);
int m=calendar.get(Calendar.MONTH)+1;
int y=calendar.get(Calendar.YEAR);
this.serialDate=SerialDate.createInstance(d,m,y);
peg(calendar);

1.3428094180550594
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Day.java<162,174>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis result=plot.getRangeAxis(index);
if(result==null){
result=plot.getRangeAxis();
}
return result;

1.339956992550528
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1774,1778>

-------- No Patch ---------


-------- Similar Code ---------
if(renderer.isSeriesVisible(i)&&renderer.isSeriesVisibleInLegend(i)){
LegendItem item=renderer.getLegendItem(datasetIndex,i);
if(item!=null){
result.add(item);
}
}

1.338513117424222
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5407,5414>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getDomainAxisLocation(index);
RectangleEdge result=Plot.resolveDomainAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getDomainAxisEdge());
}
return result;

1.3381696228301618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1068,1074>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge());
}
return result;

1.3381696228301618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1368,1374>

-------- No Patch ---------


-------- Similar Code ---------
if(count>1){
Number value=(Number)values.get((count-1)/2);
result=value.doubleValue();
}else {
Number value=(Number)values.get(0);
result=value.doubleValue();
}

1.3335334607217955
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<215,222>

-------- No Patch ---------


-------- Similar Code ---------
AxisLocation location=getRangeAxisLocation(index);
RectangleEdge result=Plot.resolveRangeAxisLocation(location,this.orientation);
if(result==null){
result=RectangleEdge.opposite(getRangeAxisEdge(0));
}
return result;

1.3312924499990484
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<1254,1260>

-------- No Patch ---------


-------- Similar Code ---------
double[][] d1=(double[][])this.seriesList.get(i);
double[][] d2=(double[][])that.seriesList.get(i);
double[] d1x=d1[0];
double[] d2x=d2[0];
if(!Arrays.equals(d1x,d2x)){
return false;
}
double[] d1xs=d1[1];
double[] d2xs=d2[1];
if(!Arrays.equals(d1xs,d2xs)){
return false;
}
double[] d1xe=d1[2];

1.3247133312187547
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultIntervalXYDataset.java<466,478>


-------- Patch ---------
if(!Arrays.equals(copy,clone)){
return false;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
int index=indexOf(x);
if(index<0){
throw new SeriesException("No observation for x = "+x);
}else {
updateByIndex(index,y);
}

1.3231148036350233
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<745,751>

-------- No Patch ---------


-------- Similar Code ---------
if(Math.abs(angle2-angle1)>getMinimumArcAngleToDraw()){
arcList.add(new Arc2D.Double(arcX,arcY+depth,pieArea.getWidth(),pieArea.getHeight()-depth,angle1,angle2-angle1,Arc2D.PIE));
}else {
arcList.add(null);
}

1.322034074714869
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<412,419>

-------- No Patch ---------


-------- Similar Code ---------
if(i>pointCount-1){
TimeSeriesDataItem startOfMovingAvg=source.getRawDataItem(i-pointCount);
rollingSumForPeriod-=startOfMovingAvg.getValue().doubleValue();
result.add(period,rollingSumForPeriod/pointCount);
}else if(i==pointCount-1){
result.add(period,rollingSumForPeriod/pointCount);
}

1.3217323533574281
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<214,224>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
DefaultKeyedValues rowData=(DefaultKeyedValues)iterator.next();
int index=rowData.getIndex(columnKey);
if(index>=0){
rowData.removeValue(columnKey);
}
}

1.3198047642511137
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<475,481>

-------- No Patch ---------


-------- Similar Code ---------
PiePlotState state=super.initialise(g2,plotArea,plot,index,info);
state.setPassesRequired(3);
return state;

1.319200914471209
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<323,325>

-------- No Patch ---------


-------- Similar Code ---------
CombinedDomainCategoryPlot result=(CombinedDomainCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
return result;

1.3184419376629106
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<663,670>


-------- Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(dataset==null){
throw new IllegalArgumentException("Null \'dataset\' argument.");
}
StringBuffer label=new StringBuffer();
label.append(MessageFormat.format(this.formatPattern,createItemArray(dataset,series)));
Integer key=new Integer(series);
List extraLabels=(List)this.seriesLabelLists.get(key);
if(extraLabels!=null){
Object[] temp=new Object[1];
for(int i=0;i<extraLabels.size();i++){
temp[0]=extraLabels.get(i);
String labelAddition=MessageFormat.format(this.additionalFormatPattern,temp);
label.append(labelAddition);
}
}
return label.toString();

1.318151145329495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java<138,155>


-------- Patch ---------
if(end==null){
throw new IllegalArgumentException("Null \'dataset\' argument.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotArea[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotArea[i],subAnchor,parentState,subplotInfo);
}

1.3174475133180585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<368,381>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.subplots.size();i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
PlotRenderingInfo subplotInfo=null;
if(info!=null){
subplotInfo=new PlotRenderingInfo(info.getOwner());
info.addSubplotInfo(subplotInfo);
}
Point2D subAnchor=null;
if(anchor!=null&&this.subplotAreas[i].contains(anchor)){
subAnchor=anchor;
}
plot.draw(g2,this.subplotAreas[i],subAnchor,parentState,subplotInfo);
}

1.3174475133180585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<466,479>

-------- No Patch ---------


-------- Similar Code ---------
if(keyIndex>=0){
this.keys.set(keyIndex,key);
this.values.set(keyIndex,value);
}else {
this.keys.add(key);
this.values.add(value);
this.indexMap.put(key,new Integer(this.keys.size()-1));
}

1.3173122038127587
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<232,240>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
 final int index=stream.readInt();
if(index!=-1){
setPaint(index,SerialUtilities.readPaint(stream));
}
}

1.313197043430533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<171,176>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setShape(index,SerialUtilities.readShape(stream));
}
}

1.313197043430533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ShapeList.java<169,174>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
setStroke(index,SerialUtilities.readStroke(stream));
}
}

1.313197043430533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/StrokeList.java<166,171>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.3118577603178008
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<884,893>

-------- No Patch ---------


-------- Similar Code ---------
if(RectangleEdge.isTopOrBottom(edge)){
labelHeight=labelEnclosure.getHeight();
space.add(labelHeight+tickLabelHeight,edge);
}else if(RectangleEdge.isLeftOrRight(edge)){
labelWidth=labelEnclosure.getWidth();
space.add(labelWidth+tickLabelWidth,edge);
}

1.3118577603178008
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ValueAxis.java<811,818>

-------- No Patch ---------


-------- Similar Code ---------
if(copy){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem copyItem=new JMenuItem(localizationResources.getString("Copy"));
copyItem.setActionCommand(COPY_COMMAND);
copyItem.addActionListener(this);
result.add(copyItem);
separator=!save;
}

1.3098222635834307
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2745,2756>

-------- No Patch ---------


-------- Similar Code ---------
case 0 :
setSeriesNeedle(index,new ArrowNeedle(true));
setSeriesPaint(index,Color.red);
this.seriesNeedle[index].setHighlightPaint(Color.white);
break;

case 1 :


1.3093940036871485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<446,451>


-------- Patch ---------
case 1 :

TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYDataItem item=getRawDataItem(index);
boolean iterate=false;
double oldY=item.getYValue();
if(!Double.isNaN(oldY)){
iterate=oldY<=this.minY||oldY>=this.maxY;
}
item.setY(y);
if(iterate){
findBoundsByIteration();
}else if(y!=null){
double yy=y.doubleValue();
this.minY=minIgnoreNaN(this.minY,yy);
this.maxY=maxIgnoreNaN(this.maxY,yy);
}
fireSeriesChanged();

1.3089438101440516
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<668,686>

-------- No Patch ---------


-------- Similar Code ---------
Composite originalComposite=g2.getComposite();
g2.clip(dataArea);
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));
AxisState domainAxisState=(AxisState)axisStateMap.get(getDomainAxis());
if(domainAxisState==null){
if(parentState!=null){
domainAxisState=(AxisState)parentState.getSharedAxisStates().get(getDomainAxis());
}
}
AxisState rangeAxisState=(AxisState)axisStateMap.get(getRangeAxis());
if(rangeAxisState==null){
if(parentState!=null){
rangeAxisState=(AxisState)parentState.getSharedAxisStates().get(getRangeAxis());
}
}

1.3074458055920544
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3301,3322>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge result=null;
AxisLocation location=getDomainAxisLocation(index);
if(location!=null){
result=Plot.resolveDomainAxisLocation(location,this.orientation);
}else {
result=RectangleEdge.opposite(getDomainAxisEdge(0));
}
return result;

1.3025801242117578
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<974,982>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<yOutliers.size();i++){
double outlier=((Number)yOutliers.get(i)).doubleValue();
Number minOutlier=bawDataset.getMinOutlier(row,column);
Number maxOutlier=bawDataset.getMaxOutlier(row,column);
Number minRegular=bawDataset.getMinRegularValue(row,column);
Number maxRegular=bawDataset.getMaxRegularValue(row,column);
if(outlier>maxOutlier.doubleValue()){
outlierListCollection.setHighFarOut(true);
}else if(outlier<minOutlier.doubleValue()){
outlierListCollection.setLowFarOut(true);
}else if(outlier>maxRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}else if(outlier<minRegular.doubleValue()){
yyOutlier=rangeAxis.valueToJava2D(outlier,dataArea,location);
outliers.add(new Outlier(xx+state.getBarWidth()/2.0,yyOutlier,oRadius));
}
Collections.sort(outliers);
}

1.3023803179501612
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java<801,826>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series.getItemCount();i++){
TimeSeriesDataItem item=series.getRawDataItem(i);
TimeSeriesDataItem oldItem=addOrUpdate(item.getPeriod(),item.getValue());
if(oldItem!=null){
overwritten.add(oldItem);
}
}

1.3017493407717926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<753,760>

-------- No Patch ---------


-------- Similar Code ---------
if(pos==position){
this.keys.set(pos,key);
this.values.set(pos,value);
}else {
if(pos>=0){
this.keys.remove(pos);
this.values.remove(pos);
}
this.keys.add(position,key);
this.values.add(position,value);
rebuildIndex();
}

1.3016878714040203
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues.java<277,290>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
double x=(bin.getStartBoundary()+bin.getEndBoundary())/2.0;
return new Double(x);

1.3016009130636277
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<356,359>

-------- No Patch ---------


-------- Similar Code ---------
if(vlist.size()>0){
double maxval=Double.NEGATIVE_INFINITY;
double minval=Double.POSITIVE_INFINITY;
for(int i=0;i<vlist.size();i++){
Number n=(Number)vlist.get(i);
double v=n.doubleValue();
minval=Math.min(minval,v);
maxval=Math.max(maxval,v);
}
if(this.maximumRangeValue==null){
this.maximumRangeValue=new Double(maxval);
}else if(maxval>this.maximumRangeValue.doubleValue()){
this.maximumRangeValue=new Double(maxval);
}
if(this.minimumRangeValue==null){
this.minimumRangeValue=new Double(minval);
}else if(minval<this.minimumRangeValue.doubleValue()){
this.minimumRangeValue=new Double(minval);
}
this.rangeBounds=new Range(this.minimumRangeValue.doubleValue(),this.maximumRangeValue.doubleValue());
}

1.3012178844003697
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<130,156>

-------- No Patch ---------


-------- Similar Code ---------
{
if(orientation==PlotOrientation.VERTICAL){
left.moveTo(transX1,transStack1);
left.lineTo(transX1,transY1);
left.lineTo(transXLeft,transStackLeft);
}else {
left.moveTo(transStack1,transX1);
left.lineTo(transY1,transX1);
left.lineTo(transStackLeft,transXLeft);
}
left.clone();
}

1.299959472207711
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<366,378>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
 final Object object=get(i);
if(object!=null&&object instanceof Serializable){
stream.writeInt(i);
stream.writeObject(object);
}else {
stream.writeInt(-1);
}
}

1.2966569191216792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<255,267>

-------- No Patch ---------


-------- Similar Code ---------
List vlist=new ArrayList(values.size());
Iterator iterator=values.listIterator();
while(iterator.hasNext()){
Object obj=iterator.next();
if(obj instanceof Number){
Number n=(Number)obj;
double v=n.doubleValue();
if(!Double.isNaN(v)){
vlist.add(n);
}
}
}
Collections.sort(vlist);
this.data.addObject(vlist,rowKey,columnKey);

1.2952757711412768
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<115,128>


-------- Patch ---------
Collections.sort(copy);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(data instanceof XisSymbolic){
xStr=((XisSymbolic)data).getXSymbolicValue(series,item);
}else if(data instanceof TimeSeriesCollection){
RegularTimePeriod p=((TimeSeriesCollection)data).getSeries(series).getTimePeriod(item);
xStr=p.toString();
}else {
double x=data.getXValue(series,item);
xStr=Double.toString(round(x,2));
}

1.294877717771404
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/SymbolicXYItemLabelGenerator.java<91,103>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getColumnKey(index);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getRowKey(index);
}

1.291166343733976
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<204,209>

-------- No Patch ---------


-------- Similar Code ---------
HashSet hs=(HashSet)this.xPoints.clone();
Iterator iterator=hs.iterator();
while(iterator.hasNext()){
Number x=(Number)iterator.next();
if(canPrune(x)){
removeAllValuesForX(x);
}
}

1.289694308929126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<466,473>

-------- No Patch ---------


-------- Similar Code ---------
int result=127;
int size=size();
result=HashUtilities.hashCode(result,size());
if(size>0){
result=HashUtilities.hashCode(result,this.objects[0]);
if(size>1){
result=HashUtilities.hashCode(result,this.objects[size-1]);
if(size>2){
result=HashUtilities.hashCode(result,this.objects[size/2]);
}
}
}
return result;

1.2831802429824786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<206,221>

-------- No Patch ---------


-------- Similar Code ---------
List result=new ArrayList();
result.add(this.defaultGroup);
Iterator iterator=this.groups.iterator();
while(iterator.hasNext()){
Comparable group=(Comparable)iterator.next();
if(!result.contains(group)){
result.add(group);
}
}
return result;

1.2825490635963437
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<116,125>

-------- No Patch ---------


-------- Similar Code ---------
SimpleHistogramBin bin=(SimpleHistogramBin)this.bins.get(item);
if(this.adjustForBinSize){
return bin.getItemCount()/(bin.getUpperBound()-bin.getLowerBound());
}else {
return bin.getItemCount();
}

1.2814963981845595
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<333,340>

-------- No Patch ---------


-------- Similar Code ---------
EntityBlockParams ebp=null;
StandardEntityCollection sec=null;
if(params instanceof EntityBlockParams){
ebp=(EntityBlockParams)params;
if(ebp.getGenerateEntities()){
sec=new StandardEntityCollection();
}
}
Rectangle2D contentArea=(Rectangle2D)area.clone();
contentArea=trimMargin(contentArea);
drawBorder(g2,contentArea);
contentArea=trimBorder(contentArea);
contentArea=trimPadding(contentArea);

1.278936965947582
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BlockContainer.java<205,217>


-------- Patch ---------
drawBorder(clone,(Rectangle2D)copy.clone());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CombinedRangeCategoryPlot result=(CombinedRangeCategoryPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.2788183227852428
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<530,545>


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(copy!=null){
rangeAxis.configure();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CombinedRangeXYPlot result=(CombinedRangeXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis rangeAxis=result.getRangeAxis();
if(rangeAxis!=null){
rangeAxis.configure();
}
return result;

1.2788183227852428
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<678,692>


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(copy!=null){
rangeAxis.configure();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
if(copy!=null){
rangeAxis.configure();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CombinedDomainXYPlot result=(CombinedDomainXYPlot)super.clone();
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
for(Iterator it=result.subplots.iterator();it.hasNext();){
Plot child=(Plot)it.next();
child.setParent(result);
}
ValueAxis domainAxis=result.getDomainAxis();
if(domainAxis!=null){
domainAxis.configure();
}
return result;

1.2788183227852428
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<697,711>


-------- Repeated Patch ---------
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(copy!=null){
domainAxis.configure();
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(b_colinear){
l_minuendXs.clear();
l_minuendYs.clear();
l_subtrahendXs.clear();
l_subtrahendYs.clear();
l_polygonXs.clear();
l_polygonYs.clear();
b_colinear=false;
boolean b_useMinuend=((l_x3<=l_x1)&&(l_x1<=l_x4));
l_polygonXs.add(b_useMinuend?l_minuendCurX:l_subtrahendCurX);
l_polygonYs.add(b_useMinuend?l_minuendCurY:l_subtrahendCurY);
}

1.2781227070406995
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<664,682>

-------- No Patch ---------


-------- Similar Code ---------
if(this.extract==TableOrder.BY_ROW){
result=this.source.getValue(this.index,keyIndex);
}else if(this.extract==TableOrder.BY_COLUMN){
result=this.source.getValue(keyIndex,this.index);
}

1.2776295022428514
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/CategoryToPieDataset.java<268,273>

-------- No Patch ---------


-------- Similar Code ---------
if(object instanceof PublicCloneable){
 final PublicCloneable pc=(PublicCloneable)object;
return pc.clone();
}else {
try{
 final Method method=object.getClass().getMethod("clone",(Class[])null);
if(Modifier.isPublic(method.getModifiers())){
return method.invoke(object,(Object[])null);
}
}catch (NoSuchMethodException e) {
  e.printStackTrace();
}
catch (IllegalAccessException e) {
  e.printStackTrace();
}
catch (InvocationTargetException e) {
  e.printStackTrace();
}

}

1.2762046620387482
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ObjectUtilities.java<165,186>

-------- No Patch ---------


-------- Similar Code ---------
long start=period.getStart().getTime();
long end=period.getEnd().getTime();
long middle=start+((end-start)/2);
if(this.minStartIndex>=0){
long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
if(start<minStart){
this.minStartIndex=index;
}
}else {
this.minStartIndex=index;
}
if(this.maxStartIndex>=0){
long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
if(start>maxStart){
this.maxStartIndex=index;
}
}else {
this.maxStartIndex=index;
}

1.274448616731617
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<259,283>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.2715252748575483
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/SlidingGanttCategoryDataset.java<175,179>

-------- No Patch ---------


-------- Similar Code ---------
int index=this.underlying.getColumnIndex(key);
if(index>=this.firstCategoryIndex&&index<=lastCategoryIndex()){
return index-this.firstCategoryIndex;
}
return -1;

1.2715252748575483
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/SlidingCategoryDataset.java<176,180>

-------- No Patch ---------


-------- Similar Code ---------
XYDataset existing=getDataset(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.datasets.set(index,dataset);
if(dataset!=null){
dataset.addChangeListener(this);
}
DatasetChangeEvent event=new DatasetChangeEvent(this,dataset,new DatasetChangeInfo());
datasetChanged(event);

1.2705121386928218
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1428,1441>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultReadObject();
this.objects=new Object[this.size];
int count=stream.readInt();
for(int i=0;i<count;i++){
int index=stream.readInt();
if(index!=-1){
set(index,stream.readObject());
}
}

1.2701163604022752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<282,290>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.2693688649748958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<523,536>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<itemLabelList.size();i++){
Object[] record=(Object[])itemLabelList.get(i);
int series=((Integer)record[0]).intValue();
Rectangle2D bar=(Rectangle2D)record[1];
boolean neg=((Boolean)record[2]).booleanValue();
CategoryItemLabelGenerator generator=getItemLabelGenerator(series,column,false);
if(generator!=null&&isItemLabelVisible(series,column,false)){
drawItemLabelForBar(g2,plot,dataset,series,column,false,generator,bar,neg);
}
}

1.2693688649748958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<722,735>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
return sv.isSelected();

1.2681529033663994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<465,466>

-------- No Patch ---------


-------- Similar Code ---------
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}

1.2645427252537846
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<126,130>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double value=dataset.getYValue(i,index);
if(!Double.isNaN(value)){
result+=value;
}
}

1.2644976954426301
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<600,605>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.2623201149289347
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4823,4841>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.domainAxes.size();i++){
ValueAxis domainAxis=(ValueAxis)this.domainAxes.get(i);
if(domainAxis!=null){
if(useAnchor){
double sourceX=source.getX();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceX=source.getY();
}
double anchorX=domainAxis.java2DToValue(sourceX,info.getDataArea(),getDomainAxisEdge());
domainAxis.resizeRange2(factor,anchorX);
}else {
domainAxis.resizeRange(factor);
}
}
}

1.2623201149289347
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5202,5220>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.rangeAxes.size();i++){
ValueAxis rangeAxis=(ValueAxis)this.rangeAxes.get(i);
if(rangeAxis!=null){
if(useAnchor){
double sourceY=source.getY();
if(this.orientation==PlotOrientation.HORIZONTAL){
sourceY=source.getX();
}
double anchorY=rangeAxis.java2DToValue(sourceY,info.getDataArea(),getRangeAxisEdge());
rangeAxis.resizeRange2(factor,anchorY);
}else {
rangeAxis.resizeRange(factor);
}
}
}

1.2623201149289347
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5279,5297>

-------- No Patch ---------


-------- Similar Code ---------
if(pos>=0){
this.data.remove(pos);
}

1.2605325789616881
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<236,238>

-------- No Patch ---------


-------- Similar Code ---------
if(obj instanceof DefaultBoxAndWhiskerCategoryDataset){
DefaultBoxAndWhiskerCategoryDataset dataset=(DefaultBoxAndWhiskerCategoryDataset)obj;
return ObjectUtilities.equal(this.data,dataset.data);
}

1.2579970852487372
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<900,904>

-------- No Patch ---------


-------- Similar Code ---------
SelectableValue sv=(SelectableValue)this.data.getObject(row,column);
sv.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.2557465669543975
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/category/DefaultCategoryDataset.java<475,479>


-------- Repeated Patch ---------
item.setSelected(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
RectangleInsets insets=getInsets();
insets.trim(plotArea);
Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();
if(info!=null){
info.setPlotArea(plotArea);
info.setDataArea(plotArea);
}
drawBackground(g2,plotArea);
Shape savedClip=g2.getClip();
g2.clip(plotArea);
double gapPercent=getInteriorGap();
double labelPercent=0.0;

1.2532307851771785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<232,248>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRenderer existing=getRenderer(index);
if(existing!=null){
existing.removeChangeListener(this);
}
this.renderers.set(index,renderer);
if(renderer!=null){
renderer.setPlot(this);
renderer.addChangeListener(this);
}
configureDomainAxes();
configureRangeAxes();
if(notify){
fireChangeEvent();
}

1.252616544389755
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1658,1671>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
this.copy.set(clone,data);
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
configureDomainAxes();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
configureRangeAxes();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
configureDomainAxes();
configureRangeAxes();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(getItemCount()>this.maximumItemCount){
XYDataItem removed=(XYDataItem)this.data.remove(0);
updateBoundsForRemovedItem(removed);
}

1.2525664057273533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<545,548>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemCount()>this.maximumItemCount){
TimeSeriesDataItem d=(TimeSeriesDataItem)this.data.remove(0);
updateBoundsForRemovedItem(d);
}

1.2525664057273533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<629,632>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D adjustedPlotArea=space.shrink(plotArea,null);
int n=this.subplots.size();
int totalWeight=0;
for(int i=0;i<n;i++){
CategoryPlot sub=(CategoryPlot)this.subplots.get(i);
totalWeight+=sub.getWeight();
}
this.subplotAreas=new Rectangle2D[n];
double x=adjustedPlotArea.getX();
double y=adjustedPlotArea.getY();
double usableSize=0.0;
if(orientation==PlotOrientation.HORIZONTAL){
usableSize=adjustedPlotArea.getWidth()-this.gap*(n-1);
}else if(orientation==PlotOrientation.VERTICAL){
usableSize=adjustedPlotArea.getHeight()-this.gap*(n-1);
}

1.2497316194451549
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<368,386>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.2490114075526866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<202,204>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.2490114075526866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<247,249>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.2490114075526866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<302,304>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subplots.get(i)==subplot){
position=i;
}

1.2490114075526866
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<206,208>

-------- No Patch ---------


-------- Similar Code ---------
Map clone=new HashMap();
Set keys=map.keySet();
Iterator iterator=keys.iterator();
while(iterator.hasNext()){
Object key=iterator.next();
List entry=(List)map.get(key);
Object toAdd=ObjectUtilities.deepClone(entry);
clone.put(key,toAdd);
}
return clone;

1.2485290311128565
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5182,5191>

-------- No Patch ---------


-------- Similar Code ---------
invalidateRangeInfo();
if(seriesNumber>=this.valueHistory.length){
throw new IllegalArgumentException("TimeSeriesDataset.addValue(): series #"+seriesNumber);
}
if(this.valueHistory[seriesNumber]==null){
this.valueHistory[seriesNumber]=new ValueSequence(this.historyCount);
this.seriesCount++;
}
this.valueHistory[seriesNumber].enterData(index,value);
fireSeriesChanged();

1.246043873982744
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<449,466>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D titleArea=(Rectangle2D)area.clone();
g2.setFont(this.font);
g2.setPaint(this.paint);
TextBlockAnchor anchor=null;
float x=0.0;
HorizontalAlignment horizontalAlignment=getHorizontalAlignment();
if(horizontalAlignment==HorizontalAlignment.LEFT){
x=(float)titleArea.getX();
anchor=TextBlockAnchor.TOP_LEFT;
}else if(horizontalAlignment==HorizontalAlignment.RIGHT){
x=(float)titleArea.getMaxX();
anchor=TextBlockAnchor.TOP_RIGHT;
}else if(horizontalAlignment==HorizontalAlignment.CENTER){
x=(float)titleArea.getCenterX();
anchor=TextBlockAnchor.TOP_CENTER;
}

1.2450586063708093
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/TextTitle.java<740,757>


-------- Patch ---------
copy.setFont(this.clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Rectangle2D titleArea=(Rectangle2D)area.clone();
g2.setFont(this.font);
g2.setPaint(this.paint);
TextBlockAnchor anchor=null;
float y=0.0;
VerticalAlignment verticalAlignment=getVerticalAlignment();
if(verticalAlignment==VerticalAlignment.TOP){
y=(float)titleArea.getY();
anchor=TextBlockAnchor.TOP_RIGHT;
}else if(verticalAlignment==VerticalAlignment.BOTTOM){
y=(float)titleArea.getMaxY();
anchor=TextBlockAnchor.TOP_LEFT;
}else if(verticalAlignment==VerticalAlignment.CENTER){
y=(float)titleArea.getCenterY();
anchor=TextBlockAnchor.TOP_CENTER;
}

1.2450586063708093
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/TextTitle.java<787,804>


-------- Repeated Patch ---------
copy.setFont(this.clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(sectionIndex);
if(arc==null){
continue;
}
upperArc=new Arc2D.Double(arcX,arcY,pieArea.getWidth(),pieArea.getHeight()-depth,arc.getAngleStart(),arc.getAngleExtent(),Arc2D.PIE);
Comparable currentKey=(Comparable)sectionKeys.get(sectionIndex);
paint=lookupSectionPaint(currentKey,true);
outlinePaint=lookupSectionOutlinePaint(currentKey,false);
outlineStroke=lookupSectionOutlineStroke(currentKey,false);
g2.setPaint(paint);
g2.fill(upperArc);
g2.setStroke(outlineStroke);

1.2436788218280501
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<534,548>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemLabelGenerator generator=(CategoryItemLabelGenerator)this.itemLabelGeneratorList.get(row);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<316,321>


-------- Patch ---------
if(index==null){
generator=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CategoryURLGenerator generator=(CategoryURLGenerator)this.urlGeneratorList.get(row);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<547,552>


-------- Repeated Patch ---------
if(index==null){
generator=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/RenderAttributes.java<377,381>


-------- Patch ---------
if(index==null){
result=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.positiveItemLabelPositionList.get(series);
if(position==null){
position=this.basePositiveItemLabelPosition;
}
return position;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2127,2132>


-------- Patch ---------
if(index==null){
position=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ItemLabelPosition position=(ItemLabelPosition)this.negativeItemLabelPositionList.get(series);
if(position==null){
position=this.baseNegativeItemLabelPosition;
}
return position;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<2247,2252>


-------- Repeated Patch ---------
if(index==null){
position=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYItemLabelGenerator generator=(XYItemLabelGenerator)this.itemLabelGeneratorList.get(series);
if(generator==null){
generator=this.baseItemLabelGenerator;
}
return generator;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<353,358>


-------- Repeated Patch ---------
if(index==null){
generator=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYToolTipGenerator generator=(XYToolTipGenerator)this.toolTipGeneratorList.get(series);
if(generator==null){
generator=this.baseToolTipGenerator;
}
return generator;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<465,470>


-------- Repeated Patch ---------
if(index==null){
generator=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYURLGenerator generator=(XYURLGenerator)this.urlGeneratorList.get(series);
if(generator==null){
generator=this.baseURLGenerator;
}
return generator;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<573,578>


-------- Repeated Patch ---------
if(index==null){
generator=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Font result=(Font)this.labelFontList.get(series);
if(result==null){
result=this.defaultLabelFont;
}
return result;

1.2416760429539475
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieSelectionAttributes.java<240,244>


-------- Repeated Patch ---------
if(index==null){
result=this.start;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ValueAxis existing=getDomainAxis(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.domainAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.2406458094636912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<870,884>


-------- Repeated Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
ValueAxis existing=getRangeAxis(index);
if(existing!=null){
existing.removeChangeListener(this);
}
if(axis!=null){
axis.setPlot(this);
}
this.rangeAxes.set(index,axis);
if(axis!=null){
axis.configure();
axis.addChangeListener(this);
}
if(notify){
fireChangeEvent();
}

1.2406458094636912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<1220,1234>


-------- Repeated Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
this.copy.set(clone,data);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.set(clone,data);
if(data!=null){
axis.configure();
axis.addChangeListener(this);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(item!=null){
existing.removeChangeListener(this);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
int min=calendar.get(Calendar.MINUTE);
this.minute=(byte)min;
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.2393217259903706
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Minute.java<146,158>

-------- No Patch ---------


-------- Similar Code ---------
this.calendar.setTime(date);
int year=this.calendar.get(Calendar.YEAR);
int month=this.calendar.get(Calendar.MONTH);
int quarter=month/3;
if(this.quarterFirst){
toAppendTo.append(this.quarters[quarter]);
toAppendTo.append(" ");
toAppendTo.append(year);
}else {
toAppendTo.append(year);
toAppendTo.append(" ");
toAppendTo.append(this.quarters[quarter]);
}
return toAppendTo;

1.2385783497052685
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/QuarterDateFormat.java<154,168>

-------- No Patch ---------


-------- Similar Code ---------
if(value/total<minimumPercent){
otherKeys.add(currentKey);
}

1.2383081061989265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<321,323>

-------- No Patch ---------


-------- Similar Code ---------
this.dates.add(date);
this.items.add(item);
if(this.minimumRangeValue==null){
this.minimumRangeValue=item.getMinRegularValue();
}else {
if(item.getMinRegularValue().doubleValue()<this.minimumRangeValue.doubleValue()){
this.minimumRangeValue=item.getMinRegularValue();
}
}
if(this.maximumRangeValue==null){
this.maximumRangeValue=item.getMaxRegularValue();
}else {
if(item.getMaxRegularValue().doubleValue()>this.maximumRangeValue.doubleValue()){
this.maximumRangeValue=item.getMaxRegularValue();
}
}
this.rangeBounds=new Range(this.minimumRangeValue.doubleValue(),this.maximumRangeValue.doubleValue());
fireDatasetChanged(new DatasetChangeInfo());

1.2381669371918593
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java<224,246>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
this.copy.add(clone);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Repeated Patch ---------
fireDatasetChanged(new DatasetChangeInfo());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
setValue(null,rowKey,columnKey);
boolean allNull=true;
int rowIndex=getRowIndex(rowKey);
DefaultKeyedValues row=(DefaultKeyedValues)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getValue(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}
allNull=true;

1.238150647947949
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<357,378>

-------- No Patch ---------


-------- Similar Code ---------
if(this.minMiddleIndex>=0){
long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
long minMiddle=s+(e-s)/2;
if(middle<minMiddle){
this.minMiddleIndex=index;
}
}else {
this.minMiddleIndex=index;
}

1.235988940138113
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
if(this.maxMiddleIndex>=0){
long s=getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
long e=getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
long maxMiddle=s+(e-s)/2;
if(middle>maxMiddle){
this.maxMiddleIndex=index;
}
}else {
this.maxMiddleIndex=index;
}

1.235988940138113
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValues.java<299,311>

-------- No Patch ---------


-------- Similar Code ---------
if(y0>=0.0){
left.moveTo((float)xx1,transStack1);
left.lineTo((float)xx1,transY1);
left.lineTo((float)xxLeft,transStackLeft);
left.clone();
}else {
double yleft=(y0+y1)/2.0+stackLeft[0];
float transYLeft=(float)rangeAxis.valueToJava2D(yleft,dataArea,edge1);
left.moveTo((float)xx1,transY1);
left.lineTo((float)xx1,transStack1);
left.lineTo((float)xxLeft,transStackLeft);
left.lineTo((float)xxLeft,transYLeft);
left.closePath();
}

1.2342615323782604
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedAreaRenderer.java<309,324>

-------- No Patch ---------


-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.2341348997508894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4543,4545>

-------- No Patch ---------


-------- Similar Code ---------
if(annotation instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(annotation);
}

1.2341348997508894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4560,4562>

-------- No Patch ---------


-------- Similar Code ---------
if(a instanceof XYAnnotationBoundsInfo){
includedAnnotations.add(a);
}

1.2341348997508894
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4598,4600>

-------- No Patch ---------


-------- Similar Code ---------
if(otherKeys.size()>=minItems){
result.setValue(key,otherValue);
}

1.2334663630425267
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<346,348>

-------- No Patch ---------


-------- Similar Code ---------
String strToReturn;
try{
strToReturn=(String)this.symbols.get((int)value);
}catch (IndexOutOfBoundsException ex) {
  strToReturn="";
}

return strToReturn;

1.2333839727811862
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<753,760>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D dataArea=space.shrink(area,null);
this.axisOffset.trim(dataArea);
dataArea=integerise(dataArea);
if(dataArea.isEmpty()){
return ;
}
createAndAddEntity((Rectangle2D)dataArea.clone(),info,null,null);
if(info!=null){
info.setDataArea(dataArea);
}
drawBackground(g2,dataArea);
Map axisStateMap=drawAxes(g2,area,dataArea,info);
PlotOrientation orient=getOrientation();

1.2329518025467583
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3241,3257>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
this.copy.trim(data);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(data.isEmpty()){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
createAndAddEntity((Rectangle2D)data.clone(),index,null,null);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(index!=null){
info.setDataArea(data);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.2322443927320785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<343,346>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRendererState state=super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
return state;

1.2322443927320785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<323,328>

-------- No Patch ---------


-------- Similar Code ---------
int index=getColumnIndex(columnKey);
if(index<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
Iterator iterator=this.rows.iterator();
while(iterator.hasNext()){
KeyedObjects rowData=(KeyedObjects)iterator.next();
int i=rowData.getIndex(columnKey);
if(i>=0){
rowData.removeValue(i);
}
}
this.columnKeys.remove(columnKey);

1.231879593753463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<412,425>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(XYPlot)this.subplots.get(subplotIndex);
}

1.2290545424917398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<529,531>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(XYPlot)this.subplots.get(subplotIndex);
}

1.2290545424917398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<580,582>

-------- No Patch ---------


-------- Similar Code ---------
if(subplotIndex>=0){
result=(CategoryPlot)this.subplots.get(subplotIndex);
}

1.2290545424917398
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<256,258>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
entities.add(new AxisLabelEntity(this,hotspot,this.labelToolTip,this.labelURL));
}

1.228166975127067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1388,1391>

-------- No Patch ---------


-------- Similar Code ---------
if(e!=null){
e.add(new PlotEntity(dataArea,this,toolTip,urlText));
}

1.228166975127067
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/Plot.java<1176,1178>

-------- No Patch ---------


-------- Similar Code ---------
int minorTickCount=this.tickUnit.getMinorTickCount();
double start=Math.floor(calculateLog(getLowerBound()));
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.227764270260074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<520,541>

-------- No Patch ---------


-------- Similar Code ---------
int minorTickCount=this.tickUnit.getMinorTickCount();
double start=Math.floor(calculateLog(getLowerBound()));
double end=Math.ceil(calculateLog(getUpperBound()));
double current=start;
while(current<=end){
double v=calculateValue(current);
if(range.contains(v)){
ticks.add(new NumberTick(TickType.MAJOR,v,createTickLabel(v),textAnchor,TextAnchor.CENTER,0.0));
}
double next=Math.pow(this.base,current+this.tickUnit.getSize());
for(int i=1;i<minorTickCount;i++){
double minorV=v+i*((next-v)/minorTickCount);
if(range.contains(minorV)){
ticks.add(new NumberTick(TickType.MINOR,minorV,"",textAnchor,TextAnchor.CENTER,0.0));
}
}
current=current+this.tickUnit.getSize();
}

1.227764270260074
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<572,593>

-------- No Patch ---------


-------- Similar Code ---------
if(this.outlierLists.isEmpty()){
return this.outlierLists.add(new OutlierList(outlier));
}else {
boolean updated=false;
for(Iterator iterator=this.outlierLists.iterator();iterator.hasNext();){
OutlierList list=(OutlierList)iterator.next();
if(list.isOverlapped(outlier)){
updated=updateOutlierList(list,outlier);
}
}
if(!updated){
updated=this.outlierLists.add(new OutlierList(outlier));
}
return updated;
}

1.227658440143319
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<137,154>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=(Number)this.seriesBarWidthList.get(series);
if(n!=null){
result=n.doubleValue();
}
return result;

1.2271849499492857
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/LayeredBarRenderer.java<109,114>

-------- No Patch ---------


-------- Similar Code ---------
Range result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
int count=series.getItemCount();
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}
}

1.225648596821011
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<652,671>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<line.length();i++){
if(line.charAt(i)==this.fieldDelimiter){
if(fieldIndex==0){
String key=line.substring(start,i);
rowKey=removeStringDelimiters(key);
}else {
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,i)));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));
}
start=i+1;
fieldIndex++;
}
}
Double value=Double.valueOf(removeStringDelimiters(line.substring(start,line.length())));
dataset.addValue(value,rowKey,(Comparable)columnKeys.get(fieldIndex-1));

1.2237587730959958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/io/CSV.java<155,179>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
Number z=series.getItem(itemIndex);
return z;

1.2226163310256908
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<198,200>

-------- No Patch ---------


-------- Similar Code ---------
int hash=5;
hash=HashUtilities.hashCode(hash,this.intervalDelegate);
hash=HashUtilities.hashCode(hash,this.data);
return hash;

1.222611290358491
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<515,518>

-------- No Patch ---------


-------- Similar Code ---------
List values=(List)this.data.getObject(row,column);
if(values!=null){
return Collections.unmodifiableList(values);
}else {
return Collections.EMPTY_LIST;
}

1.2224912177574287
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java<172,178>


-------- Patch ---------
if(index!=null){
return Collections.unmodifiableList(values);
}else {
return Collections.EMPTY_LIST;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
{
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
GeneralPath path=convertToDataSpace(region,dataArea,dataset);
int seriesCount=dataset.getSeriesCount();
for(int s=0;s<seriesCount;s++){
int itemCount=dataset.getItemCount(s);
for(int i=0;i<itemCount;i++){
double x=dataset.getXValue(s,i);
double y=dataset.getYValue(s,i);
if(path.contains(x,y)){
state.setSelected(s,i,true,false);
}
}
}
state.fireSelectionEvent();
}
}

1.2214683339075059
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5911,5945>

-------- No Patch ---------


-------- Similar Code ---------
State state=(State)super.initialise(g2,dataArea,plot,data,info);
state.setProcessVisibleItemsOnly(false);
this.points=new Vector();
setDrawSeriesLineAsPath(true);
return state;

1.2211677457116332
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<151,155>


-------- Patch ---------
item.setProcessVisibleItemsOnly(false);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy=new Vector();
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
setDrawSeriesLineAsPath(true);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<rendererCount;i++){
CategoryItemRenderer renderer=(CategoryItemRenderer)this.renderers.get(i);
if(renderer!=null){
renderer.addChangeListener(this);
}
}

1.2206554110034618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5264,5270>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<values.length;i++){
int binIndex=bins-1;
if(values[i]<maximum){
double fraction=(values[i]-minimum)/(maximum-minimum);
if(fraction<0.0){
fraction=0.0;
}
binIndex=(int)(fraction*bins);
if(binIndex>=bins){
binIndex=bins-1;
}
}
HistogramBin bin=(HistogramBin)binList.get(binIndex);
bin.incrementCount();
}
Map map=new HashMap();
map.put("key",key);
map.put("bins",binList);
map.put("values.length",new Integer(values.length));
map.put("bin width",new Double(binWidth));
this.list.add(map);

1.2201928592255467
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<189,213>


-------- Patch ---------
clone.put("values.length",new Integer(values.length));
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.copy.add(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(row<rowCount){
Number n=data.getValue(row,column);
if(n!=null){
total+=n.doubleValue();
}
}

1.219837109098738
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<159,164>

-------- No Patch ---------


-------- Similar Code ---------
if(col<colCount){
Number n=data.getValue(row,col);
if(n!=null){
total+=n.doubleValue();
}
}

1.219837109098738
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<214,219>

-------- No Patch ---------


-------- Similar Code ---------
int result=127;
int size=size();
result=HashUtilities.hashCode(result,size());
if(size>0){
result=HashUtilities.hashCode(result,getPaint(0));
if(size>1){
result=HashUtilities.hashCode(result,getPaint(size-1));
if(size>2){
result=HashUtilities.hashCode(result,getPaint(size/2));
}
}
}
return result;

1.2187102731219845
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<116,130>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getMean();
}
return result;

1.2182562131529504
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<153,159>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getMean();
}
return result;

1.2182562131529504
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<197,203>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(row,column);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.2182562131529504
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<215,221>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
MeanAndStandardDeviation masd=(MeanAndStandardDeviation)this.data.getObject(rowKey,columnKey);
if(masd!=null){
result=masd.getStandardDeviation();
}
return result;

1.2182562131529504
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<233,239>

-------- No Patch ---------


-------- Similar Code ---------
if(columnIndex<0){
throw new UnknownKeyException("Column key ("+columnKey);
}
setObject(null,rowKey,columnKey);
boolean allNull=true;
KeyedObjects row=(KeyedObjects)this.rows.get(rowIndex);
for(int item=0,itemCount=row.getItemCount();item<itemCount;item++){
if(row.getObject(item)!=null){
allNull=false;
break;
}
}
if(allNull){
this.rowKeys.remove(rowIndex);
this.rows.remove(rowIndex);
}
allNull=true;

1.2181405692654206
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<311,335>

-------- No Patch ---------


-------- Similar Code ---------
Shape savedClip=g2.getClip();
g2.clip(dataArea);
drawDomainGridlines(g2,dataArea);
AxisState rangeAxisState=(AxisState)axisStateMap.get(getRangeAxis());
if(rangeAxisState==null){
if(parentState!=null){
rangeAxisState=(AxisState)parentState.getSharedAxisStates().get(getRangeAxis());
}
}
if(rangeAxisState!=null){
drawRangeGridlines(g2,dataArea,rangeAxisState.getTicks());
drawZeroRangeBaseline(g2,dataArea);
}
Graphics2D savedG2=g2;

1.2168238860377751
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3665,3682>

-------- No Patch ---------


-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getDomainMarkers(index,layer);
CategoryAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
CategoryMarker marker=(CategoryMarker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.21606985709352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4200,4213>


-------- Patch ---------
if(item==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CategoryItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.21606985709352
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4231,4244>


-------- Repeated Patch ---------
if(item==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
total=total+v.doubleValue();
}
}

1.2140530689268556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<279,284>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int i=datasetCount-1;i>=0;i--){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,state);
}
}
for(int i=this.datasets.size()-1;i>=0;i--){
foundData=render(g2,dataArea,i,state,crosshairState)||foundData;
}
for(int i=datasetCount-1;i>=0;i--){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.FOREGROUND,state);
}
}

1.2140513281495389
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3744,3769>

-------- No Patch ---------


-------- Similar Code ---------
if(map==null){
out.writeBoolean(true);
}else {
out.writeBoolean(false);
Set keys=map.keySet();
int count=keys.size();
out.writeInt(count);
Iterator iterator=keys.iterator();
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
out.writeObject(key);
SerialUtilities.writePaint((Paint)map.get(key),out);
}
}

1.2139707405840015
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1433,1447>

-------- No Patch ---------


-------- Similar Code ---------
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

1.2129135313426405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<341,343>

-------- No Patch ---------


-------- Similar Code ---------
if(columnIndex<0){
this.columnKeys.add(columnKey);
}

1.2129135313426405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects2D.java<288,290>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<count;i++){
Task t=(Task)this.tasks.get(i);
if(t.getDescription().equals(description)){
result=t;
break;
}
}

1.2120337922945752
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/gantt/TaskSeries.java<142,148>

-------- No Patch ---------


-------- Similar Code ---------
if(series!=null){
this.seriesList.add(series);
series.addChangeListener(this);
}

1.2114856817256892
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<88,91>

-------- No Patch ---------


-------- Similar Code ---------
if(key.equals(this.aggregatedItemsKey)){
p=this.aggregatedItemsPaint;
}else {
p=(Paint)this.sectionPaints.get(key);
}

1.2111838749775106
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MultiplePiePlot.java<480,485>

-------- No Patch ---------


-------- Similar Code ---------
List bins=getBins(series);
HistogramBin bin=(HistogramBin)bins.get(item);
double total=getTotal(series);
double binWidth=getBinWidth(series);
if(this.type==HistogramType.FREQUENCY){
return new Double(bin.getCount());
}else if(this.type==HistogramType.RELATIVE_FREQUENCY){
return new Double(bin.getCount()/total);
}else if(this.type==HistogramType.SCALE_AREA_TO_1){
return new Double(bin.getCount()/(binWidth*total));
}else {
throw new IllegalStateException();
}

1.2103492249089285
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<376,392>

-------- No Patch ---------


-------- Similar Code ---------
this.data.setValue(value,chipx,chipy);
if(isMaxValue(value)){
this.maxValue=(Double)value;
}
if(isMinValue(value)){
this.minValue=(Double)value;
}

1.2098290960020721
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/WaferMapDataset.java<145,151>

-------- No Patch ---------


-------- Similar Code ---------
if(!this.points.contains(p)){
this.points.add(p);
}

1.2085174296494088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYSplineRenderer.java<198,200>

-------- No Patch ---------


-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.2085174296494088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<4605,4607>

-------- No Patch ---------


-------- Similar Code ---------
if(!result.contains(category)){
result.add(category);
}

1.2085174296494088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<574,576>

-------- No Patch ---------


-------- Similar Code ---------
if(!this.defaultGroup.equals(group)){
this.groups.add(group);
}

1.2085174296494088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<194,196>

-------- No Patch ---------


-------- Similar Code ---------
for(int r=0;r<rowCount;r++){
Number n=data.getValue(r,column);
if(n!=null){
total+=n.doubleValue();
}
}

1.2058074938255785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<129,134>

-------- No Patch ---------


-------- Similar Code ---------
for(int c=0;c<columnCount;c++){
Number n=data.getValue(row,c);
if(n!=null){
total+=n.doubleValue();
}
}

1.2058074938255785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<184,189>

-------- No Patch ---------


-------- Similar Code ---------
XYItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
if(index>=getDatasetCount()){
return ;
}
Collection markers=getDomainMarkers(index,layer);
ValueAxis axis=getDomainAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawDomainMarker(g2,this,axis,marker,dataArea);
}
}

1.204878364506042
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4121,4138>


-------- Repeated Patch ---------
if(item==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
XYItemRenderer r=getRenderer(index);
if(r==null){
return ;
}
if(index>=getDatasetCount()){
return ;
}
Collection markers=getRangeMarkers(index,layer);
ValueAxis axis=getRangeAxisForDataset(index);
if(markers!=null&&axis!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker marker=(Marker)iterator.next();
r.drawRangeMarker(g2,this,axis,marker,dataArea);
}
}

1.204878364506042
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<4154,4171>


-------- Repeated Patch ---------
if(item==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(entity!=null){
StandardEntityCollection sec=new StandardEntityCollection();
sec.add(entity);
result.setEntityCollection(sec);
}

1.203920752540812
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/TextTitle.java<723,727>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,index);
if(!Double.isNaN(v)){
if(v>=0.0){
result[1]+=v;
}else {
result[0]+=v;
}
}
}

1.2035018939704238
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<469,479>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=entityCount-1;i>=0;i--){
ChartEntity entity=(ChartEntity)this.entities.get(i);
if(entity.getArea().contains(x,y)){
return entity;
}
}

1.2013712381762591
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/entity/StandardEntityCollection.java<143,148>

-------- No Patch ---------


-------- Similar Code ---------
if(x+size.width<=width){
itemsInRow.add(block);
block.setBounds(new Rectangle2D.Double(x,y,size.width,size.height));
x=x+size.width;
maxHeight=Math.max(maxHeight,size.height);
}else {
if(itemsInRow.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width-x),size.height));
x=0.0;
y=y+size.height;
}else {
itemsInRow.clear();
x=0.0;
y=y+maxHeight;
maxHeight=size.height;
block.setBounds(new Rectangle2D.Double(x,y,Math.min(size.width,width),size.height));
x=size.width+this.horizontalGap;
itemsInRow.add(block);
}
}

1.2006996340561396
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/FlowArrangement.java<189,222>

-------- No Patch ---------


-------- Similar Code ---------
if(y+size.height<=height){
itemsInColumn.add(block);
block.setBounds(new Rectangle2D.Double(x,y,size.width,size.height));
y=y+size.height;
maxWidth=Math.max(maxWidth,size.width);
}else {
if(itemsInColumn.isEmpty()){
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height-y)));
y=0.0;
x=x+size.width;
}else {
itemsInColumn.clear();
x=x+maxWidth;
y=0.0;
maxWidth=size.width;
block.setBounds(new Rectangle2D.Double(x,y,size.width,Math.min(size.height,height)));
y=size.height+this.verticalGap;
itemsInColumn.add(block);
}
}

1.2006996340561396
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/ColumnArrangement.java<212,245>

-------- No Patch ---------


-------- Similar Code ---------
if(!seriesXPoints.contains(xPoint)){
series.add(xPoint,null);
}

1.1994671107041182
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultTableXYDataset.java<192,194>

-------- No Patch ---------


-------- Similar Code ---------
ValueAxis xAxis=getDomainAxisForDataset(index);
ValueAxis yAxis=getRangeAxisForDataset(index);
if(xAxis==null||yAxis==null){
return foundData;
}
XYItemRenderer renderer=getRenderer(index);
if(renderer==null){
renderer=getRenderer();
if(renderer==null){
return foundData;
}
}
XYItemRendererState state=renderer.initialise(g2,dataArea,this,dataset,info);
XYDatasetSelectionState selectionState=state.getSelectionState();

1.1991958357895784
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3813,3828>

-------- No Patch ---------


-------- Similar Code ---------
if(isSeriesVisible(i)){
double v=0.0;
Number n=dataset.getValue(i,index);
if(n!=null){
v=n.doubleValue();
}
if(!Double.isNaN(v)){
if(v>=0.0){
result[1]+=v;
}else {
result[0]+=v;
}
}
}

1.19849784195518
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedAreaRenderer.java<421,435>

-------- No Patch ---------


-------- Similar Code ---------
{
int datasetCount=this.datasets.size();
for(int d=0;d<datasetCount;d++){
CategoryDataset dataset=(CategoryDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
CategoryDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
CategoryItemRenderer renderer=getRendererForDataset(dataset);
CategoryItemRendererState rs=renderer.initialise(g2,dataArea,this,dataset,null);
int rowCount=dataset.getRowCount();
int columnCount=dataset.getColumnCount();
for(int r=0;r<rowCount;r++){
for(int c=0;c<columnCount;c++){
if(renderer.hitTest(x,y,null,dataArea,this,getDomainAxisForDataset(d),getRangeAxisForDataset(d),dataset,r,c,false,rs)){
state.setSelected(r,c,!state.isSelected(r,c));
}
}
}
}
}

1.1978815337271405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<5310,5340>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int x=series.getItemColumn(itemIndex);
return new Integer(x);

1.1977375523712772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<160,163>

-------- No Patch ---------


-------- Similar Code ---------
MatrixSeries series=(MatrixSeries)this.seriesList.get(seriesIndex);
int y=series.getItemRow(itemIndex);
return new Integer(y);

1.1977375523712772
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeriesCollection.java<179,182>

-------- No Patch ---------


-------- Similar Code ---------
Number[] result=new Number[data.length];
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}
return result;

1.1937101599087083
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<429,433>

-------- No Patch ---------


-------- Similar Code ---------
if(this.explodePercentages!=null){
Number percent=(Number)this.explodePercentages.get(key);
if(percent!=null){
result=percent.doubleValue();
}
}

1.1936184534888152
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<1610,1615>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
this.data=new KeyedObjects();
for(int i=0;i<data.getItemCount();i++){
SelectableValue dataItem=new SelectableValue(data.getValue(i));
this.data.addObject(data.getKey(i),dataItem);
}

1.1935530264738041
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/pie/DefaultPieDataset.java<102,109>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries result=null;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
TimeSeries series=(TimeSeries)iterator.next();
Comparable k=series.getKey();
if(k!=null&&k.equals(key)){
result=series;
}
}
return result;

1.1929128876705215
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<289,298>

-------- No Patch ---------


-------- Similar Code ---------
if(unique.add(entry.getValue())){
String label=getMinPaintValue((Integer)entry.getValue()).toString()+" - ";
String description=label;
Shape shape=new Rectangle2D.Double(1.0,1.0,1.0,1.0);
Paint paint=getSeriesPaint(((Integer)entry.getValue()).intValue());
Paint outlinePaint=Color.black;
Stroke outlineStroke=DEFAULT_STROKE;
result.add(new LegendItem(label,description,null,null,shape,paint,outlineStroke,outlinePaint));
}

1.1897818955171222
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<319,335>

-------- No Patch ---------


-------- Similar Code ---------
if(separator){
result.addSeparator();
separator=false;
}
JMenu zoomInMenu=new JMenu(localizationResources.getString("Zoom_In"));
this.zoomInBothMenuItem=new JMenuItem(localizationResources.getString("All_Axes"));
this.zoomInBothMenuItem.setActionCommand(ZOOM_IN_BOTH_COMMAND);
this.zoomInBothMenuItem.addActionListener(this);
zoomInMenu.add(this.zoomInBothMenuItem);
zoomInMenu.addSeparator();
this.zoomInDomainMenuItem=new JMenuItem(localizationResources.getString("Domain_Axis"));
this.zoomInDomainMenuItem.setActionCommand(ZOOM_IN_DOMAIN_COMMAND);
this.zoomInDomainMenuItem.addActionListener(this);
zoomInMenu.add(this.zoomInDomainMenuItem);

1.1874735054322343
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2785,2805>

-------- No Patch ---------


-------- Similar Code ---------
if(this.markers.size()>0){
LineMetrics metrics=this.font.getLineMetrics("123g",g2.getFontRenderContext());
result=this.topOuterGap+this.topInnerGap;
}

1.1871253024814616
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MarkerAxisBand.java<139,145>

-------- No Patch ---------


-------- Similar Code ---------
if(otherKeys.contains(currentKey)&&otherKeys.size()>=minItems){
otherValue+=dataValue.doubleValue();
}else {
result.setValue(currentKey,dataValue);
}

1.1864714309177804
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<334,342>

-------- No Patch ---------


-------- Similar Code ---------
if(index<0){
throw new IllegalArgumentException("Requires index >= 0.");
}
if(index>=this.objects.length){
Object[] enlarged=new Object[index+this.increment];
System.arraycopy(this.objects,0,enlarged,0,this.objects.length);
this.objects=enlarged;
}
this.objects[index]=object;
this.size=Math.max(this.size,index+1);

1.1857892552206928
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AbstractObjectList.java<123,132>

-------- No Patch ---------


-------- Similar Code ---------
if(clone.dataset!=null){
clone.dataset.addChangeListener(clone);
}

1.185519344060623
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PolarPlot.java<1069,1071>

-------- No Patch ---------


-------- Similar Code ---------
if(this.toolTipText!=null||this.urlText!=null){
ChartEntity entity=new ChartEntity(entityArea,this.toolTipText,this.urlText);
sec.add(entity);
result=new BlockResult();
result.setEntityCollection(sec);
}

1.1854832100161163
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/LabelBlock.java<364,370>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<data.getItemCount();i++){
Number v=data.getValue(i);
if(v!=null){
runningTotal=runningTotal+v.doubleValue();
}
result.addValue(data.getKey(i),new Double(runningTotal/total));
}

1.1854037295343047
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<286,292>

-------- No Patch ---------


-------- Similar Code ---------
if(!urls[i].sameFile(codeBase)){
urlsNoBase.add(urls[i]);
}

1.1848254376477572
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ResourceBundleWrapper.java<102,104>

-------- No Patch ---------


-------- Similar Code ---------
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
Comparable result=this.defaultGroup;
Comparable group=(Comparable)this.keyToGroupMap.get(key);
if(group!=null){
result=group;
}
return result;

1.1845507010964664
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyToGroupMap.java<158,166>


-------- Patch ---------
if(index==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int i=0;i<this.labels.size();i++){
PieLabelRecord plr=getPieLabelRecord(i);
if(y>plr.getLowerY()){
return true;
}
y=plr.getUpperY();
}

1.1845179233902912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<99,105>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
Number[] result=new Number[data.length];
for(int i=0;i<data.length;i++){
result[i]=new Double(data[i]);
}
return result;

1.1837755060333552
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<233,240>

-------- No Patch ---------


-------- Similar Code ---------
if(obj instanceof PaintList){
PaintList that=(PaintList)obj;
int listSize=size();
for(int i=0;i<listSize;i++){
if(!PaintUtilities.equal(getPaint(i),that.getPaint(i))){
return false;
}
}
}

1.1806919450975495
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<98,106>

-------- No Patch ---------


-------- Similar Code ---------
boolean result=false;
result=list.add(outlier);
list.updateAveragedOutlier();
list.setMultiple(true);
return result;

1.180471291655513
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/OutlierListCollection.java<179,183>

-------- No Patch ---------


-------- Similar Code ---------
{
int index=input.indexOf("\n");
if(index>start){
String line=input.substring(start,index);
if(index<input.length()-1){
result.addLine(line,font,paint);
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}else if(index==start){
if(index<input.length()-1){
input=input.substring(index+1);
}else {
moreInputToProcess=false;
}
}else {
result.addLine(input,font,paint);
moreInputToProcess=false;
}
}

1.1795040201812919
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<123,147>

-------- No Patch ---------


-------- Similar Code ---------
dataArea=integerise(dataArea);
if(dataArea.isEmpty()){
return ;
}
state.setDataArea(dataArea);
createAndAddEntity((Rectangle2D)dataArea.clone(),state,null,null);
if(getRenderer()!=null){
getRenderer().drawBackground(g2,this,dataArea);
}else {
drawBackground(g2,dataArea);
}
Map axisStateMap=drawAxes(g2,area,dataArea,state);
if(anchor!=null&&!dataArea.contains(anchor)){
anchor=ShapeUtilities.getPointInRectangle(anchor.getX(),anchor.getY(),dataArea);
}

1.1773679873136687
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3612,3635>

-------- No Patch ---------


-------- Similar Code ---------
String urlText=null;
if(this.legendLabelURLGenerator!=null){
urlText=this.legendLabelURLGenerator.generateURL(this.dataset,key,this.pieIndex);
}
Paint paint=lookupSectionPaint(key,false);
Paint outlinePaint=lookupSectionOutlinePaint(key,false);
Stroke outlineStroke=lookupSectionOutlineStroke(key,false);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,true,shape,true,paint,true,outlinePaint,outlineStroke,false,new Line2D.Float(),new BasicStroke(),Color.black);
item.setDataset(getDataset());
item.setSeriesIndex(this.dataset.getIndex(key));
item.setSeriesKey(key);
result.add(item);

1.177213323485028
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<3049,3066>

-------- No Patch ---------


-------- Similar Code ---------
if(this.subHandlers.size()>0){
Object top=this.subHandlers.peek();
if(top!=null){
result=(DefaultHandler)top;
}
}

1.1763277601165476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/RootHandler.java<97,102>

-------- No Patch ---------


-------- Similar Code ---------
if(itemCount<order+1){
throw new IllegalArgumentException("Not enough data.");
}
int validItems=0;
double[][] data=new double[2][itemCount];
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(!Double.isNaN(x)&&!Double.isNaN(y)){
data[0][validItems]=x;
data[1][validItems]=y;
validItems++;
}
}
if(validItems<order+1){
throw new IllegalArgumentException("Not enough data.");
}

1.1752692930367807
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Regression.java<253,269>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable key=(Comparable)iterator.next();
Number explode=(Number)this.explodePercentages.get(key);
if(explode!=null){
result=Math.max(result,explode.doubleValue());
}
}

1.1733951737765655
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<1652,1658>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<bins;i++){
HistogramBin bin;
if(i==bins-1){
bin=new HistogramBin(lower,maximum);
}else {
upper=minimum+(i+1)*binWidth;
bin=new HistogramBin(lower,upper);
lower=upper;
}
binList.add(bin);
}

1.1727173597958562
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/HistogramDataset.java<173,187>

-------- No Patch ---------


-------- Similar Code ---------
if(e!=null){
e.add(new AxisEntity(hotspot,this));
}

1.172224668326776
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/Axis.java<1174,1176>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.170727873279505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<342,347>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.170727873279505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<348,353>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorPaint!=null){
g2.setPaint(this.errorPaint);
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.170727873279505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<382,387>

-------- No Patch ---------


-------- Similar Code ---------
if(this.errorStroke!=null){
g2.setStroke(this.errorStroke);
}else {
g2.setStroke(getItemStroke(series,item,selected));
}

1.170727873279505
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYErrorRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
if(categories==null){
throw new IllegalArgumentException("Null \'categories\' argument.");
}
int categoryIndex=categories.indexOf(category);
int categoryCount=categories.size();
return getCategoryMiddle(categoryIndex,categoryCount,area,edge);

1.1704949588309457
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<686,691>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' argument.");
}
int l1=data.length;
Number[][] result=new Number[l1][];
for(int i=0;i<l1;i++){
result[i]=createNumberArray(data[i]);
}
return result;

1.1703242991647749
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<252,260>

-------- No Patch ---------


-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((this.maximumRangeValueRow==r&&this.maximumRangeValueColumn==c)||(this.minimumRangeValueRow==r&&this.minimumRangeValueColumn==c)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.169662641752994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<207,219>

-------- No Patch ---------


-------- Similar Code ---------
int r=getRowIndex(rowKey);
int c=getColumnIndex(columnKey);
this.data.removeObject(rowKey,columnKey);
if((r==this.maximumRangeValueRow&&c==this.maximumRangeValueColumn)||(r==this.maximumRangeValueIncStdDevRow&&c==this.maximumRangeValueIncStdDevColumn)){
updateBounds();
}
fireDatasetChanged(new DatasetChangeInfo());

1.169662641752994
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java<433,452>

-------- No Patch ---------


-------- Similar Code ---------
if(properties){
JMenuItem propertiesItem=new JMenuItem(localizationResources.getString("Properties..."));
propertiesItem.setActionCommand(PROPERTIES_COMMAND);
propertiesItem.addActionListener(this);
result.add(propertiesItem);
separator=true;
}

1.1694551971144154
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2736,2743>

-------- No Patch ---------


-------- Similar Code ---------
if(info==null){
return ;
}
EntityCollection entities=info.getOwner().getEntityCollection();
if(entities==null){
return ;
}
XYAnnotationEntity entity=new XYAnnotationEntity(hotspot,rendererIndex,toolTipText,urlText);
entities.add(entity);

1.1692467908784245
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/AbstractXYAnnotation.java<157,166>

-------- No Patch ---------


-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
double mij=get(i,j)*this.m_scaleFactor;
Number n=new Double(mij/this.m_totalSum);
return n;

1.1692337562723427
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/NormalizedMatrixSeries.java<93,99>

-------- No Patch ---------


-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastX=x;
currentTickValue+=unit;
if(cyclenow){
currentTickValue=calculateLowestVisibleTickValue();
upperValue=cycleBound;
cycled=true;
this.boundMappedToLastCycle=true;
}

1.1670262951987997
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<541,560>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.add(clone);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(entities!=null){
String tip=null;
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,key);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,key,this.pieIndex);
}
PieSectionEntity entity=new PieSectionEntity(arc,this.dataset,this.pieIndex,section,key,tip,url);
entities.add(entity);
}

1.1667900669753126
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<2701,2716>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriod period=(TimePeriod)this.values.getRowKey(item);
return getXValue(period);

1.1664444426572937
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<379,380>

-------- No Patch ---------


-------- Similar Code ---------
ImageEncoder imageEncoder=null;
String className=(String)encoders.get(format);
if(className==null){
throw new IllegalArgumentException("Unsupported image format - "+format);
}
try{
Class imageEncoderClass=Class.forName(className);
imageEncoder=(ImageEncoder)imageEncoderClass.newInstance();
}catch (Exception e) {
  throw new IllegalArgumentException(e.toString());
}

return imageEncoder;

1.1661286967432036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/encoders/ImageEncoderFactory.java<102,115>


-------- Patch ---------
if(index==null){
throw new IllegalArgumentException("Unsupported image format - "+end);
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
CycleBoundTick tick=new CycleBoundTick(this.boundMappedToLastCycle,new Double(currentTickValue),tickLabel,anchor,rotationAnchor,angle);
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
result.add(tick);
lastTick=tick;
lastY=y;
if(currentTickValue==cycleBound){
this.internalMarkerCycleBoundTick=tick;
}
currentTickValue+=unit;
if(cyclenow){
currentTickValue=calculateLowestVisibleTickValue();
upperValue=cycleBound;
cycled=true;
this.boundMappedToLastCycle=false;
}

1.1659909512132256
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<711,733>


-------- Repeated Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.add(clone);
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,false);
}

1.1657483176597854
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<366,369>

-------- No Patch ---------


-------- Similar Code ---------
Rectangle2D target=(Rectangle2D)area.clone();
target=trimMargin(target);
if(this.backgroundPaint!=null){
g2.setPaint(this.backgroundPaint);
g2.fill(target);
}
getFrame().draw(g2,target);
getFrame().getInsets().trim(target);
target=trimPadding(target);
double base=this.axis.getLowerBound();
double increment=this.axis.getRange().getLength()/this.subdivisions;
Rectangle2D r=new Rectangle2D.Double();

1.161572732831688
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/PaintScaleLegend.java<537,548>


-------- Patch ---------
getFrame().getInsets().trim((Rectangle2D)item.clone());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(isSeriesVisible(s)){
visibleSeriesKeys.add(dataset.getRowKey(s));
}

1.1604497489441785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<925,927>

-------- No Patch ---------


-------- Similar Code ---------
if(isSeriesVisible(s)){
visibleSeriesKeys.add(dataset.getSeriesKey(s));
}

1.1604497489441785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<868,870>

-------- No Patch ---------


-------- Similar Code ---------
if(isSeriesVisible(s)){
visibleSeriesKeys.add(dataset.getSeriesKey(s));
}

1.1604497489441785
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<916,918>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
State s=(State)state;
s.seriesPath.reset();
s.setLastPointGood(false);
}

1.1603206768563326
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<328,332>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.159295280402048
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<407,409>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
return i.isSelected();

1.159295280402048
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<516,518>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}

1.1588304406382084
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<379,382>

-------- No Patch ---------


-------- Similar Code ---------
if(hotspot==null){
double r=getDefaultEntityRadius();
double w=r*2;
if(getPlot().getOrientation()==PlotOrientation.VERTICAL){
hotspot=new Ellipse2D.Double(entityX-r,entityY-r,w,w);
}else {
hotspot=new Ellipse2D.Double(entityY-r,entityX-r,w,w);
}
}
String tip=null;
XYToolTipGenerator generator=getToolTipGenerator(series,item,selected);
if(generator!=null){
tip=generator.generateToolTip(dataset,series,item);
}
String url=null;
XYURLGenerator urlster=getURLGenerator(series,item,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,series,item);
}
XYItemEntity entity=new XYItemEntity(hotspot,dataset,series,item,tip,url);
entities.add(entity);

1.158735925458872
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1986,2009>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemPaint(series,item);
}

1.158562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<737,739>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemFillPaint(series,item);
}

1.158562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<917,919>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemOutlinePaint(series,item);
}

1.158562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1087,1090>

-------- No Patch ---------


-------- Similar Code ---------
if(selected){
result=this.selectedItemAttributes.getItemShape(series,item);
}

1.158562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/AbstractRenderer.java<1597,1599>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useOutlinePaint){
outlinePaint=getItemOutlinePaint(series,item,selected);
}

1.158562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<752,754>

-------- No Patch ---------


-------- Similar Code ---------
if(segment.inIncludeSegments()){
int p=binarySearchExceptionSegments(segment);
this.exceptionSegments.add(-(p+1),segment);
}

1.1584675283637802
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<887,890>

-------- No Patch ---------


-------- Similar Code ---------
this.calendar.setTime(date);
int month=this.calendar.get(Calendar.MONTH);
toAppendTo.append(this.months[month]);
if(this.showYear[month]){
toAppendTo.append(this.yearFormatter.format(date));
}
return toAppendTo;

1.1575488717795936
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/MonthDateFormat.java<201,207>

-------- No Patch ---------


-------- Similar Code ---------
if(item==s.getLastItemIndex()){
drawShape1(g2,pass,series,item,selected,s.seriesPath);
}

1.1564621164102142
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<969,972>

-------- No Patch ---------


-------- Similar Code ---------
if(key==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
int i=0;
Iterator iterator=this.data.iterator();
while(iterator.hasNext()){
KeyedObject ko=(KeyedObject)iterator.next();
if(ko.getKey().equals(key)){
return i;
}
i++;
}
return -1;

1.1548974357954906
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/KeyedObjects.java<133,145>


-------- Repeated Patch ---------
if(index==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.dataExtractOrder==TableOrder.BY_ROW){
row=series;
col=cat;
}else {
row=cat;
col=series;
}
String tip=null;
if(this.toolTipGenerator!=null){
tip=this.toolTipGenerator.generateToolTip(this.dataset,row,col);
}
String url=null;
if(this.urlGenerator!=null){
url=this.urlGenerator.generateURL(this.dataset,row,col);
}
Shape area=new Rectangle((int)(point.getX()-headW),(int)(point.getY()-headH),(int)(headW*2),(int)(headH*2));
CategoryItemEntity entity=new CategoryItemEntity(area,tip,url,this.dataset,this.dataset.getRowKey(row),this.dataset.getColumnKey(col));
entities.add(entity);

1.1546402983921613
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/SpiderWebPlot.java<1338,1366>

-------- No Patch ---------


-------- Similar Code ---------
String result=null;
Object[] items=createItemArray((XYZDataset)dataset,series,item);
result=MessageFormat.format(getFormatString(),items);
return result;

1.154123037040507
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<180,183>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries s=getSeries(series);
XYDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.1537767535754604
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeriesCollection.java<439,444>

-------- No Patch ---------


-------- Similar Code ---------
TimeSeries s=getSeries(series);
TimeSeriesDataItem i=s.getRawDataItem(item);
i.setSelected(selected);
if(notify){
fireSelectionEvent();
}

1.1537767535754604
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<548,553>

-------- No Patch ---------


-------- Similar Code ---------
if(pass==0&&getShadowsVisible()){
getBarPainter().paintBarShadow(g2,this,series,item,selected,bar,barBase,!getUseYInterval());
}

1.153193009332869
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<310,313>

-------- No Patch ---------


-------- Similar Code ---------
ValueSequence values=this.valueHistory[series];
return values.getData(translateGet(item));

1.1524095305253943
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<754,755>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.unitType.getCalendarField(),this.count);
return calendar.getTime();

1.1513768906100446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<235,238>

-------- No Patch ---------


-------- Similar Code ---------
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(base);
calendar.add(this.rollUnitType.getCalendarField(),this.rollCount);
return calendar.getTime();

1.1513768906100446
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateTickUnit.java<271,274>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<384,389>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<414,419>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number n=getHigh(series,item);
if(n!=null){
result=n.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<215,220>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<249,254>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<283,288>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<317,322>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultHighLowDataset.java<351,356>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number high=getHigh(series,item);
if(high!=null){
result=high.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<146,151>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number low=getLow(series,item);
if(low!=null){
result=low.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<176,181>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number open=getOpen(series,item);
if(open!=null){
result=open.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<206,211>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number close=getClose(series,item);
if(close!=null){
result=close.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<236,241>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number volume=getVolume(series,item);
if(volume!=null){
result=volume.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/DefaultOHLCDataset.java<266,271>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getStartX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<64,69>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getEndX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<82,87>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getStartY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<100,105>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getEndY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractIntervalXYDataset.java<118,123>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number x=getX(series,item);
if(x!=null){
result=x.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<76,81>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number y=getY(series,item);
if(y!=null){
result=y.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYDataset.java<93,98>

-------- No Patch ---------


-------- Similar Code ---------
double result=Double.NaN;
Number z=getZ(series,item);
if(z!=null){
result=z.doubleValue();
}
return result;

1.1510979934275465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/AbstractXYZDataset.java<60,65>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useFillPaint){
g2.setPaint(getItemFillPaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}

1.150656064264728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1028,1033>

-------- No Patch ---------


-------- Similar Code ---------
if(item.getY()!=null){
double y=item.getYValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.150109977808958
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<251,255>

-------- No Patch ---------


-------- Similar Code ---------
if(unit==null){
throw new NullPointerException("Null \'unit\' argument.");
}
this.tickUnits.add(unit);
Collections.sort(this.tickUnits);

1.1493979386712008
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/TickUnits.java<90,94>

-------- No Patch ---------


-------- Similar Code ---------
for(int section=0;section<keys.size();section++){
Number n=this.dataset.getValue(section);
if(n!=null){
double value=n.doubleValue();
if(value>0.0){
runningTotal+=value;
boolean selected=false;
if(ss!=null){
selected=ss.isSelected(this.dataset.getKey(section));
}
drawItem(g2,section,selected,explodeArea,state,pass);
}
}
}

1.148238340480324
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot.java<2595,2609>

-------- No Patch ---------


-------- Similar Code ---------
FontMetrics metrics=null;
if(info!=null){
info.setPlotArea(area);
}
RectangleInsets insets=getInsets();
insets.trim(area);
drawBackground(g2,area);
Rectangle2D interior=(Rectangle2D)area.clone();
this.padding.trim(interior);
int midX=(int)(interior.getX()+(interior.getWidth()/2));
int midY=(int)(interior.getY()+(interior.getHeight()/2));
int stemTop=(int)(interior.getMinY()+getBulbRadius());
int stemBottom=(int)(interior.getMaxY()-getBulbDiameter());

1.1478960399416775
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1115,1131>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
XYZDataset xyzData=(XYZDataset)dataset;
z=xyzData.getZValue(series,item);
}

1.1477325983499664
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<186,189>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tooltip=getCategoryLabelToolTip(tick.getCategory());
entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));
}

1.1473033943411333
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1042,1047>

-------- No Patch ---------


-------- Similar Code ---------
if(save){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem saveItem=new JMenuItem(localizationResources.getString("Save_as..."));
saveItem.setActionCommand(SAVE_COMMAND);
saveItem.addActionListener(this);
result.add(saveItem);
separator=true;
}

1.146871929032237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2758,2769>

-------- No Patch ---------


-------- Similar Code ---------
if(print){
if(separator){
result.addSeparator();
separator=false;
}
JMenuItem printItem=new JMenuItem(localizationResources.getString("Print..."));
printItem.setActionCommand(PRINT_COMMAND);
printItem.addActionListener(this);
result.add(printItem);
separator=true;
}

1.146871929032237
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<2771,2782>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(row,column)){
return ;
}
int visibleRow=state.getVisibleSeriesIndex(row);
if(visibleRow<0){
return ;
}
int visibleRowCount=state.getVisibleSeriesCount();
PlotOrientation orientation=plot.getOrientation();
MultiValueCategoryDataset d=(MultiValueCategoryDataset)dataset;
List values=d.getValues(row,column);
if(values==null){
return ;
}
int valueCount=values.size();

1.1463864285167296
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<392,408>


-------- Patch ---------
if(index<0){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(copy==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2553,2564>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundDomainMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2565,2576>

-------- No Patch ---------


-------- Similar Code ---------
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2827,2838>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2839,2850>

-------- No Patch ---------


-------- Similar Code ---------
if(this.backgroundDomainMarkers!=null){
Collection markers=(Collection)this.backgroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2542,2553>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundDomainMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2554,2565>

-------- No Patch ---------


-------- Similar Code ---------
if(this.backgroundRangeMarkers!=null){
Collection markers=(Collection)this.backgroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2845,2856>

-------- No Patch ---------


-------- Similar Code ---------
if(this.foregroundRangeMarkers!=null){
Collection markers=(Collection)this.foregroundRangeMarkers.get(key);
if(markers!=null){
Iterator iterator=markers.iterator();
while(iterator.hasNext()){
Marker m=(Marker)iterator.next();
m.removeChangeListener(this);
}
markers.clear();
}
}

1.1458186336028076
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<2857,2868>

-------- No Patch ---------


-------- Similar Code ---------
if(domainAxis==null){
throw new IllegalArgumentException("Null \'domainAxis\' argument.");
}
if(rangeAxis==null){
throw new IllegalArgumentException("Null \'rangeAxis\' argument.");
}
this.data=data;
this.xDataRange=calculateXDataRange(data);
this.yDataRange=calculateYDataRange(data);
this.domainAxis=domainAxis;
this.domainAxis.setPlot(this);
this.domainAxis.addChangeListener(this);
this.rangeAxis=rangeAxis;

1.1458131486891825
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/FastScatterPlot.java<197,210>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
if(start==null){
throw new IllegalArgumentException("Null \'rangeAxis\' argument.");
}
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.item=calculateXDataRange(index);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.clone=calculateYDataRange(index);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data=domainAxis;
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.setPlot(this);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.data.addChangeListener(this);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.start=rangeAxis;
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Paint paint=getPaint(i);
if(paint!=null){
stream.writeInt(i);
SerialUtilities.writePaint(paint,stream);
}else {
stream.writeInt(-1);
}
}

1.1450148694385969
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintList.java<142,154>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Shape shape=getShape(i);
if(shape!=null){
stream.writeInt(i);
SerialUtilities.writeShape(shape,stream);
}else {
stream.writeInt(-1);
}
}

1.1450148694385969
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/ShapeList.java<140,152>

-------- No Patch ---------


-------- Similar Code ---------
stream.defaultWriteObject();
int count=size();
stream.writeInt(count);
for(int i=0;i<count;i++){
Stroke stroke=getStroke(i);
if(stroke!=null){
stream.writeInt(i);
SerialUtilities.writeStroke(stroke,stream);
}else {
stream.writeInt(-1);
}
}

1.1450148694385969
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/StrokeList.java<137,149>

-------- No Patch ---------


-------- Similar Code ---------
if(k<(stemBottom+getBulbRadius())){
mercuryStem.setRoundRect(midX-j,k,i,(stemBottom+getBulbRadius())-k,l,l);
tempArea=new Area(mercuryStem);
mercury.add(tempArea);
}

1.1447403277604655
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/ThermometerPlot.java<1176,1181>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&circle.intersects(dataArea)){
addEntity(entities,circle,dataset,series,item,selected,circle.getCenterX(),circle.getCenterY());
}

1.1440790808562216
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<259,263>

-------- No Patch ---------


-------- Similar Code ---------
int valuesPerColor=(int)Math.ceil((double)uniqueValues.size()/this.paintLimit);
int count=0;
int paint=0;
for(Iterator i=uniqueValues.iterator();i.hasNext();){
this.paintIndex.put(i.next(),new Integer(paint));
if(++count%valuesPerColor==0){
paint++;
}
if(paint>this.paintLimit){
paint=this.paintLimit;
}
}

1.143698649311278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<244,257>

-------- No Patch ---------


-------- Similar Code ---------
if(stripNullAndNaNItems){
vlist=new ArrayList(values.size());
Iterator iterator=values.listIterator();
while(iterator.hasNext()){
Object obj=iterator.next();
if(obj instanceof Number){
Number n=(Number)obj;
double v=n.doubleValue();
if(!Double.isNaN(v)){
vlist.add(n);
}
}
}
}else {
vlist=values;
}

1.1424338811788948
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/BoxAndWhiskerCalculator.java<100,116>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(item.getValue()!=null){
double y=yN.doubleValue();
this.minY=minIgnoreNaN(this.minY,y);
this.maxY=maxIgnoreNaN(this.maxY,y);
}

1.1417323060876248
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1211,1216>

-------- No Patch ---------


-------- Similar Code ---------
if(object instanceof OHLCDataItem){
OHLCDataItem item=(OHLCDataItem)object;
return this.date.compareTo(item.date);
}else {
throw new ClassCastException("OHLCDataItem.compareTo().");
}

1.1416420538324366
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/OHLCDataItem.java<201,207>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getFirstMillisecond(this.workingCalendar));

1.1414376822502506
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<779,780>

-------- No Patch ---------


-------- Similar Code ---------
RegularTimePeriod tp=this.pointsInTime[translateGet(item)];
return new Long(tp.getLastMillisecond(this.workingCalendar));

1.1414376822502506
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/DynamicTimeSeriesCollection.java<792,793>

-------- No Patch ---------


-------- Similar Code ---------
if(item==dataset.getItemCount(series)-1){
if(s.seriesIndex==series){
g2.setStroke(lookupSeriesStroke(series));
g2.setPaint(lookupSeriesPaint(series));
g2.draw(s.seriesPath);
}
}

1.1405146093664222
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<798,805>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Map.Entry entry=(Map.Entry)iterator.next();
Paint p1=(Paint)entry.getValue();
Paint p2=(Paint)map2.get(entry.getKey());
if(!PaintUtilities.equal(p1,p2)){
return false;
}
}

1.1403050909829602
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1465,1472>

-------- No Patch ---------


-------- Similar Code ---------
if(visible){
drawShape1(g2,pass,series,item,selected,state.workingLine);
}

1.1396263864872798
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<886,888>

-------- No Patch ---------


-------- Similar Code ---------
if(row>=0){
DefaultKeyedValues rowData=(DefaultKeyedValues)this.rows.get(row);
int col=rowData.getIndex(columnKey);
return (col>=0?rowData.getValue(col):null);
}else {
throw new UnknownKeyException("Unrecognised rowKey: "+rowKey);
}

1.139468023997793
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DefaultKeyedValues2D.java<279,287>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
items=createItemArray((XYZDataset)dataset,series,item);
}else {
items=createItemArray(dataset,series,item);
}

1.139463015873638
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<182,187>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator toolTipGenerator=getToolTipGenerator();
if(toolTipGenerator!=null){
tip=toolTipGenerator.generateToolTip(dataset,key);
}
String url=null;
PieURLGenerator urlGenerator=getURLGenerator();
if(urlGenerator!=null){
url=urlGenerator.generateURL(dataset,key,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(path,dataset,getPieIndex(),section,key,tip,url);
entities.add(entity);
}

1.1390279934920153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/RingPlot.java<426,444>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriod period=(TimePeriod)this.values.getRowKey(item);
return period.getStart().getTime();

1.1374498964063462
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<407,408>

-------- No Patch ---------


-------- Similar Code ---------
TimePeriod period=(TimePeriod)this.values.getRowKey(item);
return period.getEnd().getTime();

1.1374498964063462
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeTableXYDataset.java<435,436>

-------- No Patch ---------


-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
b.setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
return new Size2D(s.width,s.height);

1.1372419414433241
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<283,287>


-------- Patch ---------
data.setBounds(new Rectangle2D.Double(0.0,0.0,s.width,s.height));
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.1365164171093713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<497,516>

-------- No Patch ---------


-------- Similar Code ---------
for(int f=0;f<6;f++){
if(f==5){
g2.setPaint(fillPaint);
}else {
g2.setPaint(fillPaintDark);
}
g2.fill(faces[f]);
if(drawOutlines){
g2.setPaint(outlinePaint);
g2.draw(faces[f]);
}
}
itemLabelList.add(new Object[]{new Integer(series),faces[5].getBounds2D(),Boolean.valueOf(v0<getBase())});
EntityCollection entities=state.getEntityCollection();

1.1365164171093713
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer3D.java<696,715>

-------- No Patch ---------


-------- Similar Code ---------
XYSeries series=sampleFunction2DToSeries(f,start,end,samples,seriesKey);
XYSeriesCollection collection=new XYSeriesCollection(series);
return collection;

1.1362655908140669
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<510,513>

-------- No Patch ---------


-------- Similar Code ---------
String result=null;
Object[] items=createItemArray(dataset,series,item);
result=MessageFormat.format(this.formatString,items);
return result;

1.1362253754585294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<247,250>

-------- No Patch ---------


-------- Similar Code ---------
FontMetrics fm=this.g2.getFontMetrics();
Rectangle2D bounds=TextUtilities.getTextBounds(text.substring(start,end),this.g2,fm);
float result=(float)bounds.getWidth();
return result;

1.1350462121444465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/G2TextMeasurer.java<75,79>

-------- No Patch ---------


-------- Similar Code ---------
if(position.getWidthType()==CategoryLabelWidthType.CATEGORY){
l=(float)calculateCategorySize(categories.size(),dataArea,edge);
}else {
if(RectangleEdge.isLeftOrRight(edge)){
l=(float)dataArea.getWidth();
}else {
l=(float)dataArea.getHeight();
}
}

1.1335525278530618
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1107,1118>

-------- No Patch ---------


-------- Similar Code ---------
if(uniqueValues.size()<=this.paintLimit){
int count=0;
for(Iterator i=uniqueValues.iterator();i.hasNext();){
this.paintIndex.put(i.next(),new Integer(count++));
}
}else {
swtich (this.paintIndexMethod){
case POSITION_INDEX :
makePositionIndex(uniqueValues);
break;

case VALUE_INDEX :
makeValueIndex(dataMax,dataMin,uniqueValues);
break;

default :
break;

}
}

1.1323803305238684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/WaferMapRenderer.java<215,234>

-------- No Patch ---------


-------- Similar Code ---------
double space=0.0;
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int groups=this.seriesToGroupMap.getGroupCount();
int categories=data.getColumnCount();
int columns=groups*categories;
double categoryMargin=0.0;
double itemMargin=0.0;
if(categories>1){
categoryMargin=xAxis.getCategoryMargin();
}

1.1304555426449323
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java<149,164>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,shape,dataset,series,item,selected,transX1,transY1);
}

1.129448773067136
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<521,524>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotArea[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateDomainAxisSpace(g2,this.subplotArea[i],null);
space.ensureAtLeast(subSpace);
}

1.1282183378336406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<297,318>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.VERTICAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.HORIZONTAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateDomainAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1282183378336406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<335,356>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
XYPlot plot=(XYPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateRangeAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1282183378336406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<389,410>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<n;i++){
CategoryPlot plot=(CategoryPlot)this.subplots.get(i);
if(orientation==PlotOrientation.HORIZONTAL){
double w=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
x=x+w;
}else if(orientation==PlotOrientation.VERTICAL){
double h=usableSize*plot.getWeight()/totalWeight;
this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
y=y+h;
}
AxisSpace subSpace=plot.calculateRangeAxisSpace(g2,this.subplotAreas[i],null);
space.ensureAtLeast(subSpace);
}

1.1282183378336406
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java<388,409>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,yyAverage,xx);
}

1.128214407923143
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<486,489>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&box.intersects(dataArea)){
addEntity(entities,box,dataset,series,item,selected,xx,yyAverage);
}

1.128214407923143
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<700,703>

-------- No Patch ---------


-------- Similar Code ---------
Date previous=previousStandardDate(date,unit);
Calendar calendar=Calendar.getInstance(this.timeZone,this.locale);
calendar.setTime(previous);
calendar.add(unit.getCalendarField(),unit.getMultiple());
return calendar.getTime();

1.127567528331265
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1093,1097>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useYInterval){
positive=dataset.getYValue(series,item)>=0.0;
}else error

1.1273663743807503
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<935,941>

-------- No Patch ---------


-------- Similar Code ---------
while(low<=high){
int mid=(low+high)/2;
Segment midSegment=(Segment)this.exceptionSegments.get(mid);
if(segment.contains(midSegment)||midSegment.contains(segment)){
return mid;
}
if(midSegment.before(segment)){
low=mid+1;
}else if(midSegment.after(segment)){
high=mid-1;
}else {
throw new IllegalStateException("Invalid condition.");
}
}

1.1264820144089362
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1147,1165>

-------- No Patch ---------


-------- Similar Code ---------
int rendererCount=this.renderers.size();
for(int i=rendererCount-1;i>=0;i--){
XYItemRenderer r=getRenderer(i);
if(i>=getDatasetCount()){
continue;
}
if(r!=null){
ValueAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,info);
}
}
for(int i=getDatasetCount()-1;i>=0;i--){
foundData=render(g2,dataArea,i,info,crosshairState)||foundData;
}

1.1264580526142438
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3396,3413>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getStartXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}

1.1257838209518225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1515,1522>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalXYDataset){
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
value=intervalXYData.getEndXValue(series,item);
}else {
value=dataset.getXValue(series,item);
}

1.1257838209518225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1572,1579>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getLowValue(series,item);
}else {
value=dataset.getYValue(series,item);
}

1.1257838209518225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1690,1696>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof OHLCDataset){
OHLCDataset highLowData=(OHLCDataset)dataset;
value=highLowData.getHighValue(series,item);
}else {
value=dataset.getYValue(series,item);
}

1.1257838209518225
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1807,1813>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,null,dataset,series,item,selected,transX1,transY1);
}

1.1247419536874719
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<278,281>

-------- No Patch ---------


-------- Similar Code ---------
if(properties||copy){
this.popup=createPopupMenu(properties,copy,save,print,zoom);
}

1.1245204729936387
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<763,765>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
String tip=null;
PieToolTipGenerator tipster=getToolTipGenerator();
if(tipster!=null){
tip=tipster.generateToolTip(dataset,currentKey);
}
String url=null;
if(getURLGenerator()!=null){
url=getURLGenerator().generateURL(dataset,currentKey,getPieIndex());
}
PieSectionEntity entity=new PieSectionEntity(upperArc,dataset,getPieIndex(),sectionIndex,currentKey,tip,url);
entities.add(entity);
}

1.123897001285719
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<556,572>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.123792677070056
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<909,912>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.123792677070056
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1058,1061>

-------- No Patch ---------


-------- Similar Code ---------
Number startX=null;
Number x=this.dataset.getX(series,item);
if(x!=null){
startX=new Double(x.doubleValue()-(getIntervalPositionFactor()*getIntervalWidth()));
}
return startX;

1.1217653660356628
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/IntervalXYDelegate.java<262,268>

-------- No Patch ---------


-------- Similar Code ---------
for(;i>=0;--i){
ValueDataset data=this.datasets[i];
if(data!=null&&data.getValue()!=null){
value=(data.getValue().doubleValue())%this.revolutionDistance;
value=value/this.revolutionDistance*360;
current=i%x;
this.seriesNeedle[current].draw(g2,needleArea,value);
}
}

1.121661413402786
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CompassPlot.java<682,692>

-------- No Patch ---------


-------- Similar Code ---------
Number yN=item.getValue();
if(yN!=null){
double y=yN.doubleValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
findBoundsByIteration();
}
}
}

1.121572732831688
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeries.java<1228,1236>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<highLowDataset.getItemCount(series);item++){
double volume=highLowDataset.getVolumeValue(series,item);
if(volume>this.maxVolume){
this.maxVolume=volume;
}
}

1.121257360307133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<618,625>

-------- No Patch ---------


-------- Similar Code ---------
Composite originalComposite=g2.getComposite();
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));
if(this.dialBackgroundPaint!=null){
fillArc(g2,originalArea,dataMin,dataMax,this.dialBackgroundPaint,true);
}
drawTicks(g2,meterArea,dataMin,dataMax);
drawArcForInterval(g2,meterArea,new MeterInterval("",this.range,this.dialOutlinePaint,new BasicStroke(1.0),null));
Iterator iterator=this.intervals.iterator();
while(iterator.hasNext()){
MeterInterval interval=(MeterInterval)iterator.next();
drawArcForInterval(g2,meterArea,interval);
}
Number n=data.getValue();

1.1197049935991912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/MeterPlot.java<862,880>

-------- No Patch ---------


-------- Similar Code ---------
if(this.renderAsPercentages){
total=DatasetUtilities.calculateStackTotal((TableXYDataset)dataset,item);
value=value/total;
}

1.1189661005135911
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<270,274>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1186092605718145
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<921,925>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null&&ShapeUtilities.isPointInRect(xx,yy,dataArea)){
addEntity(entities,entityArea,dataset,series,item,selected,xx,yy);
}

1.1186092605718145
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1070,1074>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1184526105875636
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<240,243>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
addEntity(entities,line.getBounds(),dataset,series,item,selected,0.0,0.0);
}

1.1184526105875636
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<293,296>

-------- No Patch ---------


-------- Similar Code ---------
if(start>end){
throw new IllegalArgumentException("Requires start <= end.");
}
this.start=start;
this.end=end;

1.118446862483831
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/SimpleTimePeriod.java<77,81>

-------- No Patch ---------


-------- Similar Code ---------
if(Modifier.isPublic(f.getModifiers())&&Modifier.isFinal(f.getModifiers())){
String name=f.getName();
Object oColor=f.get(null);
if(oColor instanceof Color){
if(c.equals(oColor)){
return name;
}
}
}

1.1176627133722568
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/PaintUtilities.java<116,126>

-------- No Patch ---------


-------- Similar Code ---------
TextBlock label=super.createLabel(category,width,edge,g2);
String s=(String)this.sublabels.get(category);
if(s!=null){
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
TextLine line=new TextLine(s,this.sublabelFont,this.sublabelPaint);
label.addLine(line);
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
TextLine line=label.getLastLine();
if(line!=null){
line.addFragment(new TextFragment("  "+s,this.sublabelFont,this.sublabelPaint));
}
}
}
return label;

1.1167912050952553
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ExtendedCategoryAxis.java<173,190>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<subCategoryCount;i++){
if(RectangleEdge.isTopOrBottom(edge)){
xx=(float)(x0+(i+0.5)*width);
yy=(float)area.getCenterY();
}else {
xx=(float)area.getCenterX();
yy=(float)(y0+(i+0.5)*height);
}
String label=this.subCategories.get(i).toString();
TextUtilities.drawRotatedString(label,g2,xx,yy,TextAnchor.CENTER,0.0,TextAnchor.CENTER);
}

1.1159713171082903
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SubCategoryAxis.java<366,378>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.115922419009073
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<342,352>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemPass(pass)){
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
drawShape2(g2,dataArea,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,null,entities);
}

1.115922419009073
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<784,794>

-------- No Patch ---------


-------- Similar Code ---------
List blocks=container.getBlocks();
Block b=(Block)blocks.get(0);
Size2D s=b.arrange(g2,RectangleConstraint.NONE);
double width=constraint.getWidth();
Rectangle2D bounds=new Rectangle2D.Double((width-s.width)/2.0,0.0,s.width,s.height);
b.setBounds(bounds);
return new Size2D((width-s.width)/2.0,s.height);

1.1157487688663017
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/CenterArrangement.java<147,154>


-------- Patch ---------
data.setBounds(clone);
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Iterator iterator=this.bins.iterator();
while(iterator.hasNext()){
SimpleHistogramBin existingBin=(SimpleHistogramBin)iterator.next();
if(bin.overlapsWith(existingBin)){
throw new RuntimeException("Overlapping bin");
}
}
this.bins.add(bin);
Collections.sort(this.bins);

1.1151591394444103
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/SimpleHistogramDataset.java<184,193>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.line.setLine(transX0,transY0,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.line.setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.line);
}

1.1142605162175454
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<605,613>

-------- No Patch ---------


-------- Similar Code ---------
if(null!=l_entities){
if(null==l_entityArea){
l_entityArea=new Rectangle2D.Double((l_x1-2),(l_y1-2),4,4);
}
String l_tip=null;
XYToolTipGenerator l_tipGenerator=getToolTipGenerator(x_series,x_item,selected);
if(null!=l_tipGenerator){
l_tip=l_tipGenerator.generateToolTip(x_dataset,x_series,x_item);
}
String l_url=null;
XYURLGenerator l_urlGenerator=getURLGenerator(x_series,x_item,selected);
if(null!=l_urlGenerator){
l_url=l_urlGenerator.generateURL(x_dataset,x_series,x_item);
}
XYItemEntity l_entity=new XYItemEntity(l_entityArea,x_dataset,x_series,x_item,l_tip,l_url);
l_entities.add(l_entity);
}

1.1139862154996234
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<893,915>

-------- No Patch ---------


-------- Similar Code ---------
if(entities!=null){
GeneralPath gp=new GeneralPath(left);
gp.append(right,false);
entityArea=gp;
addEntity(entities,entityArea,dataset,series,item,selected,transX1,transY1);
}

1.1135275997027851
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<443,449>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotShapes()){
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
g2.draw(shape);
}

1.1112664730846133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<591,602>

-------- No Patch ---------


-------- Similar Code ---------
arc=(Arc2D.Double)arcList.get(categoryIndex);
if(arc==null){
continue;
}
Comparable key=getSectionKey(categoryIndex);
paint=lookupSectionPaint(key,false);
outlinePaint=lookupSectionOutlinePaint(key,false);
outlineStroke=lookupSectionOutlineStroke(key,false);
g2.setPaint(paint);
g2.fill(arc);
g2.setPaint(outlinePaint);
g2.setStroke(outlineStroke);

1.1102390047386481
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<460,471>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()-this.barWidth/2.0);
}
return result;

1.1099553829826718
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<219,224>

-------- No Patch ---------


-------- Similar Code ---------
Number result=null;
Number xnum=this.underlying.getX(series,item);
if(xnum!=null){
result=new Double(xnum.doubleValue()+this.barWidth/2.0);
}
return result;

1.1099553829826718
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYBarDataset.java<251,256>

-------- No Patch ---------


-------- Similar Code ---------
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}

1.1098528779449452
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<1036,1046>

-------- No Patch ---------


-------- Similar Code ---------
int datasetCount=this.datasets.size();
for(int i=0;i<datasetCount;i++){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,state);
}
}
for(int i=0;i<datasetCount;i++){
foundData=render(g2,dataArea,i,state,crosshairState)||foundData;
}
for(int i=0;i<datasetCount;i++){
CategoryItemRenderer r=getRenderer(i);
if(r!=null){
CategoryAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.FOREGROUND,state);
}
}

1.1095158802302951
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<3714,3739>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemLineVisible(series,item)){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}

1.1085397329353912
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/DeviationRenderer.java<334,338>

-------- No Patch ---------


-------- Similar Code ---------
while(iterator.hasNext()){
Comparable category=(Comparable)iterator.next();
g2.setFont(getTickLabelFont(category));
TextBlock label=createLabel(category,l*r,edge,g2);
if(edge==RectangleEdge.TOP||edge==RectangleEdge.BOTTOM){
max=Math.max(max,calculateTextBlockHeight(label,position,g2));
}else if(edge==RectangleEdge.LEFT||edge==RectangleEdge.RIGHT){
max=Math.max(max,calculateTextBlockWidth(label,position,g2));
}
Tick tick=new CategoryTick(category,label,position.getLabelAnchor(),position.getRotationAnchor(),position.getAngle());
ticks.add(tick);
categoryIndex=categoryIndex+1;
}

1.1078472829205948
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1121,1139>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,value<0.0);
}

1.1078326872433444
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<388,393>

-------- No Patch ---------


-------- Similar Code ---------
if(getUseYInterval()){
y0=intervalDataset.getStartYValue(series,item);
y1=intervalDataset.getEndYValue(series,item);
}else {
y0=getBase();
y1=intervalDataset.getYValue(series,item);
}

1.1070897152776555
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<229,236>

-------- No Patch ---------


-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' array.");
}
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
double avg=calculateMean(data);
double sum=0.0;
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}
return Math.sqrt(sum/(data.length-1));

1.1069799601164536
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<310,323>


-------- Patch ---------
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(data==null){
throw new IllegalArgumentException("Null \'data\' array.");
}
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
double avg=calculateMean(data);
double sum=0.0;
for(int counter=0;counter<data.length;counter++){
double diff=data[counter].doubleValue()-avg;
sum=sum+diff*diff;
}
return Math.sqrt(sum/(data.length-1));

1.1069799601164536
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/Statistics.java<310,323>


-------- Repeated Patch ---------
if(data.length==0){
throw new IllegalArgumentException("Zero length \'data\' array.");
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(item==s.getLastItemIndex()){
PathIterator pi=s.seriesPath.getPathIterator(null);
int count=0;
while(!pi.isDone()){
count++;
pi.next();
}
g2.setStroke(getItemStroke(series,item,selected));
g2.setPaint(getItemPaint(series,item,selected));
g2.draw(s.seriesPath);
g2.draw(s.intervalPath);
}

1.1053823961943792
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java<285,297>

-------- No Patch ---------


-------- Similar Code ---------
int rendererCount=this.renderers.size();
for(int i=0;i<rendererCount;i++){
XYItemRenderer r=getRenderer(i);
if(r!=null){
ValueAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.BACKGROUND,info);
}
}
for(int i=0;i<getDatasetCount();i++){
foundData=render(g2,dataArea,i,info,crosshairState)||foundData;
}
for(int i=0;i<rendererCount;i++){
XYItemRenderer r=getRenderer(i);
if(r!=null){
ValueAxis domainAxis=getDomainAxisForDataset(i);
ValueAxis rangeAxis=getRangeAxisForDataset(i);
r.drawAnnotations(g2,dataArea,domainAxis,rangeAxis,Layer.FOREGROUND,info);
}
}

1.1052983743420581
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3364,3390>

-------- No Patch ---------


-------- Similar Code ---------
this.displayStart=mapValueToFixedRange(start);
this.displayEnd=mapValueToFixedRange(end);
if(this.displayStart<this.displayEnd){
setRange(this.displayStart,this.displayEnd);
}else {
setRange(this.displayStart,this.fixedRange.getUpperBound()+(this.displayEnd-this.fixedRange.getLowerBound()));
}
notifyListeners(new AxisChangeEvent(this));

1.1045812307624496
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ModuloAxis.java<113,122>

-------- No Patch ---------


-------- Similar Code ---------
long start=Math.max(from,this.segmentStart);
long end=Math.min(to,this.segmentEnd);
if(start<=end){
return new SegmentRange(start,end);
}else {
return null;
}

1.1043790141299619
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SegmentedTimeline.java<1672,1683>

-------- No Patch ---------


-------- Similar Code ---------
if(count>0){
RegularTimePeriod start=series.getTimePeriod(0);
RegularTimePeriod end=series.getTimePeriod(count-1);
Range temp;
if(!includeInterval){
temp=new Range(getX(start),getX(end));
}else {
temp=new Range(start.getFirstMillisecond(this.workingCalendar),end.getLastMillisecond(this.workingCalendar));
}
result=Range.combine(result,temp);
}

1.10415872010088
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimeSeriesCollection.java<693,706>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof XYZDataset){
double z=((XYZDataset)dataset).getZValue(series,item);
p=this.paintScale.getPaint(z);
}else {
if(this.useFillPaint){
p=getItemFillPaint(series,item,selected);
}else {
p=getItemPaint(series,item,selected);
}
}

1.1028315351257332
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<500,511>

-------- No Patch ---------


-------- Similar Code ---------
if(getTreatLegendShapeAsLine()){
item.setLineVisible(true);
item.setLine(shape);
item.setLinePaint(paint);
item.setShapeVisible(false);
}else {
Paint outlinePaint=lookupSeriesOutlinePaint(series);
Stroke outlineStroke=lookupSeriesOutlineStroke(series);
item.setOutlinePaint(outlinePaint);
item.setOutlineStroke(outlineStroke);
}

1.1024227862361375
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1020,1031>

-------- No Patch ---------


-------- Similar Code ---------
for(int s=0;s<seriesCount;s++){
double value=dataset.getYValue(s,item);
if(!Double.isNaN(value)){
total=total+value;
}
}

1.1018957832671123
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2103,2108>

-------- No Patch ---------


-------- Similar Code ---------
if(x.length==2){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}

1.1007219247864204
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<239,243>

-------- No Patch ---------


-------- Similar Code ---------
case WIDTHMETHOD_INTERVALDATA :
IntervalXYDataset intervalXYData=(IntervalXYDataset)dataset;
double startPos=domainAxis.valueToJava2D(intervalXYData.getStartXValue(series,item),dataArea,plot.getDomainAxisEdge());
double endPos=domainAxis.valueToJava2D(intervalXYData.getEndXValue(series,item),dataArea,plot.getDomainAxisEdge());
xxWidth=Math.abs(endPos-startPos);
break;


1.100561727139662
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<730,740>

-------- No Patch ---------


-------- Similar Code ---------
if(hotspot==null){
double r=getDefaultEntityRadius();
double w=r*2;
if(getPlot().getOrientation()==PlotOrientation.VERTICAL){
s=new Ellipse2D.Double(entityX-r,entityY-r,w,w);
}else {
s=new Ellipse2D.Double(entityY-r,entityX-r,w,w);
}
}
String tip=null;
CategoryToolTipGenerator generator=getToolTipGenerator(row,column,selected);
if(generator!=null){
tip=generator.generateToolTip(dataset,row,column);
}
String url=null;
CategoryURLGenerator urlster=getURLGenerator(row,column,selected);
if(urlster!=null){
url=urlster.generateURL(dataset,row,column);
}
CategoryItemEntity entity=new CategoryItemEntity(s,tip,url,dataset,dataset.getRowKey(row),dataset.getColumnKey(column));
entities.add(entity);

1.1004963834299097
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1856,1879>

-------- No Patch ---------


-------- Similar Code ---------
for(int pieItem=0;pieItem<getListCount();pieItem++){
if(getURLCount(pieItem)!=generator.getURLCount(pieItem)){
return false;
}
keySet=((HashMap)this.urls.get(pieItem)).keySet();
String key;
for(Iterator i=keySet.iterator();i.hasNext();){
key=(String)i.next();
if(!getURL(key,pieItem).equals(generator.getURL(key,pieItem))){
return false;
}
}
}

1.0996351984819628
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomPieURLGenerator.java<177,190>

-------- No Patch ---------


-------- Similar Code ---------
if(intervalDataset!=null){
xs=intervalDataset.getStartXValue(series,item);
xe=intervalDataset.getEndXValue(series,item);
ys=intervalDataset.getStartYValue(series,item);
ye=intervalDataset.getEndYValue(series,item);
}

1.098459372122708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<167,172>

-------- No Patch ---------


-------- Similar Code ---------
double x1;
if(this.useSeriesOffset){
x1=domainAxis.getCategorySeriesMiddle(column,dataset.getColumnCount(),visibleRow,visibleRowCount,this.itemMargin,dataArea,plot.getDomainAxisEdge());
}else {
x1=domainAxis.getCategoryMiddle(column,getColumnCount(),dataArea,plot.getDomainAxisEdge());
}
Number n=(Number)values.get(i);
double value=n.doubleValue();
double y1=rangeAxis.valueToJava2D(value,dataArea,plot.getRangeAxisEdge());
Shape shape=getItemShape(row,column,selected);
if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,y1,x1);
}else if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,x1,y1);
}

1.09712123293997
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/ScatterRenderer.java<411,432>

-------- No Patch ---------


-------- Similar Code ---------
{
CategoryAxis xAxis=plot.getDomainAxisForDataset(rendererIndex);
CategoryDataset data=plot.getDataset(rendererIndex);
if(data!=null){
PlotOrientation orientation=plot.getOrientation();
double space=0.0;
if(orientation==PlotOrientation.HORIZONTAL){
space=dataArea.getHeight();
}else if(orientation==PlotOrientation.VERTICAL){
space=dataArea.getWidth();
}
double maxWidth=space*getMaximumBarWidth();
int columns=data.getColumnCount();
double categoryMargin=0.0;
if(columns>1){
categoryMargin=xAxis.getCategoryMargin();
}
double used=space*(1-xAxis.getLowerMargin());
if(columns>0){
state.setBarWidth(Math.min(used/columns,maxWidth));
}else {
state.setBarWidth(Math.min(used,maxWidth));
}
}
}

1.0968149814261385
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/StackedBarRenderer.java<237,269>

-------- No Patch ---------


-------- Similar Code ---------
XYDataset dataset=(XYDataset)this.datasets.get(d);
if(dataset==null){
continue;
}
XYDatasetSelectionState state=findSelectionStateForDataset(dataset,source);
if(state==null){
continue;
}
Graphics2D g2=source.createGraphics2D();
XYItemRenderer renderer=getRendererForDataset(dataset);
XYItemRendererState rs=renderer.initialise(source.createGraphics2D(),dataArea,this,dataset,null);
int seriesCount=dataset.getSeriesCount();
for(int s=0;s<seriesCount;s++){
int itemCount=dataset.getItemCount(s);
for(int i=0;i<itemCount;i++){
if(renderer.hitTest(xx,yy,g2,dataArea,this,getDomainAxisForDataset(d),getRangeAxisForDataset(d),dataset,s,i,rs,false)){
state.setSelected(s,i,!state.isSelected(s,i));
}
}
}

1.0961913075227918
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<5871,5897>


-------- Patch ---------
if(copy==null){
continue;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int item=0;item<getToolTipCount(series);item++){
String t1=getToolTipText(series,item);
String t2=generator.getToolTipText(series,item);
if(t1!=null){
result=result&&t1.equals(t2);
}else {
result=result&&(t2==null);
}
}

1.0959646022536704
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/CustomXYToolTipGenerator.java<184,193>

-------- No Patch ---------


-------- Similar Code ---------
years=calendar.get(Calendar.YEAR);
calendar.clear(Calendar.MILLISECOND);
calendar.set(years,value,1,0,0,0);
Month month=new Month(calendar.getTime(),this.timeZone,this.locale);
Date standardDate=calculateDateForPosition(month,this.tickMarkPosition);
long millis=standardDate.getTime();
if(millis>=date.getTime()){
month=(Month)month.previous();
month.peg(Calendar.getInstance(this.timeZone));
standardDate=calculateDateForPosition(month,this.tickMarkPosition);
}
return standardDate;

1.095845336796345
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/DateAxis.java<1008,1024>

-------- No Patch ---------


-------- Similar Code ---------
if(time==null){
throw new IllegalArgumentException("Null \'time\' argument.");
}
if(zone==null){
throw new IllegalArgumentException("Null \'zone\' argument.");
}
Calendar calendar=Calendar.getInstance(zone);
calendar.setTime(time);
this.hour=(byte)calendar.get(Calendar.HOUR_OF_DAY);
this.day=new Day(time,zone);
peg(calendar);

1.0957848065483378
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/Hour.java<154,164>

-------- No Patch ---------


-------- Similar Code ---------
if(label==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,selected);
g2.setFont(labelFont);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setPaint(paint);
ItemLabelPosition position=null;
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}

1.0937088365555279
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<1023,1039>

-------- No Patch ---------


-------- Similar Code ---------
int count=this.rangeAxes.size();
for(int axisIndex=0;axisIndex<count;axisIndex++){
ValueAxis yAxis=getRangeAxis(axisIndex);
if(yAxis!=null){
yAxis.configure();
}
}
if(getParent()!=null){
getParent().datasetChanged(event);
}else {
PlotChangeEvent e=new PlotChangeEvent(this);
e.setType(ChartChangeEventType.DATASET_UPDATED);
notifyListeners(e);
}

1.0923457836371708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CategoryPlot.java<2341,2355>

-------- No Patch ---------


-------- Similar Code ---------
ticks.add(new NumberTick(new Double(t0),"",TextAnchor.CENTER,TextAnchor.CENTER,0.0));
x0=valueToJava2D(t0,dataArea,edge);
if(edge==RectangleEdge.TOP){
inside=new Line2D.Double(x0,y0,x0,y0+insideLength);
outside=new Line2D.Double(x0,y0,x0,y0-outsideLength);
}else if(edge==RectangleEdge.BOTTOM){
inside=new Line2D.Double(x0,y0,x0,y0-insideLength);
outside=new Line2D.Double(x0,y0,x0,y0+outsideLength);
}
if(t0>=firstOnAxis){
g2.setPaint(getTickMarkPaint());
g2.setStroke(getTickMarkStroke());
g2.draw(inside);
g2.draw(outside);
}

1.0914153020455883
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/PeriodAxis.java<731,747>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yyHigh,false);
drawAdditionalItemLabel(g2,orientation,dataset,series,item,xx,yyLow);
}

1.0911525574471532
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<232,237>

-------- No Patch ---------


-------- Similar Code ---------
String urlText=null;
if(getLegendItemURLGenerator()!=null){
urlText=getLegendItemURLGenerator().generateLabel(dataset,series);
}
Shape shape=lookupLegendShape(series);
Paint paint=lookupSeriesPaint(series);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getRowKey(series));

1.090321993740022
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/CategoryStepRenderer.java<190,205>

-------- No Patch ---------


-------- Similar Code ---------
if(this.useYInterval){
value0=ixyd.getStartYValue(series,item);
value1=ixyd.getEndYValue(series,item);
}else {
value0=this.base;
value1=ixyd.getYValue(series,item);
}

1.0901652202036638
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<817,824>

-------- No Patch ---------


-------- Similar Code ---------
LegendItem item=new LegendItem(label,paint);
item.setToolTipText(toolTipText);
item.setURLText(urlText);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getSeriesKey(series));
item.setSeriesIndex(series);
item.setDataset(dataset);
item.setDatasetIndex(datasetIndex);

1.0895606404358151
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1007,1018>

-------- No Patch ---------


-------- Similar Code ---------
if(getBaseShapesVisible()){
Shape shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}else if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}
if(shape.intersects(dataArea)){
if(getItemShapeFilled(series,item)){
g2.fill(shape);
}else {
g2.draw(shape);
}
}
entityArea=shape;
}

1.0878023710172515
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<864,885>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getStartValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
minimum=Math.min(minimum,value.doubleValue());
}
}

1.0870982763186336
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1626,1639>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number value;
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
value=icd.getEndValue(series,item);
}else {
value=dataset.getValue(series,item);
}
if(value!=null){
maximum=Math.max(maximum,value.doubleValue());
}
}

1.0870982763186336
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1744,1757>

-------- No Patch ---------


-------- Similar Code ---------
double xx=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
Shape entityArea=null;
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
PlotOrientation orientation=plot.getOrientation();
RectangleEdge location=plot.getRangeAxisEdge();
Paint itemPaint=getItemPaint(series,item,selected);
Stroke itemStroke=getItemStroke(series,item,selected);
g2.setPaint(itemPaint);
g2.setStroke(itemStroke);

1.086706722562419
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<325,341>

-------- No Patch ---------


-------- Similar Code ---------
JPanel panel=new JPanel(new BorderLayout());
JTable table=new JTable(model);
for(int columnIndex=0;columnIndex<model.getColumnCount();columnIndex++){
TableColumn column=table.getColumnModel().getColumn(columnIndex);
Class c=model.getColumnClass(columnIndex);
if(c.equals(Number.class)){
column.setCellRenderer(new NumberCellRenderer());
}
}
panel.add(new JScrollPane(table));
return panel;

1.0866133452553939
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/RefineryUtilities.java<243,254>

-------- No Patch ---------


-------- Similar Code ---------
Shape hotspot=null;
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x)||Double.isNaN(y)){
return ;
}
double transX=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double transY=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
PlotOrientation orientation=plot.getOrientation();

1.086315744293675
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<411,429>


-------- Patch ---------
if(Double.isNaN(index)||Double.isNaN(clone)){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
Rectangle2D bounds=createHotSpotBounds(g2,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,state,null);
if(bounds==null){
return false;
}
return bounds.contains(xx,yy);

1.085343409441622
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1087,1095>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
areaState.setSeriesArea(new Polygon());
areaState.setLastSeriesPoints(areaState.getCurrentSeriesPoints());
areaState.setCurrentSeriesPoints(new Stack());
double transY2=rangeAxis.valueToJava2D(ph1,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getSeriesArea().addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getSeriesArea().addPoint((int)transY2,(int)transX1);
}
}

1.0849459252586096
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<429,449>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double value=dataset.getYValue(series,item);
if(!Double.isNaN(value)){
minimum=Math.min(minimum,value);
maximum=Math.max(maximum,value);
}
}

1.084692331676556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1262,1268>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
if(!Double.isNaN(x)){
minimum=Math.min(minimum,x);
maximum=Math.max(maximum,x);
}
}

1.084692331676556
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1335,1341>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.084465604117057
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/ValueHandler.java<140,142>

-------- No Patch ---------


-------- Similar Code ---------
if(this.currentText!=null){
this.currentText.append(String.copyValueOf(ch,start,length));
}

1.084465604117057
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/KeyHandler.java<135,137>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=bx.getXValue(series,item);
if(xRange.contains(x)){
Number lvalue=bx.getMinRegularValue(series,item);
Number uvalue=bx.getMaxRegularValue(series,item);
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}
}

1.0843225766422266
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1419,1431>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
TableXYDataset tdataset=(TableXYDataset)dataset;
PlotOrientation orientation=plot.getOrientation();
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double[] stack1=getStackValues(tdataset,series,item);
double x0=dataset.getXValue(series,Math.max(item-1,0));

1.083188589883998
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<218,236>


-------- Patch ---------
if(Double.isNaN(index)){
y1=0.0;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number y=dataset.getValue(item);
if(y!=null){
double yy=y.doubleValue();
if(yy>0.0){
return false;
}
}
}

1.0830656119053337
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<575,583>

-------- No Patch ---------


-------- Similar Code ---------
if(result==null){
result=new Rectangle();
}
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double xx=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double yy=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
result.setRect(xx-2,yy-2,4,4);
return result;

1.0823875083332075
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1039,1049>

-------- No Patch ---------


-------- Similar Code ---------
shape=getItemShape(series,item,selected);
if(plot.getOrientation()==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(!nullPoint){
if(getShapePaint()!=null){
g2.setPaint(getShapePaint());
}else {
g2.setPaint(seriesPaint);
}
if(getShapeStroke()!=null){
g2.setStroke(getShapeStroke());
}else {
g2.setStroke(seriesStroke);
}
g2.draw(shape);
}

1.0820541533938204
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<542,565>

-------- No Patch ---------


-------- Similar Code ---------
IntervalXYDataset intervalDataset=null;
if(dataset instanceof IntervalXYDataset){
intervalDataset=(IntervalXYDataset)dataset;
}
Object[] result=new Object[7];
result[0]=dataset.getSeriesKey(series).toString();
double x=dataset.getXValue(series,item);
double xs=x;
double xe=x;
double y=dataset.getYValue(series,item);
double ys=y;
double ye=y;

1.081798411329886
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<154,166>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
if(xRange.contains(x)){
if(!Double.isNaN(y)){
minimum=Math.min(minimum,y);
maximum=Math.max(maximum,y);
}
}
}

1.0805899701012351
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1464,1473>

-------- No Patch ---------


-------- Similar Code ---------
if(fixed!=null){
if(orientation==PlotOrientation.VERTICAL){
space.setLeft(fixed.getLeft());
space.setRight(fixed.getRight());
}else if(orientation==PlotOrientation.HORIZONTAL){
space.setTop(fixed.getTop());
space.setBottom(fixed.getBottom());
}
}else {
ValueAxis valueAxis=getRangeAxis();
RectangleEdge valueEdge=Plot.resolveRangeAxisLocation(getRangeAxisLocation(),orientation);
if(valueAxis!=null){
space=valueAxis.reserveSpace(g2,this,plotArea,valueEdge,space);
}
}
Rectangle2D adjustedPlotArea=space.shrink(plotArea,null);
int n=this.subplots.size();
int totalWeight=0;

1.0805745266427034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeCategoryPlot.java<256,279>

-------- No Patch ---------


-------- Similar Code ---------
if(fixed!=null){
if(orientation==PlotOrientation.VERTICAL){
space.setLeft(fixed.getLeft());
space.setRight(fixed.getRight());
}else if(orientation==PlotOrientation.HORIZONTAL){
space.setTop(fixed.getTop());
space.setBottom(fixed.getBottom());
}
}else {
ValueAxis valueAxis=getRangeAxis();
RectangleEdge valueEdge=Plot.resolveRangeAxisLocation(getRangeAxisLocation(),orientation);
if(valueAxis!=null){
space=valueAxis.reserveSpace(g2,this,plotArea,valueEdge,space);
}
}
Rectangle2D adjustedPlotArea=space.shrink(plotArea,null);
int n=this.subplots.size();
int totalWeight=0;

1.0805745266427034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedRangeXYPlot.java<292,316>

-------- No Patch ---------


-------- Similar Code ---------
if(fixed!=null){
if(orientation==PlotOrientation.HORIZONTAL){
space.setLeft(fixed.getLeft());
space.setRight(fixed.getRight());
}else if(orientation==PlotOrientation.VERTICAL){
space.setTop(fixed.getTop());
space.setBottom(fixed.getBottom());
}
}else {
ValueAxis xAxis=getDomainAxis();
RectangleEdge xEdge=Plot.resolveDomainAxisLocation(getDomainAxisLocation(),orientation);
if(xAxis!=null){
space=xAxis.reserveSpace(g2,this,plotArea,xEdge,space);
}
}
Rectangle2D adjustedPlotArea=space.shrink(plotArea,null);
int n=this.subplots.size();
int totalWeight=0;

1.0805745266427034
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/CombinedDomainXYPlot.java<350,373>

-------- No Patch ---------


-------- Similar Code ---------
boolean itemVisible=getItemVisible(series,item);
Shape entityArea=null;
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);

1.0803977526111588
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<740,757>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
PlotOrientation orientation=plot.getOrientation();
Paint seriesPaint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(seriesPaint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();

1.0800413592751854
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<200,216>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=this.labels.size()-1;i>0;i--){
PieLabelRecord record0=getPieLabelRecord(i);
PieLabelRecord record1=getPieLabelRecord(i-1);
if(record1.getUpperY()>record0.getLowerY()){
record1.setAllocatedY(Math.max(minY+record1.getLabelHeight()/2.0,record0.getLowerY()-this.minGap));
}
}

1.0797958012820585
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<165,173>

-------- No Patch ---------


-------- Similar Code ---------
double start=im.getStartValue();
double end=im.getEndValue();
Range range=domainAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=domainAxis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double end2d=domainAxis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.079241250913604
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1357,1372>

-------- No Patch ---------


-------- Similar Code ---------
double start=im.getStartValue();
double end=im.getEndValue();
Range range=rangeAxis.getRange();
if(!(range.intersects(start,end))){
return ;
}
double start2d=rangeAxis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=rangeAxis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.079241250913604
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1556,1571>

-------- No Patch ---------


-------- Similar Code ---------
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(stroke);
g2.fill(hotspot);
if(isOutline()){
g2.setStroke(lookupSeriesOutlineStroke(series));
g2.setPaint(lookupSeriesOutlinePaint(series));
g2.draw(hotspot);
}
int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);

1.079193904433745
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<351,367>

-------- No Patch ---------


-------- Similar Code ---------
int volume=(int)highLowData.getVolumeValue(series,item);
double volumeHeight=volume/this.maxVolume;
double min,max;
if(horiz){
min=dataArea.getMinX();
max=dataArea.getMaxX();
}else {
min=dataArea.getMinY();
max=dataArea.getMaxY();
}
double zzVolume=volumeHeight*(max-min);
g2.setPaint(getVolumePaint());

1.0785623874682746
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<760,775>


-------- Patch ---------
item.setPaint(getVolumePaint());
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
double end=im.getEndValue();
Range range=axis.getRange();
if(!(range.intersects(start,end))){
return ;
}
 final Composite savedComposite=g2.getComposite();
g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,marker.getAlpha()));
double start2d=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double end2d=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
double low=Math.min(start2d,end2d);
double high=Math.max(start2d,end2d);
PlotOrientation orientation=plot.getOrientation();
Rectangle2D rect=null;

1.0775395207117109
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1234,1252>

-------- No Patch ---------


-------- Similar Code ---------
if(getDrawOpenTicks()){
double yOpen=hld.getOpenValue(series,item);
if(!Double.isNaN(yOpen)){
double yyOpen=rangeAxis.valueToJava2D(yOpen,dataArea,location);
if(this.openTickPaint!=null){
g2.setPaint(this.openTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyOpen,xx+delta,yyOpen,xx));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx-delta,yyOpen,xx,yyOpen));
}
}
}

1.077373473710657
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<370,390>

-------- No Patch ---------


-------- Similar Code ---------
if(getDrawCloseTicks()){
double yClose=hld.getCloseValue(series,item);
if(!Double.isNaN(yClose)){
double yyClose=rangeAxis.valueToJava2D(yClose,dataArea,location);
if(this.closeTickPaint!=null){
g2.setPaint(this.closeTickPaint);
}else {
g2.setPaint(itemPaint);
}
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyClose,xx,yyClose,xx-delta));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyClose,xx+delta,yyClose));
}
}
}

1.077373473710657
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<392,412>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
double x=intervalDataset.getXValue(series,item);
double yLow=intervalDataset.getStartYValue(series,item);
double yHigh=intervalDataset.getEndYValue(series,item);
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,xAxisLocation);
double yyLow=rangeAxis.valueToJava2D(yLow,dataArea,yAxisLocation);

1.0768590105381106
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<185,200>

-------- No Patch ---------


-------- Similar Code ---------
double x1=axis.valueToJava2D(start,dataArea,plot.getDomainAxisEdge());
double x2=axis.valueToJava2D(end,dataArea,plot.getDomainAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(Math.min(x1,x2),dataArea.getMinY(),Math.abs(x2-x1),dataArea.getWidth());
}else {
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(x1,x2),dataArea.getWidth(),Math.abs(x2-x1));
}
Paint paint=plot.getDomainTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.076509375198883
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1112,1130>

-------- No Patch ---------


-------- Similar Code ---------
double y1=axis.valueToJava2D(start,dataArea,plot.getRangeAxisEdge());
double y2=axis.valueToJava2D(end,dataArea,plot.getRangeAxisEdge());
Rectangle2D band;
if(plot.getOrientation()==PlotOrientation.VERTICAL){
band=new Rectangle2D.Double(dataArea.getMinX(),Math.min(y1,y2),dataArea.getWidth(),Math.abs(y2-y1));
}else {
band=new Rectangle2D.Double(Math.min(y1,y2),dataArea.getMinY(),Math.abs(y2-y1),dataArea.getHeight());
}
Paint paint=plot.getRangeTickBandPaint();
if(paint!=null){
g2.setPaint(paint);
g2.fill(band);
}

1.076509375198883
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1148,1165>

-------- No Patch ---------


-------- Similar Code ---------
if(this.legendItemURLGenerator!=null){
urlText=this.legendItemURLGenerator.generateLabel(dataset,series);
}
Shape shape=lookupLegendShape(series);
Paint paint=lookupSeriesPaint(series);
Paint outlinePaint=lookupSeriesOutlinePaint(series);
Stroke outlineStroke=lookupSeriesOutlineStroke(series);
LegendItem item=new LegendItem(label,description,toolTipText,urlText,shape,paint,outlineStroke,outlinePaint);
item.setLabelFont(lookupLegendTextFont(series));
Paint labelPaint=lookupLegendTextPaint(series);
if(labelPaint!=null){
item.setLabelPaint(labelPaint);
}
item.setSeriesKey(dataset.getRowKey(series));
item.setSeriesIndex(series);

1.075934061805153
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1438,1455>

-------- No Patch ---------


-------- Similar Code ---------
if(getPlotImages()){
Image image=getImage(plot,series,item,transX1,transY1);
if(image!=null){
Point hotspot=getImageHotspot(plot,series,item,transX1,transY1,image);
g2.drawImage(image,(int)(transX1-hotspot.getX()),(int)(transY1-hotspot.getY()),null);
entityArea=new Rectangle2D.Double(transX1-hotspot.getX(),transY1-hotspot.getY(),image.getWidth(null),image.getHeight(null));
}
}

1.0758975699272741
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java<887,899>

-------- No Patch ---------


-------- Similar Code ---------
if(this.additionalItemLabelGenerator==null){
return ;
}
Font labelFont=getItemLabelFont(series,item,false);
Paint paint=getItemLabelPaint(series,item,false);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=this.additionalItemLabelGenerator.generateLabel(dataset,series,item);
ItemLabelPosition position=getNegativeItemLabelPosition(series,item,false);
Point2D anchorPoint=calculateLabelAnchorPoint(position.getItemLabelAnchor(),x,y,orientation);
TextUtilities.drawRotatedString(label,g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getTextAnchor(),position.getAngle(),position.getRotationAnchor());

1.0743685450815195
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/YIntervalRenderer.java<264,282>

-------- No Patch ---------


-------- Similar Code ---------
double startX=ixyd.getStartXValue(series,item);
if(Double.isNaN(startX)){
return null;
}
double endX=ixyd.getEndXValue(series,item);
if(Double.isNaN(endX)){
return null;
}
if(startX<=endX){
if(!domainAxis.getRange().intersects(startX,endX)){
return null;
}
}else {
if(!domainAxis.getRange().intersects(endX,startX)){
return null;
}
}

1.0742901260074227
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<846,863>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(y)&&dataset.getY(series,item)==null){
result[4]=getNullYString();
}else {
if(ydf!=null){
result[4]=ydf.format(new Date((long)y));
}else {
result[4]=ynf.format(y);
}
}

1.0742307802100464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<189,199>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(ys)&&intervalDataset.getStartY(series,item)==null){
result[5]=getNullYString();
}else {
if(ydf!=null){
result[5]=ydf.format(new Date((long)ys));
}else {
result[5]=ynf.format(ys);
}
}

1.0742307802100464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<200,211>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(ye)&&intervalDataset.getEndY(series,item)==null){
result[6]=getNullYString();
}else {
if(ydf!=null){
result[6]=ydf.format(new Date((long)ye));
}else {
result[6]=ynf.format(ye);
}
}

1.0742307802100464
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java<212,223>

-------- No Patch ---------


-------- Similar Code ---------
pointer.lineTo(midX+lenX,midY-lenX);
pointer.lineTo(midX,minY);
pointer.closePath();
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,midY-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.0739357713917579
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/MiddlePinNeedle.java<92,108>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<this.labels.size()-1;i++){
PieLabelRecord record0=getPieLabelRecord(i);
PieLabelRecord record1=getPieLabelRecord(i+1);
if(record1.getLowerY()<record0.getUpperY()){
record1.setAllocatedY(Math.min(minY+height-record1.getLabelHeight()/2.0,record0.getUpperY()+this.minGap));
}
}

1.0732646895630134
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<145,154>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);
Number yQ1Median=boxAndWhiskerData.getQ1Value(series,item);
Number yQ3Median=boxAndWhiskerData.getQ3Value(series,item);

1.0724987122966694
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<516,530>

-------- No Patch ---------


-------- Similar Code ---------
if(item==0){
areaState.area=new Polygon();
double zero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)zero);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)zero,(int)transX1);
}
}
if(plot.getOrientation()==PlotOrientation.VERTICAL){
areaState.area.addPoint((int)transX1,(int)transY1);
}else if(plot.getOrientation()==PlotOrientation.HORIZONTAL){
areaState.area.addPoint((int)transY1,(int)transX1);
}
PlotOrientation orientation=plot.getOrientation();
Paint paint=getItemPaint(series,item,selected);
Stroke stroke=getItemStroke(series,item,selected);
g2.setPaint(paint);

1.0724950197425465
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<563,587>

-------- No Patch ---------


-------- Similar Code ---------
if(!getItemVisible(series,item)){
return ;
}
XYAreaRendererState areaState=(XYAreaRendererState)state;
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
int itemCount=dataset.getItemCount(series);
double x0=dataset.getXValue(series,Math.max(item-1,0));

1.072343202024211
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<494,513>


-------- Repeated Patch ---------
if(Double.isNaN(index)){
y1=0.0;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(pass==1){
getBarPainter().paintBar(g2,this,series,item,selected,bar,barBase);
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,y1<0.0);
}
if(state.getInfo()!=null){
EntityCollection entities=state.getInfo().getOwner().getEntityCollection();
if(entities!=null){
addEntity(entities,bar,dataset,series,item,selected,bar.getCenterX(),bar.getCenterY());
}
}
}

1.0722173867186888
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<314,334>

-------- No Patch ---------


-------- Similar Code ---------
if(isItemLabelVisible(series,item,selected)){
double xx=transX1;
double yy=transY1;
if(orientation==PlotOrientation.HORIZONTAL){
xx=transY1;
yy=transX1;
}
drawItemLabel(g2,orientation,dataset,series,item,selected,xx,yy,(y1<0.0));
}

1.0721684869645673
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepRenderer.java<287,296>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0721665284716013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3851,3860>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=firstItem;item<=lastItem;item++){
boolean selected=false;
if(selectionState!=null){
selected=selectionState.isSelected(series,item);
}
renderer.drawItem(g2,state,dataArea,this,xAxis,yAxis,dataset,series,item,selected,pass);
}

1.0721665284716013
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3882,3891>

-------- No Patch ---------


-------- Similar Code ---------
if((i-offset)>=0){
TimeSeriesDataItem item=source.getRawDataItem(i-offset);
RegularTimePeriod p=item.getPeriod();
Number v=item.getValue();
long currentIndex=p.getSerialIndex();
if(currentIndex>serialLimit){
if(v!=null){
sum=sum+v.doubleValue();
n=n+1;
}
}else {
finished=true;
}
}

1.0720603860150777
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/MovingAverage.java<146,161>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.071999053142463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1229,1238>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.071999053142463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1246,1255>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double lvalue=ixyd.getStartXValue(series,item);
double uvalue=ixyd.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.071999053142463
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1316,1325>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
OHLCDataset highLowData=(OHLCDataset)dataset;
double x=highLowData.getXValue(series,item);
double yHigh=highLowData.getHighValue(series,item);
double yLow=highLowData.getLowValue(series,item);
double yOpen=highLowData.getOpenValue(series,item);
double yClose=highLowData.getCloseValue(series,item);
RectangleEdge domainEdge=plot.getDomainAxisEdge();
double xx=domainAxis.valueToJava2D(x,dataArea,domainEdge);
RectangleEdge edge=plot.getRangeAxisEdge();

1.0713527461635277
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CandlestickRenderer.java<668,684>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=that.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0706070303573916
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomXYURLGenerator.java<175,188>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<urlCount;item++){
String u1=getURL(series,item);
String u2=generator.getURL(series,item);
if(u1!=null){
if(!u1.equals(u2)){
return false;
}
}else {
if(u2!=null){
return false;
}
}
}

1.0706070303573916
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/CustomCategoryURLGenerator.java<165,177>

-------- No Patch ---------


-------- Similar Code ---------
if(handler!=this){
handler.characters(ch,start,length);
}

1.0694551971144155
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xml/RootHandler.java<84,86>

-------- No Patch ---------


-------- Similar Code ---------
pointer.lineTo(midX+lenX,maxY-lenX);
pointer.lineTo(midX,minY+lenX);
pointer.closePath();
lenX=4*lenX;
Ellipse2D circle=new Ellipse2D.Double(midX-lenX/2,plotArea.getMaxY()-lenX,lenX,lenX);
shape=new Area(circle);
shape.add(new Area(pointer));
if((rotate!=null)&&(angle!=0)){
getTransform().setToRotation(angle,rotate.getX(),rotate.getY());
shape.transform(getTransform());
}
defaultDisplay(g2,shape);

1.069021783487983
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/PinNeedle.java<90,106>

-------- No Patch ---------


-------- Similar Code ---------
if(!(dataset instanceof IntervalXYDataset&&dataset instanceof TableXYDataset)){
String message="dataset (type "+dataset.getClass().getName();
boolean and=false;
if(!IntervalXYDataset.class.isAssignableFrom(dataset.getClass())){
message+=" it is no IntervalXYDataset";
and=true;
}
if(!TableXYDataset.class.isAssignableFrom(dataset.getClass())){
if(and){
message+=" and";
}
message+=" it is no TableXYDataset";
}
throw new IllegalArgumentException(message);
}
IntervalXYDataset intervalDataset=(IntervalXYDataset)dataset;
double value=intervalDataset.getYValue(series,item);
if(Double.isNaN(value)){
return ;
}

1.0688508093735107
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<237,260>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
if(!TableXYDataset.class.isAssignableFrom(data.getClass())){
if(false){
message+=" and";
}
message+=" it is no TableXYDataset";
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
throw new IllegalArgumentException(index);
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
if(!TableXYDataset.class.isAssignableFrom(data.getClass())){
if(false){
message+=" and";
}
message+=" it is no TableXYDataset";
}
throw new IllegalArgumentException(index);

for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
if(Double.isNaN(clone)){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(getPlotArea()&&item>0&&this.pArea!=null&&(item==(itemCount-1)||Double.isNaN(y1))){
double transY2=rangeAxis.valueToJava2D(getRangeBase(),dataArea,plot.getRangeAxisEdge());
transY2=restrictValueToDataArea(transY2,plot,dataArea);
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY2,(int)transX1);
}
g2.fill(this.pArea);
if(isOutline()){
g2.setStroke(plot.getOutlineStroke());
g2.setPaint(plot.getOutlinePaint());
g2.draw(this.pArea);
}
this.pArea=null;
}

1.0683594345413843
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<478,508>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1291,1294>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1295,1298>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1306,1309>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java<1310,1313>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1415,1418>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1419,1422>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1430,1433>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1434,1437>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(x0,start2d,x1,start2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1614,1617>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(x0,end2d,x1,end2d);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1618,1621>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(start)){
line.setLine(start2d,y0,start2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1629,1632>

-------- No Patch ---------


-------- Similar Code ---------
if(range.contains(end)){
line.setLine(end2d,y0,end2d,y1);
g2.draw(line);
}

1.0682141092385278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1633,1636>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=intervalXYData.getStartXValue(series,item);
uvalue=intervalXYData.getEndXValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}

1.0672230639714728
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<753,762>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
lvalue=dataset.getXValue(series,item);
uvalue=lvalue;
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}
}

1.0672197169020068
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<768,775>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ohlc.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ohlc.getLowValue(series,item);
double uvalue=ohlc.getHighValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.0671141712207437
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1396,1408>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double x=ixyd.getXValue(series,item);
if(xRange.contains(x)){
double lvalue=ixyd.getStartYValue(series,item);
double uvalue=ixyd.getEndYValue(series,item);
if(!Double.isNaN(lvalue)){
minimum=Math.min(minimum,lvalue);
}
if(!Double.isNaN(uvalue)){
maximum=Math.max(maximum,uvalue);
}
}
}

1.0671141712207437
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1442,1454>

-------- No Patch ---------


-------- Similar Code ---------
if(pass==0){
drawItemPass0(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}else if(pass==1){
drawItemPass1(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected);
}

1.0670111358493366
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java<380,387>

-------- No Patch ---------


-------- Similar Code ---------
if(generator!=null){
Font labelFont=getItemLabelFont(series,item,selected);
Paint paint=getItemLabelPaint(series,item,selected);
g2.setFont(labelFont);
g2.setPaint(paint);
String label=generator.generateLabel(dataset,series,item);
ItemLabelPosition position=null;
if(!negative){
position=getPositiveItemLabelPosition(series,item,selected);
}else {
position=getNegativeItemLabelPosition(series,item,selected);
}
Point2D anchorPoint=calculateLabelAnchorPoint(position.getItemLabelAnchor(),x,y,orientation);
TextUtilities.drawRotatedString(label,g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getTextAnchor(),position.getAngle(),position.getRotationAnchor());
}

1.065873253762098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java<1896,1921>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
Number lvalue=bx.getMinRegularValue(series,item);
if(lvalue==null){
lvalue=bx.getValue(series,item);
}
Number uvalue=bx.getMaxRegularValue(series,item);
if(uvalue==null){
uvalue=bx.getValue(series,item);
}
if(lvalue!=null){
minimum=Math.min(minimum,lvalue.doubleValue());
}
if(uvalue!=null){
maximum=Math.max(maximum,uvalue.doubleValue());
}
}

1.0653576677884984
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1054,1069>

-------- No Patch ---------


-------- Similar Code ---------
EntityCollection entities=null;
if(state.getInfo()!=null){
entities=state.getInfo().getOwner().getEntityCollection();
}
BoxAndWhiskerXYDataset boxAndWhiskerData=(BoxAndWhiskerXYDataset)dataset;
Number x=boxAndWhiskerData.getX(series,item);
Number yMax=boxAndWhiskerData.getMaxRegularValue(series,item);
Number yMin=boxAndWhiskerData.getMinRegularValue(series,item);
Number yMedian=boxAndWhiskerData.getMedianValue(series,item);
Number yAverage=boxAndWhiskerData.getMeanValue(series,item);
Number yQ1Median=boxAndWhiskerData.getQ1Value(series,item);
Number yQ3Median=boxAndWhiskerData.getQ3Value(series,item);
double xx=domainAxis.valueToJava2D(x.doubleValue(),dataArea,plot.getDomainAxisEdge());

1.0652399308160945
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<376,393>

-------- No Patch ---------


-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);
g2.draw(new Line2D.Double(yyMax,xx,yyQ3Median,xx));

1.0648893785761708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<417,436>

-------- No Patch ---------


-------- Similar Code ---------
if(exactBoxWidth<=0.0){
int itemCount=boxAndWhiskerData.getItemCount(series);
exactBoxWidth=dataAreaX/itemCount*4.5/7;
if(exactBoxWidth<3){
width=3;
}else if(exactBoxWidth>maxBoxWidth){
width=maxBoxWidth;
}else {
width=exactBoxWidth;
}
}
g2.setPaint(getItemPaint(series,item,selected));
Stroke s=getItemStroke(series,item,selected);
g2.setStroke(s);
g2.draw(new Line2D.Double(xx,yyMax,xx,yyQ3Median));

1.0648893785761708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<560,579>

-------- No Patch ---------


-------- Similar Code ---------
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
if(Double.isNaN(y1)||Double.isNaN(x1)){
return ;
}
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
if(Double.isNaN(y0)||Double.isNaN(x0)){
return ;
}
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double transX0=domainAxis.valueToJava2D(x0,dataArea,xAxisLocation);

1.063151060959298
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<850,865>

-------- No Patch ---------


-------- Similar Code ---------
g2.setPaint(getItemPaint(series,item,selected));
g2.fill(circle);
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(circle);
if(isItemLabelVisible(series,item,selected)){
if(orientation==PlotOrientation.VERTICAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transX,transY,false);
}else if(orientation==PlotOrientation.HORIZONTAL){
drawItemLabel(g2,orientation,dataset,series,item,selected,transY,transX,false);
}
}
EntityCollection entities=null;

1.0630558379354278
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBubbleRenderer.java<238,256>

-------- No Patch ---------


-------- Similar Code ---------
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
boolean nullPoint=false;
if(Double.isNaN(y1)){
y1=0.0;
nullPoint=true;
}
double ph1=getPreviousHeight(tdataset,series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1+ph1,dataArea,plot.getRangeAxisEdge());
Paint seriesPaint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);

1.0625490729319533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<408,424>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(y1)){
y1=0.0;
}
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
double x0=dataset.getXValue(series,Math.max(item-1,0));
double y0=dataset.getYValue(series,Math.max(item-1,0));
if(Double.isNaN(y0)){
y0=0.0;
}
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
int itemCount=dataset.getItemCount(series);

1.0614573684683508
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java<289,310>

-------- No Patch ---------


-------- Similar Code ---------
Shape box=null;
if(yyQ1Median<yyQ3Median){
box=new Rectangle2D.Double(yyQ1Median,xx-width/2,yyQ3Median-yyQ1Median,width);
}else {
box=new Rectangle2D.Double(yyQ3Median,xx-width/2,yyQ1Median-yyQ3Median,width);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);
g2.setPaint(getArtifactPaint());

1.0606433507285247
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<446,464>

-------- No Patch ---------


-------- Similar Code ---------
Shape box=null;
if(yyQ1Median>yyQ3Median){
box=new Rectangle2D.Double(xx-width/2,yyQ3Median,width,yyQ1Median-yyQ3Median);
}else {
box=new Rectangle2D.Double(xx-width/2,yyQ1Median,width,yyQ3Median-yyQ1Median);
}
if(this.fillBox){
g2.setPaint(lookupBoxPaint(series,item));
g2.fill(box);
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.setPaint(getItemOutlinePaint(series,item,selected));
g2.draw(box);
g2.setPaint(getArtifactPaint());

1.0606433507285247
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<589,607>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double ph0=getPreviousHeight(tdataset,series,item-1);
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0+ph0,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getLine().setLine(transX0,transY0,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getLine().setLine(transY0,transX0,transY1,transX1);
}
g2.draw(areaState.getLine());
}

1.060373001502394
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<464,483>

-------- No Patch ---------


-------- Similar Code ---------
if(seriesKey!=null){
result+=firstParameter?"?":"&amp;";
String s=null;
try{
s=URLEncoder.encode(seriesKey.toString(),"UTF-8");
}catch (UnsupportedEncodingException e) {
  s=seriesKey.toString();
}

result+=this.seriesParameterName+"=";
firstParameter=false;
}
long x=(long)dataset.getXValue(series,item);
String xValue=this.dateFormat.format(new Date(x));

1.060238009512355
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/urls/TimeSeriesURLGenerator.java<182,196>

-------- No Patch ---------


-------- Similar Code ---------
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
double transX=domainAxis.valueToJava2D(x,dataArea,xAxisLocation)-adjx;
double transY=rangeAxis.valueToJava2D(y,dataArea,yAxisLocation)-adjy;
g2.setPaint(getItemPaint(series,item,selected));
PlotOrientation orientation=plot.getOrientation();
if(orientation==PlotOrientation.HORIZONTAL){
g2.fillRect((int)transY,(int)transX,this.dotHeight,this.dotWidth);
}else if(orientation==PlotOrientation.VERTICAL){
g2.fillRect((int)transX,(int)transY,this.dotWidth,this.dotHeight);
}
int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);
int rangeAxisIndex=plot.getRangeAxisIndex(rangeAxis);

1.0601771376882962
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYDotRenderer.java<239,258>

-------- No Patch ---------


-------- Similar Code ---------
if(orientation==PlotOrientation.HORIZONTAL){
drawHorizontalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}else if(orientation==PlotOrientation.VERTICAL){
drawVerticalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
}

1.0596199122912926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java<340,347>

-------- No Patch ---------


-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double dx=0.0;
double dy=0.0;
if(dataset instanceof VectorXYDataset){
dx=((VectorXYDataset)dataset).getVectorXValue(series,item);
dy=((VectorXYDataset)dataset).getVectorYValue(series,item);
}
double xx0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
double xx1=domainAxis.valueToJava2D(x+dx,dataArea,plot.getDomainAxisEdge());
double yy1=rangeAxis.valueToJava2D(y+dy,dataArea,plot.getRangeAxisEdge());

1.0593291201755086
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<224,239>

-------- No Patch ---------


-------- Similar Code ---------
Paint paint=getItemPaint(series,item,selected);
Stroke seriesStroke=getItemStroke(series,item,selected);
g2.setPaint(paint);
g2.setStroke(seriesStroke);
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double x=x1;
double y=Double.isNaN(y1)?getRangeBase():y1;
double transX1=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
transY1=restrictValueToDataArea(transY1,plot,dataArea);

1.058975677070897
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<359,375>

-------- No Patch ---------


-------- Similar Code ---------
if(getItemLineVisible(series,item)){
if(this.drawSeriesLineAsPath){
drawPrimaryLineAsPath(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}else {
drawPrimaryLine(state,g2,plot,dataset,pass,series,item,selected,domainAxis,rangeAxis,dataArea);
}
}

1.0584196367164758
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java<771,781>

-------- No Patch ---------


-------- Similar Code ---------
boolean itemContributesToXBounds=false;
boolean itemContributesToYBounds=false;
double x=item.getXValue();
if(!Double.isNaN(x)){
if(x<=this.minX||x>=this.maxX){
itemContributesToXBounds=true;
}
}
if(item.getY()!=null){
double y=item.getYValue();
if(!Double.isNaN(y)){
if(y<=this.minY||y>=this.maxY){
itemContributesToYBounds=true;
}
}
}

1.0578495751620283
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/XYSeries.java<267,282>

-------- No Patch ---------


-------- Similar Code ---------
Line2D line;
PlotOrientation orientation=plot.getOrientation();
if(orientation.equals(PlotOrientation.HORIZONTAL)){
line=new Line2D.Double(yy0,xx0,yy1,xx1);
}else {
line=new Line2D.Double(xx0,yy0,xx1,yy1);
}
g2.setPaint(getItemPaint(series,item,selected));
g2.setStroke(getItemStroke(series,item,selected));
g2.draw(line);
double dxx=(xx1-xx0);
double dyy=(yy1-yy0);
double bx=xx0+(1.0-this.baseLength)*dxx;

1.0565353887367608
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<240,255>

-------- No Patch ---------


-------- Similar Code ---------
if(value>0.0){
translatedBase=rangeAxis.valueToJava2D(positiveBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(positiveBase+value,dataArea,edgeR);
}else {
translatedBase=rangeAxis.valueToJava2D(negativeBase,dataArea,edgeR);
translatedValue=rangeAxis.valueToJava2D(negativeBase+value,dataArea,edgeR);
}
RectangleEdge edgeD=plot.getDomainAxisEdge();
double startX=intervalDataset.getStartXValue(series,item);
if(Double.isNaN(startX)){
return ;
}
double translatedStartX=domainAxis.valueToJava2D(startX,dataArea,edgeD);

1.0556796285565624
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<297,316>

-------- No Patch ---------


-------- Similar Code ---------
if(item>0){
double x0=dataset.getXValue(series,item-1);
double y0=dataset.getYValue(series,item-1);
double y=dataset.getYValue(series,item);
if(Double.isNaN(x0)||Double.isNaN(y0)){
return ;
}
double xx0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y0,dataArea,location);
double yy=rangeAxis.valueToJava2D(y,dataArea,location);
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yy0,xx0,yy,xx));
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx0,yy0,xx,yy));
}
}

1.05449623407001
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<418,435>

-------- No Patch ---------


-------- Similar Code ---------
{
Shape shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY,transX);
}else if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX,transY);
}
hotspot=shape;
if(shape.intersects(dataArea)){
g2.setPaint(getPaint(dataset,series,item,selected));
g2.fill(shape);
if(this.drawOutlines){
if(getUseOutlinePaint()){
g2.setPaint(getItemOutlinePaint(series,item,selected));
}else {
g2.setPaint(getItemPaint(series,item,selected));
}
g2.setStroke(getItemOutlineStroke(series,item,selected));
g2.draw(shape);
}
}
if(entities!=null){
addEntity(entities,hotspot,dataset,series,item,selected,transX,transY);
}
}

1.0544922404466008
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYShapeRenderer.java<448,482>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value<0.0){
total=total+value;
}
}
}
minimum=Math.min(minimum,total);
}

1.0543140761669252
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1970,1985>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double total=0.0;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
total=total+value;
}
}
}
maximum=Math.max(maximum,total);
}

1.0543140761669252
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<2010,2024>

-------- No Patch ---------


-------- Similar Code ---------
if(isShadowPass(pass)){
if(getWallPaint()!=null){
g2.setStroke(getItemStroke(series,item,selected));
g2.setPaint(getWallPaint());
g2.translate(getXOffset(),getYOffset());
g2.draw(shape);
g2.translate(-getXOffset(),-getYOffset());
}
}else {
super.drawShape1(g2,pass,series,item,selected,shape);
}

1.0541880232198944
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYLine3DRenderer.java<213,225>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
Number start=icd.getStartValue(row,column);
Number end=icd.getEndValue(row,column);
if(getNumberFormat()!=null){
result[3]=getNumberFormat().format(start);
result[4]=getNumberFormat().format(end);
}else if(getDateFormat()!=null){
result[3]=getDateFormat().format(start);
result[4]=getDateFormat().format(end);
}
}

1.0541736379338027
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalCategoryItemLabelGenerator.java<122,134>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof IntervalCategoryDataset){
IntervalCategoryDataset icd=(IntervalCategoryDataset)dataset;
Number start=icd.getStartValue(row,column);
Number end=icd.getEndValue(row,column);
if(getNumberFormat()!=null){
result[3]=getNumberFormat().format(start);
result[4]=getNumberFormat().format(end);
}else if(getDateFormat()!=null){
result[3]=getDateFormat().format(start);
result[4]=getDateFormat().format(end);
}
}

1.0541736379338027
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/IntervalCategoryToolTipGenerator.java<119,131>

-------- No Patch ---------


-------- Similar Code ---------
double x=dataset.getXValue(series,item);
double y=dataset.getYValue(series,item);
double z=0.0;
if(dataset instanceof XYZDataset){
z=((XYZDataset)dataset).getZValue(series,item);
}
Paint p=this.paintScale.getPaint(z);
double xx0=domainAxis.valueToJava2D(x+this.xOffset,dataArea,plot.getDomainAxisEdge());
double yy0=rangeAxis.valueToJava2D(y+this.yOffset,dataArea,plot.getRangeAxisEdge());
double xx1=domainAxis.valueToJava2D(x+this.blockWidth,dataArea,plot.getDomainAxisEdge());
double yy1=rangeAxis.valueToJava2D(y+this.blockHeight,dataArea,plot.getRangeAxisEdge());
Rectangle2D block;

1.0533826496947476
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBlockRenderer.java<353,368>

-------- No Patch ---------


-------- Similar Code ---------
if(Double.isNaN(y0)){
y0=0.0;
}
double transX0=domainAxis.valueToJava2D(x0,dataArea,plot.getDomainAxisEdge());
double transY0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double transX2=domainAxis.valueToJava2D(x2,dataArea,plot.getDomainAxisEdge());
double transY2=rangeAxis.valueToJava2D(y2,dataArea,plot.getRangeAxisEdge());
double transZero=rangeAxis.valueToJava2D(0.0,dataArea,plot.getRangeAxisEdge());

1.0532073828549304
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYAreaRenderer.java<515,536>

-------- No Patch ---------


-------- Similar Code ---------
if(source==null){
throw new IllegalArgumentException("Null \'source\' argument.");
}
double[][] clone=new double[source.length][];
for(int i=0;i<source.length;i++){
if(source[i]!=null){
double[] row=new double[source[i].length];
System.arraycopy(source[i],0,row,0,source[i].length);
clone[i]=row;
}
}
return clone;

1.0526845909007185
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/DataUtilities.java<100,111>

-------- No Patch ---------


-------- Similar Code ---------
double yy0=rangeAxis.valueToJava2D(y0,dataArea,plot.getRangeAxisEdge());
double yy1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
double x0=intervalDataset.getStartXValue(series,item);
double xx0=domainAxis.valueToJava2D(x0,dataArea,xAxisLocation);
double x1=intervalDataset.getEndXValue(series,item);
double xx1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
double intervalW=xx1-xx0;
double baseX=xx0;
if(this.centerBarAtStartValue){
baseX=baseX-intervalW/2.0;
}
double m=getMargin();

1.0520372903719273
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java<241,258>

-------- No Patch ---------


-------- Similar Code ---------
for(int i=0;i<series;i++){
double v=dataset.getYValue(i,item);
if(!Double.isNaN(v)){
if(this.renderAsPercentages){
v=v/total;
}
if(v>0){
positiveBase=positiveBase+v;
}else {
negativeBase=negativeBase+v;
}
}
}

1.0515486631831177
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java<279,292>

-------- No Patch ---------


-------- Similar Code ---------
if((!getPlotLines())||((!(domainAxis instanceof CyclicNumberAxis))&&(!(rangeAxis instanceof CyclicNumberAxis)))){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double xn=dataset.getXValue(series,item-1);
double yn=dataset.getYValue(series,item-1);
if(Double.isNaN(yn)){
super.drawItem(g2,state,dataArea,plot,domainAxis,rangeAxis,dataset,series,item,selected,pass);
return ;
}
double[] x=new double[2];
double[] y=new double[2];
x[0]=xn;

1.050819315814209
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java<145,163>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerXYDataset){
BoxAndWhiskerXYDataset d=(BoxAndWhiskerXYDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.050617016052533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGenerator.java<138,146>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset instanceof BoxAndWhiskerCategoryDataset){
BoxAndWhiskerCategoryDataset d=(BoxAndWhiskerCategoryDataset)dataset;
result[2]=formatter.format(d.getMeanValue(series,item));
result[3]=formatter.format(d.getMedianValue(series,item));
result[4]=formatter.format(d.getMinRegularValue(series,item));
result[5]=formatter.format(d.getMaxRegularValue(series,item));
result[6]=formatter.format(d.getQ1Value(series,item));
result[7]=formatter.format(d.getQ3Value(series,item));
}

1.050617016052533
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BoxAndWhiskerToolTipGenerator.java<118,127>

-------- No Patch ---------


-------- Similar Code ---------
Object[] result=new Object[4];
result[0]=dataset.getSeriesKey(series).toString();
Number x=dataset.getX(series,item);
DateFormat xf=getXDateFormat();
if(xf!=null){
result[1]=xf.format(x);
}else {
result[1]=getXFormat().format(x);
}
Number y=dataset.getY(series,item);
DateFormat yf=getYDateFormat();
if(yf!=null){
result[2]=yf.format(y);
}else {
result[2]=getYFormat().format(y);
}

1.0484303946881652
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/StandardXYZToolTipGenerator.java<199,218>

-------- No Patch ---------


-------- Similar Code ---------
Object[] result=new Object[4];
result[0]=dataset.getSeriesKey(series).toString();
Number x=dataset.getX(series,item);
DateFormat xf=getXDateFormat();
if(xf!=null){
result[1]=xf.format(x);
}else {
result[1]=getXFormat().format(x);
}
Number y=dataset.getY(series,item);
DateFormat yf=getYDateFormat();
if(yf!=null){
result[2]=yf.format(y);
}else {
result[2]=getYFormat().format(y);
}

1.0484303946881652
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java<205,224>

-------- No Patch ---------


-------- Similar Code ---------
{
int lower=0;
int upper=this.labels.size()-1;
while(upper>lower){
if(lower<upper-1){
PieLabelRecord r0=getPieLabelRecord(lower);
PieLabelRecord r1=getPieLabelRecord(lower+1);
if(r1.getLowerY()<r0.getUpperY()){
double adjust=r0.getUpperY()-r1.getLowerY()+this.minGap;
r1.setAllocatedY(r1.getAllocatedY()+adjust);
}
}
PieLabelRecord r2=getPieLabelRecord(upper-1);
PieLabelRecord r3=getPieLabelRecord(upper);
if(r2.getUpperY()>r3.getLowerY()){
double adjust=(r2.getUpperY()-r3.getLowerY())+this.minGap;
r3.setAllocatedY(r3.getAllocatedY()+adjust);
}
lower++;
upper--;
}
}

1.0463516229391217
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PieLabelDistributor.java<113,135>

-------- No Patch ---------


-------- Similar Code ---------
if(!isNull){
String plainStr=(String)stream.readObject();
result=new AttributedString(plainStr);
char c=stream.readChar();
int start=0;
while(c!=CharacterIterator.DONE){
int limit=stream.readInt();
Map atts=(Map)stream.readObject();
result.addAttributes(atts,start,limit);
start=limit;
c=stream.readChar();
}
}

1.0462135248731415
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/SerialUtilities.java<504,517>

-------- No Patch ---------


-------- Similar Code ---------
while(((end=iterator.next())!=BreakIterator.DONE)){
x+=measurer.getStringWidth(text,current,end);
if(x>width){
if(firstWord){
while(measurer.getStringWidth(text,start,end)>width){
end--;
if(end<=start){
return end;
}
}
return end;
}else {
end=iterator.previous();
return end;
}
}else {
if(end>newline){
return newline;
}
}
firstWord=false;
current=end;
}

1.0456439058198288
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/text/TextUtilities.java<249,274>

-------- No Patch ---------


-------- Similar Code ---------
double yHigh=hld.getHighValue(series,item);
double yLow=hld.getLowValue(series,item);
if(!Double.isNaN(yHigh)&&!Double.isNaN(yLow)){
double yyHigh=rangeAxis.valueToJava2D(yHigh,dataArea,location);
double yyLow=rangeAxis.valueToJava2D(yLow,dataArea,location);
if(orientation==PlotOrientation.HORIZONTAL){
g2.draw(new Line2D.Double(yyLow,xx,yyHigh,xx));
entityArea=new Rectangle2D.Double(Math.min(yyLow,yyHigh),xx-1.0,Math.abs(yyHigh-yyLow),2.0);
}else if(orientation==PlotOrientation.VERTICAL){
g2.draw(new Line2D.Double(xx,yyLow,xx,yyHigh));
entityArea=new Rectangle2D.Double(xx-1.0,Math.min(yyLow,yyHigh),2.0,Math.abs(yyHigh-yyLow));
}
}

1.0453391013458995
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/HighLowRenderer.java<346,364>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorXValue(series,item);
if(delta<0.0){
uvalue=vdataset.getXValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getXValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0451533442022782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<115,127>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<itemCount;item++){
double delta=vdataset.getVectorYValue(series,item);
if(delta<0.0){
uvalue=vdataset.getYValue(series,item);
lvalue=uvalue+delta;
}else {
lvalue=vdataset.getYValue(series,item);
uvalue=lvalue+delta;
}
minimum=Math.min(minimum,lvalue);
maximum=Math.max(maximum,uvalue);
}

1.0451533442022782
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/VectorRenderer.java<171,183>

-------- No Patch ---------


-------- Similar Code ---------
if(ebp.getGenerateEntities()){
EntityCollection ec=new StandardEntityCollection();
LegendItemEntity entity=new LegendItemEntity((Shape)area.clone());
entity.setSeriesKey(this.seriesKey);
entity.setDataset(this.dataset);
entity.setToolTipText(getToolTipText());
entity.setURLText(getURLText());
ec.add(entity);
r.setEntityCollection(ec);
}

1.044681804549663
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendItemBlockContainer.java<186,196>

-------- No Patch ---------


-------- Similar Code ---------
{
BoxAndWhiskerItem item=getItem(r,c);
if(item!=null){
Number min=item.getMinOutlier();
if(min!=null){
double minv=min.doubleValue();
if(!Double.isNaN(minv)){
if(minv<this.minimumRangeValue||Double.isNaN(this.minimumRangeValue)){
this.minimumRangeValue=minv;
this.minimumRangeValueRow=r;
this.minimumRangeValueColumn=c;
}
}
}
Number max=item.getMaxOutlier();
if(max!=null){
double maxv=max.doubleValue();
if(!Double.isNaN(maxv)){
if(maxv>this.maximumRangeValue||Double.isNaN(this.maximumRangeValue)){
this.maximumRangeValue=maxv;
this.maximumRangeValueRow=r;
this.maximumRangeValueColumn=c;
}
}
}
}
}

1.0425245650654271
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java<857,885>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
if(copy!=null){
double copy.doubleValue()=copy.doubleValue();
if(!Double.isNaN(copy.doubleValue())){
if(copy.doubleValue()>this.end||Double.isNaN(this.end)){
this.maximumRangeValue=copy.doubleValue();
this.maximumRangeValueColumn=start;
}
}
}
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(getPlotArea()&&item>0&&item==(itemCount-1)){
double transY2=rangeAxis.valueToJava2D(ph1,dataArea,plot.getRangeAxisEdge());
if(orientation==PlotOrientation.VERTICAL){
areaState.getSeriesArea().addPoint((int)transX1,(int)transY2);
}else if(orientation==PlotOrientation.HORIZONTAL){
areaState.getSeriesArea().addPoint((int)transY2,(int)transX1);
}
if(series!=0){
Stack points=areaState.getLastSeriesPoints();
while(!points.empty()){
Point point=(Point)points.pop();
areaState.getSeriesArea().addPoint((int)point.getX(),(int)point.getY());
}
}
g2.setPaint(seriesPaint);
g2.setStroke(seriesStroke);
g2.fill(areaState.getSeriesArea());
if(isOutline()){
g2.setStroke(lookupSeriesOutlineStroke(series));
g2.setPaint(lookupSeriesOutlinePaint(series));
g2.draw(areaState.getSeriesArea());
}
}

1.0421459736675
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java<488,526>

-------- No Patch ---------


-------- Similar Code ---------
x0=dataset.getXValue(series,item-1);
y0=Double.isNaN(y1)?y1:dataset.getYValue(series,item-1);
x=x0;
y=Double.isNaN(y0)?getRangeBase():y0;
transX0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
transY0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
transY0=restrictValueToDataArea(transY0,plot,dataArea);
if(Double.isNaN(y1)){
transX1=transX0;
transY0=transY1;
}
if(transY0!=transY1){
if(orientation==PlotOrientation.VERTICAL){
this.pArea.addPoint((int)transX1,(int)transY0);
}else if(orientation==PlotOrientation.HORIZONTAL){
this.pArea.addPoint((int)transY0,(int)transX1);
}
}

1.0414770867047267
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<406,433>

-------- No Patch ---------


-------- Similar Code ---------
if(dataset.getKeys().size()>plotArea.getWidth()){
String text="Too many elements";
Font sfont=new Font("Tahoma",Font.BOLD,10);
g2.setFont(sfont);
FontMetrics fm=g2.getFontMetrics(sfont);
int stringWidth=fm.stringWidth(text);
g2.drawString(text,(int)(plotArea.getX()+(plotArea.getWidth()-stringWidth)/2),(int)(plotArea.getY()+(plotArea.getHeight()/2)));
return ;
}

1.041407528586485
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/PiePlot3D.java<343,354>

-------- No Patch ---------


-------- Similar Code ---------
Object[] result=new Object[3];
result[0]=dataset.getSeriesKey(series).toString();
double x=dataset.getXValue(series,item);
if(this.xDateFormat!=null){
result[1]=this.xDateFormat.format(new Date((long)x));
}else {
result[1]=this.xFormat.format(x);
}
double y=dataset.getYValue(series,item);
if(Double.isNaN(y)&&dataset.getY(series,item)==null){
result[2]=this.nullYString;
}else {
if(this.yDateFormat!=null){
result[2]=this.yDateFormat.format(new Date((long)y));
}else {
result[2]=this.yFormat.format(y);
}
}

1.0397511030138318
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/AbstractXYItemLabelGenerator.java<277,299>


-------- Patch ---------
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.end!=null){
new Object[3][1]=this.xDateFormat.format(new Date((long)clone));
}else {
result[1]=this.copy.format(x);
}
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
if(getShadowsVisible()){
this.barPainter.paintBarShadow(g2,this,series,item,selected,bar,barBase,!this.useYInterval);
}
this.barPainter.paintBar(g2,this,series,item,selected,bar,barBase);
if(isItemLabelVisible(series,item,selected)){
XYItemLabelGenerator generator=getItemLabelGenerator(series,item,selected);
drawItemLabelForBar(g2,plot,dataset,series,item,selected,generator,bar,!positive);
}
double x1=dataset.getXValue(series,item);
double y1=dataset.getYValue(series,item);
double transX1=domainAxis.valueToJava2D(x1,dataArea,plot.getDomainAxisEdge());
double transY1=rangeAxis.valueToJava2D(y1,dataArea,plot.getRangeAxisEdge());
int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);
int rangeAxisIndex=plot.getRangeAxisIndex(rangeAxis);

1.0390221179940036
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYBarRenderer.java<960,982>

-------- No Patch ---------


-------- Similar Code ---------
Iterator iterator=ticks.iterator();
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=xAxis.getUpperBound();
if(fillBand){
getRenderer().fillDomainGridBand(g2,this,xAxis,dataArea,previous,end);
}

1.038719106105021
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3649,3664>

-------- No Patch ---------


-------- Similar Code ---------
Iterator iterator=ticks.iterator();
while(iterator.hasNext()){
ValueTick tick=(ValueTick)iterator.next();
double current=tick.getValue();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,current);
}
previous=current;
fillBand=!fillBand;
}
double end=axis.getUpperBound();
if(fillBand){
getRenderer().fillRangeGridBand(g2,this,axis,dataArea,previous,end);
}

1.038719106105021
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/plot/XYPlot.java<3684,3699>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double positive=base;
double negative=base;
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
double value=number.doubleValue();
if(value>0.0){
positive=positive+value;
}
if(value<0.0){
negative=negative+value;
}
}
}
minimum=Math.min(minimum,negative);
maximum=Math.max(maximum,positive);
}

1.0377563840394035
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1860,1879>

-------- No Patch ---------


-------- Similar Code ---------
{
OHLCDataset d=(OHLCDataset)dataset;
Number high=d.getHigh(series,item);
Number low=d.getLow(series,item);
Number open=d.getOpen(series,item);
Number close=d.getClose(series,item);
Number x=d.getX(series,item);
result=d.getSeriesKey(series).toString();
if(x!=null){
Date date=new Date(x.longValue());
result=result+"--> Date=";
if(high!=null){
result=result+" High=";
}
if(low!=null){
result=result+" Low=";
}
if(open!=null){
result=result+" Open=";
}
if(close!=null){
result=result+" Close=";
}
}
}

1.0324545900109041
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/labels/HighLowItemLabelGenerator.java<125,156>

-------- No Patch ---------


-------- Similar Code ---------
if(limit1!=limit2){
return false;
}
Map m1=it1.getAttributes();
Map m2=it2.getAttributes();
if(!m1.equals(m2)){
return false;
}
for(int i=start;i<limit1;i++){
if(c1!=c2){
return false;
}
c1=it1.next();
c2=it2.next();
}
start=limit1;

1.0299238096325447
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/util/AttributedStringUtilities.java<85,102>

-------- No Patch ---------


-------- Similar Code ---------
Range range=getRange();
double start=range.getLowerBound();
double end=range.getUpperBound();
double log1=calculateLog(start);
double log2=calculateLog(end);
double length=log2-log1;
Range adjusted=null;
if(isInverted()){
double logA=log1+length*(1-upperPercent);
double logB=log1+length*(1-lowerPercent);
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}else {
double logA=log1+length*lowerPercent;
double logB=log1+length*upperPercent;
adjusted=new Range(calculateValue(logA),calculateValue(logB));
}

1.028229610121405
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/LogAxis.java<801,817>

-------- No Patch ---------


-------- Similar Code ---------
if(this.xPosition==TimePeriodAnchor.START){
TimePeriod maxStart=series.getTimePeriod(series.getMaxStartIndex());
temp=new Range(start.getStart().getTime(),maxStart.getStart().getTime());
}else if(this.xPosition==TimePeriodAnchor.MIDDLE){
TimePeriod minMiddle=series.getTimePeriod(series.getMinMiddleIndex());
long s1=minMiddle.getStart().getTime();
long e1=minMiddle.getEnd().getTime();
TimePeriod maxMiddle=series.getTimePeriod(series.getMaxMiddleIndex());
long s2=maxMiddle.getStart().getTime();
long e2=maxMiddle.getEnd().getTime();
temp=new Range(s1+(e1-s1)/2,s2+(e2-s2)/2);
}else if(this.xPosition==TimePeriodAnchor.END){
TimePeriod minEnd=series.getTimePeriod(series.getMinEndIndex());
temp=new Range(minEnd.getEnd().getTime(),end.getEnd().getTime());
}

1.025134812781512
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/TimePeriodValuesCollection.java<392,415>

-------- No Patch ---------


-------- Similar Code ---------
if(getShapesVisible()){
shape=getItemShape(series,item,selected);
if(orientation==PlotOrientation.VERTICAL){
shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
}
if(isShapesFilled()){
g2.fill(shape);
}else {
g2.draw(shape);
}
}else {
if(orientation==PlotOrientation.VERTICAL){
shape=new Rectangle2D.Double(transX1-2,transY1-2,4.0,4.0);
}else if(orientation==PlotOrientation.HORIZONTAL){
shape=new Rectangle2D.Double(transY1-2,transX1-2,4.0,4.0);
}
}

1.023011410769764
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java<446,472>

-------- No Patch ---------


-------- Similar Code ---------
 final int s1=d1.toSerial();
 final int s2=d2.toSerial();
 final int start=Math.min(s1,s2);
 final int end=Math.max(s1,s2);
 final int s=toSerial();
if(include==SerialDate.INCLUDE_BOTH){
return (s>=start&&s<=end);
}else if(include==SerialDate.INCLUDE_FIRST){
return (s>=start&&s<end);
}else if(include==SerialDate.INCLUDE_SECOND){
return (s>start&&s<=end);
}else {
return (s>start&&s<end);
}

1.015799187892211
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/time/SpreadsheetDate.java<417,434>

-------- No Patch ---------


-------- Similar Code ---------
double[] stack0=getStackValues(tdataset,series,Math.max(item-1,0));
int itemCount=dataset.getItemCount(series);
double x2=dataset.getXValue(series,Math.min(item+1,itemCount-1));
double y2=dataset.getYValue(series,Math.min(item+1,itemCount-1));
if(Double.isNaN(y2)){
y2=0.0;
}
double[] stack2=getStackValues(tdataset,series,Math.min(item+1,itemCount-1));
double xleft=(x0+x1)/2.0;
double xright=(x1+x2)/2.0;
double[] stackLeft=averageStackValues(stack0,stack1);
double[] stackRight=averageStackValues(stack1,stack2);
double[] adjStackLeft=adjustedStackValues(stack0,stack1);

1.0048963350596827
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java<241,259>

-------- No Patch ---------


-------- Similar Code ---------
int categoryIndex=dataset.getColumnIndex(category);
int categoryCount=dataset.getColumnCount();
int seriesIndex=dataset.getRowIndex(seriesKey);
int seriesCount=dataset.getRowCount();
double start=getCategoryStart(categoryIndex,categoryCount,area,edge);
double end=getCategoryEnd(categoryIndex,categoryCount,area,edge);
double width=end-start;
if(seriesCount==1){
return start+width/2.0;
}else {
double gap=(width*itemMargin)/(seriesCount-1);
double ww=(width*(1-itemMargin))/seriesCount;
return start+(seriesIndex*(ww+gap));
}

1.0003462402558443
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<713,728>

-------- No Patch ---------


-------- Similar Code ---------
for(int item=0;item<categoryCount;item++){
double[] positive=new double[groupCount];
double[] negative=new double[groupCount];
int seriesCount=dataset.getRowCount();
for(int series=0;series<seriesCount;series++){
Number number=dataset.getValue(series,item);
if(number!=null){
hasValidData=true;
double value=number.doubleValue();
if(value>0.0){
positive[groupIndex[series]]=positive[groupIndex[series]]+value;
}
if(value<0.0){
negative[groupIndex[series]]=negative[groupIndex[series]]+value;
}
}
}
for(int g=0;g<groupCount;g++){
minimum[g]=Math.min(minimum[g],negative[g]);
maximum[g]=Math.max(maximum[g],positive[g]);
}
}

0.992570326099861
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/general/DatasetUtilities.java<1918,1942>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
double xx=valueToJava2D(currentTickValue,dataArea,edge);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=valueToString(currentTickValue);
}
Rectangle2D bounds=TextUtilities.getTextBounds(tickLabel,g2,g2.getFontMetrics());
double tickLabelLength=isVerticalTickLabels()?bounds.getHeight():bounds.getWidth();
boolean tickLabelsOverlapping=false;

0.990351991206429
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<585,601>

-------- No Patch ---------


-------- Similar Code ---------
double currentTickValue=lowestTickValue+(i*size);
double yy=valueToJava2D(currentTickValue,dataArea,edge);
String tickLabel;
NumberFormat formatter=getNumberFormatOverride();
if(formatter!=null){
tickLabel=formatter.format(currentTickValue);
}else {
tickLabel=valueToString(currentTickValue);
}
Rectangle2D bounds=TextUtilities.getTextBounds(tickLabel,g2,g2.getFontMetrics());
double tickLabelLength=isVerticalTickLabels()?bounds.getWidth():bounds.getHeight();
boolean tickLabelsOverlapping=false;

0.990351991206429
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<679,695>

-------- No Patch ---------


-------- Similar Code ---------
if(position==RectangleEdge.RIGHT){
Size2D size=t.arrange(g2,constraint);
titleArea=createAlignedRectangle2D(size,area,HorizontalAlignment.RIGHT,t.getVerticalAlignment());
retValue=t.draw(g2,titleArea,p);
area.setRect(area.getX(),area.getY(),area.getWidth()-size.width,area.getHeight());
}else if(position==RectangleEdge.LEFT){
Size2D size=t.arrange(g2,constraint);
titleArea=createAlignedRectangle2D(size,area,HorizontalAlignment.LEFT,t.getVerticalAlignment());
retValue=t.draw(g2,titleArea,p);
area.setRect(area.getX()+size.width,area.getY(),area.getWidth()-size.width,area.getHeight());
}else {
throw new RuntimeException("Unrecognised title position.");
}

0.9891772296116133
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/JFreeChart.java<1338,1357>

-------- No Patch ---------


-------- Similar Code ---------
super.paintComponent(g);
if(this.chart==null){
return ;
}
Graphics2D g2=(Graphics2D)g.create();
Dimension size=getSize();
Insets insets=getInsets();
Rectangle2D available=new Rectangle2D.Double(insets.left,insets.top,size.getWidth()-insets.left,size.getHeight()-insets.top);
boolean scale=false;
double drawWidth=available.getWidth();
double drawHeight=available.getHeight();
this.scaleX=1.0;

0.98750720723973
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/ChartPanel.java<1607,1624>


-------- Patch ---------
if(this.end==null){
return ;
}
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}


-------- Patch ---------
this.clone=1.0;
TimeSeries copy=(TimeSeries)super.clone();
copy.data=new java.util.ArrayList();
if(this.data.size()>0){
for(int index=start;index<=end;index++){
TimeSeriesDataItem item=(TimeSeriesDataItem)this.data.get(index);
TimeSeriesDataItem clone=(TimeSeriesDataItem)item.clone();
try{
copy.add(clone);
}catch (SeriesException e) {
  e.printStackTrace();
}

}
}

-------- Similar Code ---------
double size=range.getUpperBound()-range.getLowerBound();
if(size>this.period){
this.period=size;
}
super.setRange(range,turnOffAutoRange,notify);

0.9868449395726963
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<896,900>

-------- No Patch ---------


-------- Similar Code ---------
Size2D result=new Size2D();
fetchLegendItems();
if(this.items.isEmpty()){
return result;
}
BlockContainer container=this.wrapper;
if(container==null){
container=this.items;
}
RectangleConstraint c=toContentConstraint(constraint);
Size2D size=container.arrange(g2,c);
result.height=calculateTotalHeight(size.height);
result.width=calculateTotalWidth(size.width);
return result;

0.9860657366750863
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/title/LegendTitle.java<492,505>

-------- No Patch ---------


-------- Similar Code ---------
if(this.coordinateType==XYCoordinateType.RELATIVE){
if(this.maxWidth>0.0){
maxW=maxW*this.maxWidth;
}
if(this.maxHeight>0.0){
maxH=maxH*this.maxHeight;
}
}
if(this.coordinateType==XYCoordinateType.DATA){
maxW=this.maxWidth;
maxH=this.maxHeight;
}
RectangleConstraint rc=new RectangleConstraint(new Range(0,maxW),new Range(0,maxH));
Size2D size=this.title.arrange(g2,rc);
Rectangle2D titleRect=new Rectangle2D.Double(0,0,size.width,size.height);
Point2D anchorPoint=RectangleAnchor.coordinates(titleRect,this.anchor);
xx=xx-(float)anchorPoint.getX();
yy=yy-(float)anchorPoint.getY();
titleRect.setRect(xx,yy,titleRect.getWidth(),titleRect.getHeight());

0.9763399144706039
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/XYTitleAnnotation.java<287,309>

-------- No Patch ---------


-------- Similar Code ---------
int i=getItemRow(itemIndex);
int j=getItemColumn(itemIndex);
Number n=new Double(get(i,j));
return n;

0.973459372122708
/home/dale/d4j/Chart/Chart_3/source/org/jfree/data/xy/MatrixSeries.java<103,108>

-------- No Patch ---------


-------- Similar Code ---------
int result=HashUtilities.hashCode(193,this.fillPaint);
result=HashUtilities.hashCode(result,this.highlightPaint);
result=HashUtilities.hashCode(result,this.outlinePaint);
result=HashUtilities.hashCode(result,this.outlineStroke);
result=HashUtilities.hashCode(result,this.rotateX);
result=HashUtilities.hashCode(result,this.rotateY);
result=HashUtilities.hashCode(result,this.size);
return result;

0.9706531391907365
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/needle/MeterNeedle.java<394,401>

-------- No Patch ---------


-------- Similar Code ---------
if(toolTip!=null||url!=null){
addEntity(info,new Rectangle2D.Float(xx,yy,(float)size.width,(float)size.height),rendererIndex,toolTip,url);
}

0.967543866154098
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/annotations/XYTitleAnnotation.java<325,329>

-------- No Patch ---------


-------- Similar Code ---------
String[] result=new String[this.symbols.size()];
result=(String[])this.symbols.toArray(result);
return result;

0.9668646088458055
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/SymbolAxis.java<173,175>

-------- No Patch ---------


-------- Similar Code ---------
if(size>this.period){
this.period=size;
}
super.setAutoRangeMinimumSize(size,notify);

0.9660344669638482
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CyclicNumberAxis.java<865,868>

-------- No Patch ---------


-------- Similar Code ---------
double log=Math.log(size)/LOG_10_VALUE;
double higher=Math.ceil(log);
return new NumberTickUnit(Math.pow(10,higher),new DecimalFormat("0.0E0"));

0.958562442090658
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/StandardTickUnitSource.java<101,104>

-------- No Patch ---------


-------- Similar Code ---------
if(this.topBlock!=null){
RectangleConstraint c1=new RectangleConstraint(widthRange,heightRange);
Size2D size=this.topBlock.arrange(g2,c1);
w[0]=size.width;
h[0]=size.height;
}

0.9503520614974684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<342,348>

-------- No Patch ---------


-------- Similar Code ---------
if(this.leftBlock!=null){
RectangleConstraint c3=new RectangleConstraint(widthRange,heightRange3);
Size2D size=this.leftBlock.arrange(g2,c3);
w[2]=size.width;
h[2]=size.height;
}

0.9503520614974684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<358,364>

-------- No Patch ---------


-------- Similar Code ---------
if(this.rightBlock!=null){
RectangleConstraint c4=new RectangleConstraint(widthRange2,heightRange3);
Size2D size=this.rightBlock.arrange(g2,c4);
w[3]=size.width;
h[3]=size.height;
}

0.9503520614974684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<366,372>

-------- No Patch ---------


-------- Similar Code ---------
if(this.centerBlock!=null){
RectangleConstraint c5=new RectangleConstraint(widthRange3,heightRange3);
Size2D size=this.centerBlock.arrange(g2,c5);
w[4]=size.width;
h[4]=size.height;
}

0.9503520614974684
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<377,386>

-------- No Patch ---------


-------- Similar Code ---------
RectangleInsets insets=getTickLabelInsets();
Size2D size=block.calculateDimensions(g2);
Rectangle2D box=new Rectangle2D.Double(0.0,0.0,size.getWidth(),size.getHeight());
Shape rotatedBox=ShapeUtilities.rotateShape(box,position.getAngle(),0.0,0.0);
double w=rotatedBox.getBounds2D().getWidth()+insets.getLeft();
return w;

0.9461135792063636
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1245,1253>

-------- No Patch ---------


-------- Similar Code ---------
RectangleInsets insets=getTickLabelInsets();
Size2D size=block.calculateDimensions(g2);
Rectangle2D box=new Rectangle2D.Double(0.0,0.0,size.getWidth(),size.getHeight());
Shape rotatedBox=ShapeUtilities.rotateShape(box,position.getAngle(),0.0,0.0);
double h=rotatedBox.getBounds2D().getHeight()+insets.getTop();
return h;

0.9461135792063636
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/CategoryAxis.java<1270,1278>

-------- No Patch ---------


-------- Similar Code ---------
if(this.bottomBlock!=null){
Range heightRange2=Range.shift(heightRange,-h[0],false);
RectangleConstraint c2=new RectangleConstraint(widthRange,heightRange2);
Size2D size=this.bottomBlock.arrange(g2,c2);
w[1]=size.width;
h[1]=size.height;
}

0.9418202712179926
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<349,356>

-------- No Patch ---------


-------- Similar Code ---------
super(size,minorTickCount);
if(formatter==null){
throw new IllegalArgumentException("Null \'formatter\' argument.");
}
this.formatter=formatter;

0.9286284094382635
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/NumberTickUnit.java<101,105>

-------- No Patch ---------


-------- Similar Code ---------
if(this.autoRangeMinimumSize!=size){
this.autoRangeMinimumSize=size;
if(this.autoRange){
autoAdjustRange();
}
if(notify){
notifyListeners(new AxisChangeEvent(this));
}
}

0.9242809131723294
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/axis/ValueAxis.java<1027,1035>

-------- No Patch ---------


-------- Similar Code ---------
if(this.topBlock!=null){
Size2D size=this.topBlock.arrange(g2,c1);
w[0]=size.width;
h[0]=size.height;
}

0.9222757653525141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<282,286>

-------- No Patch ---------


-------- Similar Code ---------
if(this.bottomBlock!=null){
Size2D size=this.bottomBlock.arrange(g2,c1);
w[1]=size.width;
h[1]=size.height;
}

0.9222757653525141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<287,291>

-------- No Patch ---------


-------- Similar Code ---------
if(this.leftBlock!=null){
Size2D size=this.leftBlock.arrange(g2,c2);
w[2]=size.width;
h[2]=size.height;
}

0.9222757653525141
/home/dale/d4j/Chart/Chart_3/source/org/jfree/chart/block/BorderArrangement.java<295,299>

-------- No Patch ---------

